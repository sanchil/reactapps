{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid5 from '../../../components/grids/grid5';\nimport { Box, Paper, Typography } from '@material-ui/core';\nimport * as astyles from '../../../components/styles';\nimport qry from '../../../data/db/queries';\nimport dataObj from '../../../data/db/dbobj';\nimport { securePwd, getFormattedDate, getFormattedTime } from '../../../lib/utils';\nimport { useAppContext } from '../../../lib/userhooks';\nimport Alert from '../../../components/snacks';\nimport RegisterForm from './registerform';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    flex: 'auto',\n    width: '90%',\n    maxWidth: '90%',\n    height: 300,\n    borderRadius: 15,\n    margin: 20,\n    padding: '20px 20px 20px 50px'\n  },\n  headerpanel: astyles.headerpanel(theme),\n  header: astyles.header(theme),\n  panel: astyles.panel(theme),\n  panel1: astyles.panel1(theme),\n  bannerpanel: _objectSpread(_objectSpread({}, astyles.bannerpanel(theme)), {}, {\n    [theme.breakpoints.up('xs')]: {\n      margin: '10px 5px 10px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      margin: '15px 10px 15px'\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: '20px 30px 10px'\n    }\n  }),\n  banner: _objectSpread(_objectSpread({}, astyles.banner(theme)), {}, {\n    [theme.breakpoints.up('xs')]: {\n      margin: 3,\n      padding: '5px 5px 5px 10px',\n      height: 800\n    },\n    [theme.breakpoints.up('sm')]: {\n      margin: 5,\n      padding: '10px 10px 10px 25px',\n      height: 700\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: 10,\n      padding: '20px 20px 20px 50px',\n      height: 600\n    }\n  }),\n  centerpanel: _objectSpread(_objectSpread({}, astyles.centerpanel(theme)), {}, {\n    [theme.breakpoints.up('xs')]: {\n      margin: '10px 5px 10px'\n    },\n    [theme.breakpoints.up('sm')]: {\n      margin: '15px 10px 15px'\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: '20px 30px 10px'\n    }\n  }),\n  center: astyles.center(theme),\n  content: {}\n  /*\n  formbox: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: 'auto',\n      flexFlow: 'row wrap',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      alignContent: 'flex-start',\n      width: '80%',\n      height: '80%',\n   },\n  formsection: {\n      [theme.breakpoints.up('xs')]: {\n          flexFlow: 'column wrap',\n          //    height: 450,\n      },\n      [theme.breakpoints.up('md')]: {\n          flexFlow: 'row wrap',\n          //      height: 200,\n      },\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: 'auto',\n       justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      alignContent: 'flex-start',\n      width: '80%',\n      margin: 'auto',\n      //   borderTop: '1px solid grey',\n  },\n  formheader: {\n      [theme.breakpoints.up('xs')]: {\n          width: '90%',\n          height: '10%',\n      },\n      [theme.breakpoints.up('md')]: {\n          width: '10%',\n          height: '90%',\n      },\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: 'auto',\n      flexFlow: 'row wrap',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      alignContent: 'flex-start',\n       //  border: '2px solid green',\n  },\n  formcontent: {\n      [theme.breakpoints.up('xs')]: {\n          width: '90%',\n          height: '80%',\n      },\n      [theme.breakpoints.up('md')]: {\n          width: '90%',\n          height: '90%',\n      },\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: 'auto',\n      flexFlow: 'row wrap',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      alignContent: 'flex-start',\n      width: '80%',\n      height: '90%',\n      //    border: '2px solid green',\n  },\n  formcontrol: {\n      display: 'flex',\n      flex: 'auto',\n      flexFlow: 'row nowrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      padding: '50px 300px 10px 10px',\n       width: '100%',\n      margin: 'auto',\n      //     border:'1px solid blue',\n  }\n  */\n\n}));\n\nconst Register = props => {\n  const classes = useStyles();\n  const {\n    0: submitted,\n    1: setSubmitted\n  } = useState(false);\n  const {\n    0: open,\n    1: handleAlert\n  } = useState(false);\n  const {\n    0: errmesg,\n    1: setErrMesg\n  } = useState(\"\");\n  const {\n    pathname\n  } = useLocation(); //  const { appstate, dispatch } = useContext(AppContext);\n\n  const {\n    appstate,\n    dispatch\n  } = useAppContext();\n  const regUserData = dataObj.userObj;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  const validations = data => {\n    // Check email id\n    if (!data.email) {\n      return [false, \" Please enter your email address !! \"];\n    } // Check first name\n\n\n    if (!data.fname) {\n      return [false, \" Please enter the first name !! \"];\n    } // Check last name\n    //   if (!data.lname) {\n    //       return [false, \" Please enter the last name !! \"];\n    //   }\n    // Check phone\n\n\n    if (!data.phone) {\n      return [false, \" Please enter your phone number !! \"];\n    } // Check for empty password \n\n\n    if (!data.pwd) {\n      return [false, \" Please enter a password !! \"];\n    } // Check for empty second password\n\n\n    if (!data.pwd1) {\n      return [false, \" Please enter the same password one more time !! \"];\n    } // Check password equality\n\n\n    if (data.pwd !== data.pwd1) {\n      return [false, \" Please enter matching passwords !! \"];\n    }\n\n    return [true, \"\"];\n  };\n\n  const handleSubmit = e => {\n    try {\n      let abortController = new AbortController();\n      const dt = new Date(); //  console.log('formatted date: '+getFormattedDate(dt));\n      //   console.log('formatted time: '+getFormattedTime(dt));\n      //   let pwd = seregUserData.pwd\n      //   let pwd1 = regUserData.pwd1;\n      //  regUserData.pwd1 = securePwd(regUserData.pwd1);\n\n      regUserData.type = 'USER';\n      regUserData.dataorigin = 'register';\n      regUserData.dataflow = 'ADDUSER';\n      regUserData.subtype = 'REGUSER';\n      regUserData.status = 'active'; // newregister, active, inactive\n\n      regUserData.current = false;\n      regUserData.date = getFormattedDate(dt, '/');\n      regUserData.time = getFormattedTime(dt, ':');\n      regUserData.createDate = getFormattedDate(dt, '/');\n      regUserData.createTime = getFormattedTime(dt, ':'); //     console.log('Secured PWD : ' + regUserData.pwd);\n      //     console.log('Secured PWD1 : ' + regUserData.pwd1);\n\n      if (validations(regUserData)[0]) {\n        regUserData.pwd = securePwd(regUserData.pwd);\n        delete regUserData.pwd1; // console.log('User data: '+ JSON.stringify(regUserData));\n\n        /**\n         * qry.addData and qry.getData are generic methods for adding data to pouch db\n         * and must be used hence forth.\n         * \n         * \n         *  */\n        // qry.addData('types/users','emailid',regUserData, { signal: abortController.signal })\n        // .then(res => console.log(\"User added successfully\" + JSON.stringify(res)))\n        // .catch(err => console.log('Error adding user : >>> ' + err[1].message)); \n\n        qry.addUser(regUserData, {\n          signal: abortController.signal\n        }).then(res => {\n          console.log(\"User added successfully\" + JSON.stringify(res));\n          setSubmitted(true);\n        }).catch(err => {\n          console.log('Error adding user : >>> ' + err[1].message);\n          throw new Error(err[1].message);\n        });\n      } else {\n        abortController.abort();\n        throw new Error(validations(regUserData)[1]);\n      }\n    } catch (err) {\n      console.log(\"Exception occured adding user: \" + ':: ' + errmesg + '::' + err.message);\n      setErrMesg(err.message);\n      handleAlert(true);\n    }\n  };\n\n  const handleChange = inp => e => {\n    regUserData[inp] = e.target.value; //    console.log('form data: ' + JSON.stringify(regUserData));\n  };\n\n  const handleAddrChange = inp => e => {\n    regUserData.addr[inp] = e.target.value; //    console.log('form data: ' + JSON.stringify(regUserData));\n  };\n\n  return __jsx(Grid5, null, __jsx(Box, {\n    className: classes.headerpanel\n  }, __jsx(Paper, {\n    className: classes.header,\n    elevation: 3\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    gutterBottom: true\n  }, \"List your property with us and find access to our unique group of buyers. We will help you maximize your returns.\"))), __jsx(Box, {\n    className: classes.bannerpanel\n  }, __jsx(Paper, {\n    className: classes.banner,\n    elevation: 3\n  }, __jsx(RegisterForm, {\n    submitted: submitted,\n    handleChange: handleChange,\n    handleAddrChange: handleAddrChange,\n    handleSubmit: handleSubmit\n  }))), __jsx(Box, {\n    className: classes.centerpanel\n  }, __jsx(Paper, {\n    className: classes.center,\n    elevation: 3\n  }, __jsx(Box, {\n    className: classes.content\n  }, __jsx(\"div\", null, \"Why Register? \", __jsx(\"br\", null)), __jsx(\"div\", null, \"Why me\"), __jsx(\"div\", null, \"ok\")))), __jsx(Box, {\n    className: classes.panel\n  }, __jsx(Paper, {\n    className: classes.panel1,\n    elevation: 3\n  }, __jsx(Alert, {\n    open: open,\n    handleClose: () => handleAlert(false)\n  }, __jsx(\"p\", null, errmesg)))), __jsx(Box, {\n    className: classes.panel\n  }, __jsx(Paper, {\n    className: classes.panel1,\n    elevation: 3\n  }, \"Three\")), __jsx(Box, {\n    className: classes.panel\n  }, __jsx(Paper, {\n    className: classes.panel1,\n    elevation: 3\n  }, \"four\")), __jsx(Box, {\n    className: classes.panel\n  }, __jsx(Paper, {\n    className: classes.panel1,\n    elevation: 3\n  }, \"Five\")), __jsx(Box, {\n    className: classes.panel\n  }, __jsx(Paper, {\n    className: classes.panel1,\n    elevation: 3\n  }, \"Six\")), __jsx(Box, {\n    className: classes.panel\n  }, __jsx(Paper, {\n    className: classes.panel1,\n    elevation: 3\n  }, \"Seven\")));\n};\n\nexport default Register;\n/* const useFormStyles = makeStyles(theme=>({\n    formbox: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '80%',\n        opacity: 1.0,\n        transition: 'opacity 2s',\n    },\n    formsection: {\n        [theme.breakpoints.up('xs')]: {\n            flexFlow: 'column wrap',\n            //    height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            flexFlow: 'row wrap',\n            //      height: 200,\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        margin: 'auto',\n        //   borderTop: '1px solid grey',\n    },\n    formheader: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '10%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n\n        //  border: '2px solid green',\n    },\n    formcontent: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '80%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '90%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '90%',\n        //    border: '2px solid green',\n    },\n    formcontrol: {\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row nowrap',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        padding: '50px 300px 10px 10px',\n\n        width: '100%',\n        margin: 'auto',\n        //     border:'1px solid blue',\n    },\n\n    \"@keyframes anim1\": {\n\n    }\n\n}))\n\nconst RegisterForm = (props) => {\n    const classes = useFormStyles();\n    \n\n    if(!props.submitted){\n        return (\n            <Box className={classes.formbox}>\n                <Box className={classes.formsection} >\n                    <Box className={classes.formheader}>\n                        User Id\n                </Box>\n                    <Box className={classes.formcontent} >\n                        <TextF\n                            type=\"email\"\n                            label=\"Email Id: This will be your user id\"\n                            width=\"72%\"\n                            onChange={props.handleChange('email')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Pls re-enter the same password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd1')} required />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Details\n                </Box>\n                    <Box className={classes.formcontent}>\n    \n                        <TextF\n                            label=\"First Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('fname')} />\n                        <TextF\n                            label=\"Last Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('lname')} />\n                        <TextF\n                            label=\"Phone\"\n                            width=\"72%\"\n                            onChange={props.handleChange('phone')} />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Address\n                </Box>\n                    <Box className={classes.formcontent}>\n                        <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                        <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                        <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                        <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                        <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                        <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                        <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                    </Box>\n                </Box>\n    \n    \n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n    \n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <Box className={classes.formcontrol}>\n                            <Button onClick={props.handleSubmit}>Submit</Button>\n                            <Button>Reset</Button>\n                        </Box>\n    \n                    </Box>\n                </Box>\n            </Box>);\n    }else{\n        return(<div>\n            Thank you for submitting the form !!;\n        </div>);\n\n    }\n    \n    \n}  */","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/content/admin/register/index.js"],"names":["React","useEffect","useState","useLocation","makeStyles","Grid5","Box","Paper","Typography","astyles","qry","dataObj","securePwd","getFormattedDate","getFormattedTime","useAppContext","Alert","RegisterForm","useStyles","theme","root","boxSizing","display","flexFlow","flex","width","maxWidth","height","borderRadius","margin","padding","headerpanel","header","panel","panel1","bannerpanel","breakpoints","up","banner","centerpanel","center","content","Register","props","classes","submitted","setSubmitted","open","handleAlert","errmesg","setErrMesg","pathname","appstate","dispatch","regUserData","userObj","window","scrollTo","validations","data","email","fname","phone","pwd","pwd1","handleSubmit","e","abortController","AbortController","dt","Date","type","dataorigin","dataflow","subtype","status","current","date","time","createDate","createTime","addUser","signal","then","res","console","log","JSON","stringify","catch","err","message","Error","abort","handleChange","inp","target","value","handleAddrChange","addr"],"mappings":"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":["import React, { useEffect, useState, createRef, useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid5 from '../../../components/grids/grid5';\nimport { Box, Paper, Typography, Button } from '@material-ui/core';\nimport theme from '../../../theme';\nimport * as astyles from '../../../components/styles';\nimport { blue, yellow, amber } from '@material-ui/core/colors';\nimport { AppContext } from '../../../state/appcntxt';\nimport { TextF, Sel, Inp } from '../../../components/datacomponents/inputcomponents';\nimport qry from '../../../data/db/queries';\nimport dataObj from '../../../data/db/dbobj';\n\nimport { securePwd, getFormattedDate, getFormattedTime } from '../../../lib/utils';\nimport { useAppContext } from '../../../lib/userhooks';\nimport Alert from '../../../components/snacks';\nimport RegisterForm from './registerform';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexFlow: 'row wrap',\n        flex: 'auto',\n        width: '90%',\n        maxWidth: '90%',\n        height: 300,\n        borderRadius: 15,\n        margin: 20,\n        padding: '20px 20px 20px 50px'\n\n    },\n    headerpanel: astyles.headerpanel(theme),\n    header: astyles.header(theme),\n    panel: astyles.panel(theme),\n    panel1: astyles.panel1(theme),\n    bannerpanel: {\n        ...astyles.bannerpanel(theme),\n        [theme.breakpoints.up('xs')]: {\n            margin: '10px 5px 10px',\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '15px 10px 15px',\n        },\n        [theme.breakpoints.up('md')]: {\n            margin: '20px 30px 10px',\n        },\n    },\n\n    banner: {\n        ...astyles.banner(theme),\n        [theme.breakpoints.up('xs')]: {\n            margin: 3,\n            padding: '5px 5px 5px 10px',\n            height: 800,\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: 5,\n            padding: '10px 10px 10px 25px',\n            height: 700,\n        },\n        [theme.breakpoints.up('md')]: {\n            margin: 10,\n            padding: '20px 20px 20px 50px',\n            height: 600,\n        },\n\n    },\n    centerpanel: {\n        ...astyles.centerpanel(theme),\n        [theme.breakpoints.up('xs')]: {\n            margin: '10px 5px 10px',\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '15px 10px 15px',\n        },\n        [theme.breakpoints.up('md')]: {\n            margin: '20px 30px 10px',\n        },\n    },\n    center: astyles.center(theme),\n    content: {\n\n    },\n    /*\n    formbox: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '80%',\n\n    },\n    formsection: {\n        [theme.breakpoints.up('xs')]: {\n            flexFlow: 'column wrap',\n            //    height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            flexFlow: 'row wrap',\n            //      height: 200,\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        margin: 'auto',\n        //   borderTop: '1px solid grey',\n    },\n    formheader: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '10%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n\n        //  border: '2px solid green',\n    },\n    formcontent: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '80%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '90%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '90%',\n        //    border: '2px solid green',\n    },\n    formcontrol: {\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row nowrap',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        padding: '50px 300px 10px 10px',\n\n        width: '100%',\n        margin: 'auto',\n        //     border:'1px solid blue',\n    }\n    */\n\n\n}));\n\nconst Register = (props) => {\n    const classes = useStyles();\n    const [submitted, setSubmitted] = useState(false);\n    const [open, handleAlert] = useState(false);\n    const [errmesg, setErrMesg] = useState(\"\");\n    const { pathname } = useLocation();\n    //  const { appstate, dispatch } = useContext(AppContext);\n    const { appstate, dispatch } = useAppContext();\n\n    const regUserData = dataObj.userObj;\n\n\n   \n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    const validations = (data) => {\n        // Check email id\n\n        if (!data.email) {\n            return [false, \" Please enter your email address !! \"];\n        }\n\n        // Check first name\n\n        if (!data.fname) {\n            return [false, \" Please enter the first name !! \"];\n        }\n\n        // Check last name\n\n        //   if (!data.lname) {\n        //       return [false, \" Please enter the last name !! \"];\n        //   }\n\n        // Check phone\n\n        if (!data.phone) {\n            return [false, \" Please enter your phone number !! \"];\n        }\n\n        // Check for empty password \n\n        if (!data.pwd) {\n            return [false, \" Please enter a password !! \"];\n        }\n\n        // Check for empty second password\n\n        if (!data.pwd1) {\n            return [false, \" Please enter the same password one more time !! \"];\n        }\n\n        // Check password equality\n        if (data.pwd !== data.pwd1) {\n            return [false, \" Please enter matching passwords !! \"];\n        }\n\n        return [true, \"\"];\n    }\n\n    const handleSubmit = e => {\n        try {\n            let abortController = new AbortController();\n            const dt = new Date();\n            //  console.log('formatted date: '+getFormattedDate(dt));\n            //   console.log('formatted time: '+getFormattedTime(dt));\n            //   let pwd = seregUserData.pwd\n            //   let pwd1 = regUserData.pwd1;\n\n\n            //  regUserData.pwd1 = securePwd(regUserData.pwd1);\n\n            regUserData.type = 'USER';\n            regUserData.dataorigin = 'register';\n            regUserData.dataflow = 'ADDUSER';\n            regUserData.subtype = 'REGUSER';\n            regUserData.status = 'active'; // newregister, active, inactive\n            regUserData.current = false;\n            regUserData.date = getFormattedDate(dt, '/');\n            regUserData.time = getFormattedTime(dt, ':');\n            regUserData.createDate = getFormattedDate(dt, '/');\n            regUserData.createTime = getFormattedTime(dt, ':');\n\n\n            //     console.log('Secured PWD : ' + regUserData.pwd);\n            //     console.log('Secured PWD1 : ' + regUserData.pwd1);\n\n            if (validations(regUserData)[0]) {\n                regUserData.pwd = securePwd(regUserData.pwd);\n                delete regUserData.pwd1;\n                // console.log('User data: '+ JSON.stringify(regUserData));\n\n\n                /**\n                 * qry.addData and qry.getData are generic methods for adding data to pouch db\n                 * and must be used hence forth.\n                 * \n                 * \n                 *  */\n\n                // qry.addData('types/users','emailid',regUserData, { signal: abortController.signal })\n                // .then(res => console.log(\"User added successfully\" + JSON.stringify(res)))\n                // .catch(err => console.log('Error adding user : >>> ' + err[1].message)); \n\n\n                qry.addUser(regUserData, { signal: abortController.signal })\n                    .then(res => {\n                        console.log(\"User added successfully\" + JSON.stringify(res));\n                        setSubmitted(true);\n                    })\n                    .catch(err => {\n                        console.log('Error adding user : >>> ' + err[1].message);\n                        throw new Error(err[1].message);\n                    });\n            } else {\n                abortController.abort();\n                throw new Error(validations(regUserData)[1]);\n            }\n\n        } catch (err) {\n            console.log(\"Exception occured adding user: \" + ':: ' + errmesg + '::' + err.message);\n            setErrMesg(err.message);\n            handleAlert(true);            \n\n        }\n\n    }\n\n    const handleChange = inp => e => {\n\n        regUserData[inp] = e.target.value;\n\n        //    console.log('form data: ' + JSON.stringify(regUserData));\n    }\n\n    const handleAddrChange = inp => e => {\n\n        regUserData.addr[inp] = e.target.value;\n\n        //    console.log('form data: ' + JSON.stringify(regUserData));\n    }\n\n\n    return (\n        <Grid5>\n            <Box className={classes.headerpanel}>\n                <Paper className={classes.header} elevation={3}>\n                    <Typography variant=\"h5\" gutterBottom>\n                        List your property with us and find access to our unique group of buyers.\n                        We will help you maximize your returns.\n                    </Typography>\n                </Paper>\n            </Box>\n            <Box className={classes.bannerpanel} >\n\n                <Paper className={classes.banner} elevation={3} >\n                    <RegisterForm \n                          submitted={submitted}\n                          handleChange={handleChange} \n                          handleAddrChange={handleAddrChange} \n                          handleSubmit={handleSubmit} />\n\n                \n\n                    {/* <Box className={classes.formbox}>\n                        <Box className={classes.formsection} >\n                            <Box className={classes.formheader}>\n                                User Id\n                            </Box>\n                            <Box className={classes.formcontent} >\n                                <TextF\n                                    type=\"email\"\n                                    label=\"Email Id: This will be your user id\"\n                                    width=\"72%\"\n                                    onChange={handleChange('email')} required />\n                                <TextF\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    width=\"35%\"\n                                    onChange={handleChange('pwd')} required />\n                                <TextF\n                                    type=\"password\"\n                                    label=\"Pls re-enter the same password\"\n                                    width=\"35%\"\n                                    onChange={handleChange('pwd1')} required />\n\n                            </Box>\n                        </Box>\n                        <Box className={classes.formsection}>\n                            <Box className={classes.formheader}>\n                                Details\n                            </Box>\n                            <Box className={classes.formcontent}>\n\n                                <TextF\n                                    label=\"First Name\"\n                                    width=\"35%\"\n                                    onChange={handleChange('fname')} />\n                                <TextF\n                                    label=\"Last Name\"\n                                    width=\"35%\"\n                                    onChange={handleChange('lname')} />\n                                <TextF\n                                    label=\"Phone\"\n                                    width=\"72%\"\n                                    onChange={handleChange('phone')} />\n\n                            </Box>\n                        </Box>\n                        <Box className={classes.formsection}>\n                            <Box className={classes.formheader}>\n                                Address\n                            </Box>\n                            <Box className={classes.formcontent}>\n                                <TextF label=\"Unit No\" width=\"10%\" onChange={handleAddrChange('unitno')} />\n                                <TextF label=\"Street No\" width=\"10%\" onChange={handleAddrChange('stno')} />\n                                <TextF label=\"Street Name\" width=\"48%\" onChange={handleAddrChange('stname')} />\n                                <TextF label=\"City\" width=\"50%\" onChange={handleAddrChange('city')} />\n                                <TextF label=\"Zip\" width=\"20%\" onChange={handleAddrChange('zip')} />\n                                <TextF label=\"Province\" width=\"45%\" onChange={handleAddrChange('province')} />\n                                <TextF label=\"Country\" width=\"25%\" onChange={handleAddrChange('country')} />\n                            </Box>\n                        </Box>\n\n\n                        <Box className={classes.formsection}>\n                            <Box className={classes.formheader}>\n\n                            </Box>\n                            <Box className={classes.formcontent}>\n                                <Box className={classes.formcontrol}>\n                                    <Button onClick={handleSubmit}>Submit</Button>\n                                    <Button>Reset</Button>\n                                </Box>\n\n                            </Box>\n                        </Box>\n                    </Box>\n */}\n                </Paper>\n\n            </Box>\n\n            <Box className={classes.centerpanel} >\n\n                <Paper className={classes.center} elevation={3}>\n                    <Box className={classes.content}>\n                        <div>\n                            Why Register? <br />\n\n                        </div>\n                        <div>Why me</div>\n                        <div>ok</div>\n\n\n\n                    </Box>\n                </Paper>\n            </Box>\n\n\n\n            <Box className={classes.panel}>\n                <Paper className={classes.panel1} elevation={3}>\n\n                    <Alert open={open} handleClose={() => handleAlert(false)}>\n                        <p>{errmesg}</p>\n                    </Alert>\n\n\n                </Paper>\n            </Box>\n            <Box className={classes.panel}>\n                <Paper className={classes.panel1} elevation={3}>\n                    Three\n          </Paper>\n            </Box>\n            <Box className={classes.panel}>\n                <Paper className={classes.panel1} elevation={3}>\n                    four\n          </Paper>\n            </Box>\n            <Box className={classes.panel}>\n                <Paper className={classes.panel1} elevation={3}>\n                    Five\n          </Paper>\n            </Box>\n            <Box className={classes.panel}>\n                <Paper className={classes.panel1} elevation={3}>\n                    Six\n          </Paper>\n            </Box>\n            <Box className={classes.panel}>\n                <Paper className={classes.panel1} elevation={3}>\n                    Seven\n          </Paper>\n            </Box>\n\n\n        </Grid5>\n    );\n\n\n}\n\nexport default Register;\n\n\n/* const useFormStyles = makeStyles(theme=>({\n    formbox: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '80%',\n        opacity: 1.0,\n        transition: 'opacity 2s',\n    },\n    formsection: {\n        [theme.breakpoints.up('xs')]: {\n            flexFlow: 'column wrap',\n            //    height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            flexFlow: 'row wrap',\n            //      height: 200,\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        margin: 'auto',\n        //   borderTop: '1px solid grey',\n    },\n    formheader: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '10%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n\n        //  border: '2px solid green',\n    },\n    formcontent: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '80%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '90%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '90%',\n        //    border: '2px solid green',\n    },\n    formcontrol: {\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row nowrap',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        padding: '50px 300px 10px 10px',\n\n        width: '100%',\n        margin: 'auto',\n        //     border:'1px solid blue',\n    },\n\n    \"@keyframes anim1\": {\n\n    }\n\n}))\n\nconst RegisterForm = (props) => {\n    const classes = useFormStyles();\n    \n\n    if(!props.submitted){\n        return (\n            <Box className={classes.formbox}>\n                <Box className={classes.formsection} >\n                    <Box className={classes.formheader}>\n                        User Id\n                </Box>\n                    <Box className={classes.formcontent} >\n                        <TextF\n                            type=\"email\"\n                            label=\"Email Id: This will be your user id\"\n                            width=\"72%\"\n                            onChange={props.handleChange('email')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Pls re-enter the same password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd1')} required />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Details\n                </Box>\n                    <Box className={classes.formcontent}>\n    \n                        <TextF\n                            label=\"First Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('fname')} />\n                        <TextF\n                            label=\"Last Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('lname')} />\n                        <TextF\n                            label=\"Phone\"\n                            width=\"72%\"\n                            onChange={props.handleChange('phone')} />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Address\n                </Box>\n                    <Box className={classes.formcontent}>\n                        <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                        <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                        <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                        <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                        <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                        <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                        <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                    </Box>\n                </Box>\n    \n    \n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n    \n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <Box className={classes.formcontrol}>\n                            <Button onClick={props.handleSubmit}>Submit</Button>\n                            <Button>Reset</Button>\n                        </Box>\n    \n                    </Box>\n                </Box>\n            </Box>);\n    }else{\n        return(<div>\n            Thank you for submitting the form !!;\n        </div>);\n\n    }\n    \n    \n}  */"]},"metadata":{},"sourceType":"module"}