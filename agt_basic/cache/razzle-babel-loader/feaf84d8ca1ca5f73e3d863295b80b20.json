{"ast":null,"code":"import _defineProperty from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Fab } from '@material-ui/core';\nimport * as astyles from '../../styles';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { ApptInfo } from '../../cnvimg/components';\nimport { getHomeImages } from '../../../data/db/queries';\nimport { CnvCloud } from '../../cnvimg/index';\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2, _objectSpread3, _objectSpread4, _objectSpread5, _objectSpread6, _objectSpread7;\n\n  return {\n    root: {},\n    imgframe: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, {\n      flexFlow: 'row wrap',\n      //   maxWidth: '100%',\n      //  height: '100%',\n      //   border: '3px solid blue',\n      borderRadius: 15 // zIndex: 1\n\n    }),\n    imgcontent: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up('xs'), {\n      width: '100%',\n      height: '50%',\n      maxWidth: '100%',\n      maxHeight: '50%'\n    }), _defineProperty(_objectSpread2, theme.breakpoints.up('md'), {\n      flex: '50%',\n      width: '50%',\n      maxWidth: '50%',\n      height: '100%',\n      maxHeight: '100%'\n    }), _objectSpread2)),\n    imgbox1: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, theme.breakpoints.up('xs'), {\n      width: '100%',\n      height: '20%'\n    }), _defineProperty(_objectSpread3, theme.breakpoints.up('md'), {\n      flex: '100%',\n      maxWidth: '100%',\n      height: '50%'\n    }), _defineProperty(_objectSpread3, \"padding\", 2), _objectSpread3)),\n    imgbox2: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, theme.breakpoints.up('xs'), {\n      width: '100%',\n      height: '20%'\n    }), _defineProperty(_objectSpread4, theme.breakpoints.up('md'), {\n      flex: '50%',\n      maxWidth: '50%',\n      height: '25%'\n    }), _defineProperty(_objectSpread4, \"padding\", 2), _objectSpread4)),\n    imgbox3: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, theme.breakpoints.up('xs'), {\n      width: '100%',\n      height: '25%'\n    }), _defineProperty(_objectSpread5, theme.breakpoints.up('md'), {\n      flex: '100%',\n      maxWidth: '100%',\n      height: '25%'\n    }), _defineProperty(_objectSpread5, \"padding\", 2), _objectSpread5)),\n    imgbox4: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, (_objectSpread6 = {}, _defineProperty(_objectSpread6, theme.breakpoints.up('xs'), {\n      width: '100%',\n      height: '25%'\n    }), _defineProperty(_objectSpread6, theme.breakpoints.up('md'), {\n      flex: '50%',\n      maxWidth: '50%',\n      height: '25%'\n    }), _defineProperty(_objectSpread6, \"padding\", 2), _objectSpread6)),\n    imgbox5: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, (_objectSpread7 = {}, _defineProperty(_objectSpread7, theme.breakpoints.up('xs'), {\n      width: '100%',\n      height: '25%',\n      padding: 20\n    }), _defineProperty(_objectSpread7, theme.breakpoints.up('md'), {\n      flex: '50%',\n      maxWidth: '50%',\n      height: '25%',\n      padding: 30\n    }), _objectSpread7)),\n    img: {\n      width: 'auto',\n      height: '100%',\n      objectFit: 'cover'\n    },\n    buyoverlay: {\n      position: 'fixed',\n      display: 'none',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0,0,0,0.7)',\n      zIndex: 1100\n    }\n  };\n});\nexport var ImgGridCloud = function ImgGridCloud(props) {\n  //    const urlArray = props.srcArr;\n  var homes = props.homesArr;\n  var page = props.page || 8;\n  var start = 0;\n\n  var _useState = useState([]),\n      urlArrayCloud = _useState[0],\n      setUrlArrayCloud = _useState[1]; //  console.log('URL Cloud Array: ' + urlArrayCloud);\n\n\n  var handleImgGridNav = function handleImgGridNav(val) {\n    return function (e) {\n      if (val === 'home') {\n        start = 0; //    console.log(\"Current home Page: \" + start);\n      }\n\n      if (val === 'left') {\n        start = start <= urlArrayCloud.length - 8 ? start + page : start; //  console.log(\"Current Left Page: \" + start);\n      }\n\n      if (val === 'right') {\n        start = start >= 8 ? start - page : start; //console.log(\"Current Right Page: \" + start);\n      }\n    };\n  };\n  /*   const infoArr = [\n        {\n            title: \"home\",\n            name: \"page1\",\n            briefdescr: \"A beautiful home\",\n            price: \"1000000\",\n            area: \"5000\",\n            bedrooms: 10,\n            bathrooms: 9,\n            garages: 10,\n            address: \"3800 Washington St \\\n                      San Francisco, CA 94118\",\n            location: \" A superb location in BC Vancouver \",\n        },\n       ]\n  */\n\n  /*  const getBlobUrlArr = (homes) => {\n       //   console.log('AR: homes: '+JSON.stringify(homes));\n       if (homes && homes.length !== 0) {\n           return homes.map(home => {\n               if (home._attachments) {\n                   //  const keys = Object.keys(home._attachments);\n                   // console.log('AR: keys: '+JSON.stringify(keys));\n                   // if (typeof keys !== 'undefined') {\n                    //    const ar = keys.map(key=>blobUtil.createObjectURL(home._attachments[key].data));\n                     //   console.log('AR is: '+JSON.stringify(ar));\n                     //   return keys.map(key=>blobUtil.createObjectURL(home._attachments[key].data));;\n                       \n                    //} \n                     return blobUtil.createObjectURL(home._attachments['imgliving'].data);\n                 } else {\n                   return \"\";\n               }\n           });\n       } else {\n           // return [[],[],[],[],[],[],[],[],[]];\n           return [];\n       }\n   }\n     let urlArray = useMemo(() => getBlobUrlArr(homes), [homes]);\n  */\n  //########################################################\n\n\n  var getBlobUrlArrCloud = function getBlobUrlArrCloud(homes) {\n    if (homes && homes.length !== 0) {\n      Promise.all(homes.map(function (home) {\n        if (home.cloudinary) {\n          //  console.log('Home retrieved is: ' + JSON.stringify(home._id));\n          return getHomeImages(home._id).then(function (res) {\n            return res; //       console.log(\"RES:: \" + JSON.stringify(res));\n\n            /*\n            if (res.resources) {\n                return res.resources.map(tag => {\n                    console.log('Public id: ' + tag.public_id);\n                    return tag.public_id;\n                })\n            }\n            */\n          });\n        } else {\n          return [];\n        }\n      })).then(function (res) {\n        setUrlArrayCloud(res);\n      });\n    }\n  };\n\n  var getImgUrl = function getImgUrl(homes) {\n    if (homes && homes.length !== 0) {\n      return homes.map(function (home) {\n        if (home.cloudinary) {\n          var _ar = home.cloudinary; //   console.log(\"Home is:\" + JSON.stringify(home.cloudinary[0].secure_url));\n          //  return home.cloudinary[0].secure_url;\n\n          return home.cloudinary[0].public_id; //CONST.CLOUDINARY.imageTag()\n        }\n      });\n    }\n  };\n\n  useEffect(function () {\n    //    getBlobUrlArrCloud(homes);\n    var g = getImgUrl(homes);\n\n    if (g) {\n      setUrlArrayCloud(g);\n    } //console.log(\"OBJ type is: \"+ g.constructor.name); \n\n  }, [homes]);\n  /*  let urlArrayCloud = useMemo(() => {\n       //    getBlobUrlArrCloud(homes);\n   }, [homes]);\n  */\n  // console.log('Home array: '+JSON.stringify(urlArrayCloud));  \n  //###############################################################\n\n  var getCloudinaryImgUrl = function getCloudinaryImgUrl(arr) {\n    var regexp = /_imgliving/;\n    return new Promise(function (resolve, reject) {\n      if (typeof arr !== 'undefined') {\n        var url = arr.filter(function (url) {\n          return regexp.test(url);\n        });\n\n        if (typeof url !== 'undefined') {\n          resolve(url);\n        } else {\n          resolve(arr[0]);\n        }\n      } else {\n        reject(Error('No urls found is null'));\n      }\n    }); // .then(url => JSON.stringify(url));\n  };\n\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    className: classes.imgframe\n  }, __jsx(Box, {\n    className: classes.imgcontent\n  }, __jsx(Box, {\n    className: classes.imgbox1,\n    style: {\n      borderTopLeftRadius: 15\n    }\n  }, __jsx(CnvCloud, {\n    w: 800,\n    h: 600,\n    overlay: true //  src={getCloudinaryImgUrl(urlArrayCloud[start])}\n    ,\n    src: urlArrayCloud[start],\n    position: \"topleft\"\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"medium\",\n    position: \"topleft\"\n  }))), __jsx(Box, {\n    className: classes.imgbox2\n  }, __jsx(CnvCloud, {\n    w: 400,\n    h: 300,\n    overlay: true //   src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n    ,\n    src: urlArrayCloud[++start]\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\"\n  }))), __jsx(Box, {\n    className: classes.imgbox2\n  }, __jsx(CnvCloud, {\n    w: 400,\n    h: 300,\n    overlay: true // src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n    ,\n    src: urlArrayCloud[++start]\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\"\n  }))), __jsx(Box, {\n    className: classes.imgbox2,\n    style: {\n      borderBottomLeftRadius: 15\n    }\n  }, __jsx(CnvCloud, {\n    w: 400,\n    h: 300,\n    overlay: true // src={getCloudinaryImgUrl(urlArrayCloud[++start])}\n    ,\n    src: urlArrayCloud[++start],\n    position: \"bottomleft\"\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\",\n    position: \"bottomleft\"\n  }))), __jsx(Box, {\n    className: classes.imgbox2\n  }, __jsx(CnvCloud, {\n    w: 400,\n    h: 300,\n    overlay: true //  src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n    ,\n    src: urlArrayCloud[++start]\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\"\n  })))), __jsx(Box, {\n    className: classes.imgcontent\n  }, __jsx(Box, {\n    className: classes.imgbox3,\n    style: {\n      borderTopRightRadius: 15\n    }\n  }, __jsx(CnvCloud, {\n    w: 800,\n    h: 300,\n    overlay: true //   src={getCloudinaryImgUrl(urlArrayCloud[++start])}\n    ,\n    src: urlArrayCloud[++start],\n    position: \"topright\",\n    gravity: 'south'\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\",\n    position: \"topright\"\n  }))), __jsx(Box, {\n    className: classes.imgbox4\n  }, __jsx(CnvCloud, {\n    w: 400,\n    h: 300,\n    overlay: true //    src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n    ,\n    src: urlArrayCloud[++start]\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\"\n  }))), __jsx(Box, {\n    className: classes.imgbox4\n  }, __jsx(CnvCloud, {\n    w: 400,\n    h: 300,\n    overlay: true //  src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n    ,\n    src: urlArrayCloud[++start]\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"large\"\n  }))), __jsx(Box, {\n    className: classes.imgbox1,\n    style: {\n      borderBottomRightRadius: 15\n    }\n  }, __jsx(CnvCloud, {\n    w: 800,\n    h: 600,\n    overlay: true //       src={getCloudinaryImgUrl(urlArrayCloud[++start])}\n    ,\n    src: urlArrayCloud[++start],\n    position: \"bottomright\"\n  }, __jsx(ApptInfo, {\n    info: homes[start],\n    size: \"medium\",\n    position: \"bottomright\"\n  })))), __jsx(Box, {\n    className: classes.imgcontent\n  }, __jsx(Box, {\n    className: classes.imgbox5\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"left\",\n    onClick: handleImgGridNav('left')\n  }, \" \", __jsx(ArrowLeftIcon, {\n    fontSize: \"large\"\n  }), \" \"), __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"homeimg\",\n    onClick: handleImgGridNav('home')\n  }, \" \", __jsx(AutorenewIcon, {\n    fontSize: \"large\"\n  }), \" \"), __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"right\",\n    onClick: handleImgGridNav('right')\n  }, __jsx(ArrowRightIcon, {\n    fontSize: \"large\"\n  }))))));\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/components/grids/imgrid/cloudgrid.js"],"names":["React","useEffect","useState","makeStyles","Box","Fab","astyles","ArrowLeftIcon","ArrowRightIcon","AutorenewIcon","ApptInfo","getHomeImages","CnvCloud","useStyles","theme","root","imgframe","rowstyle","flexFlow","borderRadius","imgcontent","breakpoints","up","width","height","maxWidth","maxHeight","flex","imgbox1","imgbox2","imgbox3","imgbox4","imgbox5","padding","img","objectFit","buyoverlay","position","display","left","top","backgroundColor","zIndex","ImgGridCloud","props","homes","homesArr","page","start","urlArrayCloud","setUrlArrayCloud","handleImgGridNav","val","e","length","getBlobUrlArrCloud","Promise","all","map","home","cloudinary","_id","then","res","getImgUrl","_ar","public_id","g","getCloudinaryImgUrl","arr","regexp","resolve","reject","url","filter","test","Error","classes","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, createRef, useState, useContext, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, Fab } from '@material-ui/core';\nimport theme from '../../../theme';\nimport * as astyles from '../../styles';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { ApptInfo } from '../../cnvimg/components';\nimport { getHomeImages } from '../../../data/db/queries';\nimport { CnvCloud } from '../../cnvimg/index';\nimport CONST from '../../../consts';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n\n    },\n    imgframe: {\n        ...astyles.rowstyle(theme),\n\n        flexFlow: 'row wrap',\n        //   maxWidth: '100%',\n        //  height: '100%',\n        //   border: '3px solid blue',\n        borderRadius: 15,\n        // zIndex: 1\n\n    },\n    imgcontent: {\n        ...astyles.rowstyle(theme),\n        [theme.breakpoints.up('xs')]: {\n            width: '100%',\n            height: '50%',\n            maxWidth: '100%',\n            maxHeight: '50%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '50%',\n            width: '50%',\n            maxWidth: '50%',\n            height: '100%',\n            maxHeight: '100%',\n        },\n\n\n\n        //    border: '1px solid black',\n\n\n\n    },\n    imgbox1: {\n        ...astyles.rowstyle(theme),\n        [theme.breakpoints.up('xs')]: {\n\n            width: '100%',\n            height: '20%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '100%',\n            maxWidth: '100%',\n            height: '50%',\n        },\n        padding: 2,\n        //  border: '1px solid green',\n    },\n    imgbox2: {\n        ...astyles.rowstyle(theme),\n        [theme.breakpoints.up('xs')]: {\n            width: '100%',\n            height: '20%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '50%',\n            maxWidth: '50%',\n            height: '25%',\n\n        },\n        padding: 2,\n        //  border: '1px solid pink',\n\n\n\n    },\n    imgbox3: {\n        ...astyles.rowstyle(theme),\n        [theme.breakpoints.up('xs')]: {\n            width: '100%',\n            height: '25%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '100%',\n            maxWidth: '100%',\n            height: '25%',\n        },\n        padding: 2,\n        //   border: '1px solid yellow',\n\n    },\n    imgbox4: {\n        ...astyles.rowstyle(theme),\n        [theme.breakpoints.up('xs')]: {\n            width: '100%',\n            height: '25%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '50%',\n            maxWidth: '50%',\n            height: '25%',\n\n        },\n        padding: 2,\n        //    border: '1px solid pink',\n    },\n    imgbox5: {\n        ...astyles.rowstyle(theme),\n        [theme.breakpoints.up('xs')]: {\n            width: '100%',\n            height: '25%',\n            padding: 20,\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '50%',\n            maxWidth: '50%',\n            height: '25%',\n            padding: 30,\n        },\n\n        //    border: '1px solid pink',\n    },\n    img: {\n        width: 'auto',\n        height: '100%',\n        objectFit: 'cover',\n    },\n    buyoverlay: {\n        position: 'fixed',\n        display: 'none',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        zIndex: 1100,\n    }\n\n\n\n\n\n\n\n\n\n}));\n\n\n\nexport const ImgGridCloud = (props) => {\n\n\n    //    const urlArray = props.srcArr;\n    const homes = props.homesArr;\n    const page = props.page || 8;\n    let start = 0;\n    const [urlArrayCloud, setUrlArrayCloud] = useState([]);\n  //  console.log('URL Cloud Array: ' + urlArrayCloud);\n\n    const handleImgGridNav = (val) => e => {\n        if (val === 'home') {\n            start = 0;\n            //    console.log(\"Current home Page: \" + start);\n        }\n        if (val === 'left') {\n            start = (start <= (urlArrayCloud.length - 8)) ? (start + page) : start;\n            //  console.log(\"Current Left Page: \" + start);\n        }\n        if (val === 'right') {\n\n            start = (start >= 8) ? start - page : start;\n            //console.log(\"Current Right Page: \" + start);\n        }\n    }\n\n    /*   const infoArr = [\n          {\n              title: \"home\",\n              name: \"page1\",\n              briefdescr: \"A beautiful home\",\n              price: \"1000000\",\n              area: \"5000\",\n              bedrooms: 10,\n              bathrooms: 9,\n              garages: 10,\n              address: \"3800 Washington St \\\n                        San Francisco, CA 94118\",\n              location: \" A superb location in BC Vancouver \",\n          },\n  \n      ]\n   */\n\n\n    /*  const getBlobUrlArr = (homes) => {\n         //   console.log('AR: homes: '+JSON.stringify(homes));\n         if (homes && homes.length !== 0) {\n             return homes.map(home => {\n                 if (home._attachments) {\n                     //  const keys = Object.keys(home._attachments);\n                     // console.log('AR: keys: '+JSON.stringify(keys));\n                     // if (typeof keys !== 'undefined') {\n                      //    const ar = keys.map(key=>blobUtil.createObjectURL(home._attachments[key].data));\n                       //   console.log('AR is: '+JSON.stringify(ar));\n                       //   return keys.map(key=>blobUtil.createObjectURL(home._attachments[key].data));;\n                         \n                      //} \n \n                     return blobUtil.createObjectURL(home._attachments['imgliving'].data);\n \n                 } else {\n                     return \"\";\n                 }\n             });\n         } else {\n             // return [[],[],[],[],[],[],[],[],[]];\n             return [];\n         }\n     }\n \n     let urlArray = useMemo(() => getBlobUrlArr(homes), [homes]);\n  */\n\n\n\n    //########################################################\n    const getBlobUrlArrCloud = (homes) => {\n        if (homes && homes.length !== 0) {\n            Promise.all(homes.map(home => {\n                if (home.cloudinary) {\n                    //  console.log('Home retrieved is: ' + JSON.stringify(home._id));\n                    return getHomeImages(home._id)\n                        .then(res => {\n                            return res;\n                            //       console.log(\"RES:: \" + JSON.stringify(res));\n                            /*\n                            if (res.resources) {\n                                return res.resources.map(tag => {\n                                    console.log('Public id: ' + tag.public_id);\n                                    return tag.public_id;\n                                })\n                            }\n                            */\n\n                        })\n                } else {\n                    return []\n                }\n\n            }))\n                .then(res => {\n                    setUrlArrayCloud(res);\n                });\n        }\n    }\n\n    const getImgUrl = (homes) => {\n        if (homes && homes.length !== 0) {\n            return homes.map(home => {\n                if (home.cloudinary) {\n                    const _ar = home.cloudinary;\n                 //   console.log(\"Home is:\" + JSON.stringify(home.cloudinary[0].secure_url));\n                  //  return home.cloudinary[0].secure_url;\n                    return home.cloudinary[0].public_id;\n                    //CONST.CLOUDINARY.imageTag()\n                }\n\n            })\n        }\n\n    }\n    useEffect(() => {\n        //    getBlobUrlArrCloud(homes);\n        const g = getImgUrl(homes);\n        if (g) {\n            setUrlArrayCloud(g);\n        }\n        //console.log(\"OBJ type is: \"+ g.constructor.name); \n\n    }, [homes]);\n\n\n    /*  let urlArrayCloud = useMemo(() => {\n         //    getBlobUrlArrCloud(homes);\n     }, [homes]);\n  */\n\n    // console.log('Home array: '+JSON.stringify(urlArrayCloud));  \n\n    //###############################################################\n\n    const getCloudinaryImgUrl = (arr) => {\n        const regexp = /_imgliving/;\n\n        return new Promise((resolve, reject) => {\n            if (typeof arr !== 'undefined') {\n                const url = arr.filter(url => regexp.test(url));\n                if (typeof url !== 'undefined') {\n                    resolve(url);\n                } else {\n                    resolve(arr[0]);\n                }\n\n            } else {\n                reject(Error('No urls found is null'));\n            }\n\n\n        })\n        // .then(url => JSON.stringify(url));\n\n    }\n\n\n\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n\n\n            <Box className={classes.imgframe}>\n\n                <Box className={classes.imgcontent}>\n                    <Box className={classes.imgbox1} style={{ borderTopLeftRadius: 15 }}>\n                        <CnvCloud\n                            w={800}\n                            h={600}\n                            overlay={true}\n                            //  src={getCloudinaryImgUrl(urlArrayCloud[start])}\n                            src={urlArrayCloud[start]}\n                            position={\"topleft\"}\n\n                        >\n                            <ApptInfo info={homes[start]} size=\"medium\"  position={\"topleft\"} />\n                        </CnvCloud>\n\n                    </Box>\n\n                    <Box className={classes.imgbox2}>\n                        <CnvCloud\n                            w={400}\n                            h={300}\n                            overlay={true}\n                            //   src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n                            src={urlArrayCloud[++start]} >\n                            <ApptInfo info={homes[start]} size=\"large\" />\n                        </CnvCloud>\n\n\n\n                    </Box>\n                    <Box className={classes.imgbox2}>\n                        <CnvCloud\n                            w={400}\n                            h={300}\n                            overlay={true}\n                            // src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n                            src={urlArrayCloud[++start]} >\n                            <ApptInfo info={homes[start]} size=\"large\" />\n                        </CnvCloud>\n\n\n                    </Box>\n\n                    <Box className={classes.imgbox2} style={{ borderBottomLeftRadius: 15 }}>\n                        <CnvCloud\n                            w={400}\n                            h={300}\n                            overlay={true}\n                            // src={getCloudinaryImgUrl(urlArrayCloud[++start])}\n                            src={urlArrayCloud[++start]}\n                            position={\"bottomleft\"} >\n                            <ApptInfo info={homes[start]} size=\"large\" position={\"bottomleft\"}/>\n                        </CnvCloud>\n\n\n                    </Box>\n                    <Box className={classes.imgbox2}>\n                        <CnvCloud\n                            w={400}\n                            h={300}\n                            overlay={true}\n                            //  src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n                            src={urlArrayCloud[++start]} >\n                            <ApptInfo info={homes[start]} size=\"large\" />\n                        </CnvCloud>\n\n\n\n                    </Box>\n                </Box>\n\n                <Box className={classes.imgcontent}>\n\n                    <Box className={classes.imgbox3} style={{ borderTopRightRadius: 15 }}>\n                        <CnvCloud\n                            w={800}\n                            h={300}\n                            overlay={true}\n                            //   src={getCloudinaryImgUrl(urlArrayCloud[++start])}\n                            src={urlArrayCloud[++start]}\n                            position={\"topright\"}\n                            gravity={'south'}>\n                            <ApptInfo info={homes[start]} size=\"large\" position={\"topright\"}/>\n                        </CnvCloud>\n\n                    </Box>\n\n                    <Box className={classes.imgbox4}>\n                        <CnvCloud\n                            w={400}\n                            h={300}\n                            overlay={true}\n                            //    src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n                            src={urlArrayCloud[++start]} >\n                            <ApptInfo info={homes[start]} size=\"large\" />\n                        </CnvCloud>\n\n\n                    </Box>\n                    <Box className={classes.imgbox4}>\n                        <CnvCloud\n                            w={400}\n                            h={300}\n                            overlay={true}\n                            //  src={getCloudinaryImgUrl(urlArrayCloud[++start])} >\n                            src={urlArrayCloud[++start]} >\n                            <ApptInfo info={homes[start]} size=\"large\" />\n                        </CnvCloud>\n\n\n                    </Box>\n                    <Box className={classes.imgbox1} style={{ borderBottomRightRadius: 15 }}>\n\n                        <CnvCloud\n                            w={800}\n                            h={600}\n                            overlay={true}\n                            //       src={getCloudinaryImgUrl(urlArrayCloud[++start])}\n                            src={urlArrayCloud[++start]}\n                            position={\"bottomright\"} >\n                            <ApptInfo info={homes[start]} size=\"medium\" position={\"bottomright\"}/>\n                        </CnvCloud>\n                    </Box>\n\n                </Box>\n                <Box className={classes.imgcontent}>\n                    <Box className={classes.imgbox5}>\n                        <Fab color=\"primary\" aria-label=\"left\" onClick={handleImgGridNav('left')} > <ArrowLeftIcon fontSize=\"large\" /> </Fab>\n                        <Fab color=\"primary\" aria-label=\"homeimg\" onClick={handleImgGridNav('home')} > <AutorenewIcon fontSize=\"large\" /> </Fab>\n                        <Fab color=\"primary\" aria-label=\"right\" onClick={handleImgGridNav('right')} ><ArrowRightIcon fontSize=\"large\" /></Fab>\n                    </Box>\n                </Box>\n\n            </Box>\n\n        </React.Fragment>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}