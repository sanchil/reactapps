{"ast":null,"code":"import _objectSpread from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { db } from '../index';\nimport { v4 as uuidv4 } from 'uuid'; //import * as blobUtil from 'blob-util';\n//import cloudinary from 'cloudinary-core';\n\nimport CONST from '../../consts';\nimport { getFormattedDate, getFormattedTime } from '../../lib/utils';\nimport { setCookie } from '../../lib/utils';\nexport var addData = function addData(qrytype, field, data, abort) {\n  console.log('calling add user');\n  data._id = uuidv4() + \"\";\n\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', function (evt) {\n      throw new Error(\"Add data for \".concat(data.type, \"failed\"));\n    });\n  }\n\n  return getData(qrytype, field, data, abort).then(function (user) {\n    throw [3, Error('Data exists')];\n  })[\"catch\"](function (err) {\n    //  console.log('Error message is >>>>>: '+err[1].message);\n    if (err[0] === 0) {\n      return db.put(data);\n    }\n\n    if (err[0] === 3) {\n      throw [3, Error('Data exists')];\n    }\n  });\n};\nexport var addUpdateData = function addUpdateData(qrytype, field, data, abort) {\n  // console.log('calling add user' + JSON.stringify(data));\n  var dt = new Date();\n\n  if (data.subtype) {\n    data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n  } else {\n    data._id = uuidv4() + \"\";\n  }\n\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', function (evt) {\n      throw new Error(\"Add data for \".concat(data.type, \" failed\"));\n    });\n  }\n\n  return getData(qrytype, field, data, abort).then(function (user) {\n    console.log(\"User exists : updating: \" + JSON.stringify(user));\n    data._id = user._id;\n    data._rev = user._rev;\n    data.date = getFormattedDate(dt, '/');\n    data.time = getFormattedTime(dt, ':');\n    data.createDate = user.createDate;\n    data.createTime = user.createTime;\n    return db.put(data);\n  })[\"catch\"](function (err) {\n    //  console.log('Error message is >>>>>: '+err[1].message);\n    if (err[0] === 0) {\n      data.date = getFormattedDate(dt, '/');\n      data.time = getFormattedTime(dt, ':');\n      data.createDate = getFormattedDate(dt, '/');\n      data.createTime = getFormattedTime(dt, ':');\n      return db.put(data);\n    }\n\n    if (err[0] === 3) {\n      throw [3, Error('Data exists')];\n    }\n  });\n};\nexport var getData = function getData(qrytype, field, data, abort) {\n  console.log(\"1:::\");\n  var id = eval(\"data.\".concat(field)); //  console.log(\"ID is: \" + id);\n\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', function (evt) {\n      throw [4, Error(\"Get data for \".concat(data.type, \" failed\"))];\n    });\n  }\n\n  var opt = {\n    latest: true,\n    include_docs: true\n  };\n  return db.query(qrytype, opt).then(function (res) {\n    return res.rows.filter(function (doc) {\n      return eval(\"doc.doc.\".concat(field)) === id;\n    });\n  }).then(function (res) {\n    //  console.log('Doc is: ' + JSON.stringify(res));\n    if (res) {\n      if (res.length === 1) {\n        return res[0].doc;\n      } else if (res.length > 1) {\n        throw [1, Error('Multiple data objects found')];\n      } else {\n        throw [0, Error('No data found')];\n      }\n    }\n  });\n};\nexport var addUser = function addUser(data, opt) {\n  console.log('calling add user');\n\n  if (data.subtype) {\n    data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n  } else {\n    data._id = uuidv4() + \"\";\n  } //data.type = 'USER';\n\n\n  if (opt.signal) {\n    opt.signal.addEventListener('abort', function (evt) {\n      throw new Error('Add user failed');\n    });\n  }\n\n  return getUser(data.email, opt).then(function (user) {\n    throw [3, Error('User id exists')];\n  })[\"catch\"](function (err) {\n    //  console.log('Error message is >>>>>: '+err[1].message);\n    if (err[0] === 0) {\n      return db.put(data);\n    }\n\n    if (err[0] === 3) {\n      throw [3, Error('User id exists')];\n    }\n  }); // return db.put(data);\n};\nexport var getUser = function getUser(data, abort) {\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', function (evt) {\n      throw [4, Error('Get user failed')];\n    });\n  }\n\n  var opt = {\n    latest: true,\n    include_docs: true\n  };\n  return db.query('types/users', opt).then(function (res) {\n    return res.rows.filter(function (doc) {\n      return doc.doc.email === data;\n    });\n  }).then(function (res) {\n    if (res) {\n      if (res.length === 1) {\n        return res[0].doc;\n      } else if (res.length > 1) {\n        throw [1, Error('Multiple users found')];\n      } else {\n        throw [0, Error('No user found')];\n      }\n    }\n  });\n};\nexport var createSession = function createSession(src, data, dispatch) {\n  console.log('Source is: ' + src);\n\n  try {\n    switch (src) {\n      case 'google':\n        {\n          console.log('calling add social user for google');\n          setCookie('sessid', 'SESSION_GOOGLE_' + data.id);\n          sessionStorage.setItem('sessid', 'SESSION_GOOGLE_' + data.id);\n          setRedis('SESSION_GOOGLE_' + data.id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_GOOGLE_' + data.id,\n            source: 'google',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      case 'facebook':\n        {\n          console.log('calling add social user for fb ');\n          setCookie('sessid', 'SESSION_FB_' + data.id);\n          sessionStorage.setItem('sessid', 'SESSION_FB_' + data.id);\n          setRedis('SESSION_FB_' + data.id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_FB_' + data.id,\n            source: 'facebook',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      case 'amazon':\n        {\n          console.log('calling add social user for amz');\n          setCookie('sessid', 'SESSION_AMZ_' + data.user_id);\n          sessionStorage.setItem('sessid', 'SESSION_AMZ_' + data.user_id);\n          setRedis('SESSION_AMZ_' + data.user_id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_AMZ_' + data.user_id,\n            source: 'amazon',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      case 'twitter':\n        {\n          console.log('calling add social user for tw');\n          setCookie('sessid', 'SESSION_TW_' + data.user_id);\n          sessionStorage.setItem('sessid', 'SESSION_TW_' + data.user_id);\n          setRedis('SESSION_TW_' + data.user_id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_TW_' + data.user_id,\n            source: 'twitter',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      default:\n        {\n          console.log('Sorry no source match');\n          break;\n        }\n    }\n  } catch (error) {\n    console.log('Add social error: ' + error.message);\n  }\n};\nexport var addContact = function addContact(data) {\n  data._id = uuidv4() + \"\";\n  data.type = 'CONTACT';\n  return db.put(data);\n};\nexport var addHome = function addHome(data, img) {\n  data._id = uuidv4() + \"\";\n  data.type = 'HOME';\n  var keys = Object.keys(img);\n  var keylength = keys.length;\n  console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n  return db.put(data).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //  console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //   console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(function (res) {\n    var key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  });\n};\nexport var addHomeCloud = function addHomeCloud(data, img) {\n  data._id = uuidv4() + \"\";\n  data.type = 'HOME';\n  var keys = Object.keys(img);\n  var keylength = keys.length;\n  console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n  return db.put(data).then(function (res) {\n    if (keys) {\n      return Promise.all(keys.map(function (key) {\n        return uploadImg(res.id, key, img[key]);\n      }));\n    } else {\n      return {};\n    }\n  }).then(function (cloudinaryArrId) {\n    return updateHome(cloudinaryArrId);\n  });\n};\nexport var updateHome = function updateHome(cloudinaryRes) {\n  var docId = cloudinaryRes[0].tags[0];\n  console.log('DocId updated with cloudinary urls: ' + docId);\n\n  if (docId) {\n    return db.get(docId, {\n      latest: true\n    }).then(function (doc) {\n      return db.put(_objectSpread(_objectSpread({}, doc), {}, {\n        cloudinary: cloudinaryRes\n      }), {\n        rev: doc._rev\n      });\n    });\n  } else {\n    return {};\n  }\n};\nexport var uploadImg = function uploadImg(id, key, blob) {\n  var controller = new AbortController();\n  var frmData = new FormData();\n  var apptype = blob.type; // frmData.set('upload_preset', 'jxaf96un');\n\n  frmData.set('upload_preset', CONST.CLOUDINARY_UPLOAD_PRESET);\n  frmData.set('public_id', id + '_' + key);\n  frmData.set('tags', id);\n  frmData.set('file', blob, key);\n  frmData.set('folder', 'img');\n  /* \n       const headers = new Headers({\n          'Access-Control-Request-Headers':'Accept, Content-Type',\n          'Accept': 'multipart/form-data',\n          'Content-Type': 'multipart/form-data',        \n         \n      });  */\n  //    const uri = 'https://api.cloudinary.com/v1_1/hgill/image/upload';\n\n  var uri = \"\".concat(CONST.CLOUDINARY_API, \"/\").concat(CONST.CLOUDINARY_DB, \"/image/upload\");\n  var req = new Request(uri, {\n    signal: controller.signal,\n    method: 'POST',\n    // mode:'no-cors',\n    // headers: headers,\n    body: frmData\n  });\n  return fetch(req).then(function (res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return {};\n    }\n  });\n};\nexport var getHomes = function getHomes(opt, abort) {\n  return db.query('types/homes', opt).then(function (res) {\n    if (abort.signal) {\n      abort.signal.addEventListener('abort', function (event) {// throw new Error(\"get homes aborted\");\n      });\n    }\n\n    return res.rows.map(function (elem) {\n      return elem.doc;\n    });\n  });\n  /*return db.allDocs({include_docs:true,attachments:true,binary:true})\n  .then(res=>console.log(\"All  docs are:\"+JSON.stringify(res)));\n    */\n};\nexport var getHome = function getHome(id, abort) {\n  var opts = {\n    latest: true,\n    attachments: true,\n    binary: true\n  };\n  return db.get(id, opts);\n};\nexport var testCouchdb = function testCouchdb() {\n  var url = 'http://localhost:5984';\n  var opts = {\n    method: 'GET'\n  };\n  return fetch(url);\n};\nexport var getHomeImages = function getHomeImages(tag) {\n  var controller = new AbortController(); //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n  //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n\n  var searchUri = \"\".concat(CONST.CLOUDINARY_URL_DB, \"/image/upload/img/\").concat(tag, \"_imgliving.jpg\"); //  console.log('Cloudinary searcy uri : '+ searchUri);\n\n  var req = new Request(searchUri, {\n    signal: controller.signal\n  });\n  return fetch(req).then(function (response) {\n    if (response.ok) {\n      //    console.log('PASS :: searchuri :: ' + searchUri);\n      //return response.json();\n      return response.url;\n    } else {\n      // console.log('FAIL :: searchuri :: ' + searchUri);\n      return {};\n    }\n  });\n};\n/*\nexport const getHomeImages = (tag) => {\n    const controller = new AbortController();\n\n    //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n    //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n    const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n\n  //  console.log('Cloudinary searcy uri : '+ searchUri);\n    const req = new Request(searchUri, {\n        signal: controller.signal\n    });\n\n    return fetch(req)\n        .then(response => {\n            if (response.ok) {\n                  console.log('PASS :: searchuri :: ' + searchUri);\n                return response.json();\n            } else {\n                 console.log('FAIL :: searchuri :: ' + searchUri);\n                return {}\n            }\n        })\n\n\n}\n*/\n\nexport var getRedis = function getRedis(key) {\n  var uri = CONST.SESSIONURL + '/get';\n  var url = new URL(uri);\n  url.search = new URLSearchParams({\n    key: key\n  });\n  var req = new Request(url, {\n    method: 'GET'\n  });\n  return fetch(req).then(function (res) {\n    if (res.ok) {\n      return res.text();\n    } else {\n      return \"\";\n    }\n  });\n};\nexport var setRedis = function setRedis(key, val) {\n  var uri = CONST.SESSIONURL + '/set';\n  var url = new URL(uri);\n  url.search = new URLSearchParams({\n    key: key,\n    val: \"\".concat(JSON.stringify(val))\n  });\n  var req = new Request(url, {\n    method: 'GET'\n  });\n  return fetch(req).then(function (res) {\n    if (res.ok) {\n      return res.text();\n    } else {\n      return \"\";\n    }\n  });\n};\nexport var deleteRedis = function deleteRedis(key) {\n  var uri = CONST.SESSIONURL + '/del';\n  var url = new URL(uri);\n  url.search = new URLSearchParams({\n    key: key\n  });\n  var req = new Request(url, {\n    method: 'GET'\n  });\n  return fetch(req).then(function (res) {\n    if (res.ok) {\n      return res.text();\n    } else {\n      return \"\";\n    }\n  });\n};\nexport default {\n  addData: addData,\n  addUpdateData: addUpdateData,\n  getData: getData,\n  addUser: addUser,\n  createSession: createSession,\n  getUser: getUser,\n  addContact: addContact,\n  addHomeCloud: addHomeCloud,\n  updateHome: updateHome,\n  getHome: getHome,\n  getHomes: getHomes,\n  testCouchdb: testCouchdb,\n  uploadImg: uploadImg,\n  getHomeImages: getHomeImages,\n  getRedis: getRedis,\n  setRedis: setRedis,\n  deleteRedis: deleteRedis\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/data/db/queries.js"],"names":["db","v4","uuidv4","CONST","getFormattedDate","getFormattedTime","setCookie","addData","qrytype","field","data","abort","console","log","_id","signal","addEventListener","evt","Error","type","getData","then","user","err","put","addUpdateData","dt","Date","subtype","toLowerCase","JSON","stringify","_rev","date","time","createDate","createTime","id","eval","opt","latest","include_docs","query","res","rows","filter","doc","length","addUser","getUser","email","createSession","src","dispatch","sessionStorage","setItem","setRedis","login","sessid","source","sessdata","user_id","error","message","addContact","addHome","img","keys","Object","keylength","key","shift","putAttachment","rev","addHomeCloud","Promise","all","map","uploadImg","cloudinaryArrId","updateHome","cloudinaryRes","docId","tags","get","cloudinary","blob","controller","AbortController","frmData","FormData","apptype","set","CLOUDINARY_UPLOAD_PRESET","uri","CLOUDINARY_API","CLOUDINARY_DB","req","Request","method","body","fetch","ok","json","getHomes","event","elem","getHome","opts","attachments","binary","testCouchdb","url","getHomeImages","tag","searchUri","CLOUDINARY_URL_DB","response","getRedis","SESSIONURL","URL","search","URLSearchParams","text","val","deleteRedis"],"mappings":"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","sourcesContent":["import { db } from '../index';\n\nimport { v4 as uuidv4 } from 'uuid';\n//import * as blobUtil from 'blob-util';\n//import cloudinary from 'cloudinary-core';\nimport CONST from '../../consts';\nimport { getFormattedDate, getFormattedTime } from '../../lib/utils';\n\nimport { setCookie } from '../../lib/utils';\n\n\nexport const addData = (qrytype, field, data, abort) => {\n    console.log('calling add user');\n    data._id = uuidv4() + \"\";\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw new Error(`Add data for ${data.type}failed`);\n        });\n    }\n\n    return getData(qrytype, field, data, abort)\n        .then(user => { throw [3, Error('Data exists')] })\n        .catch(err => {\n            //  console.log('Error message is >>>>>: '+err[1].message);\n            if (err[0] === 0) {\n                return db.put(data);\n            }\n            if (err[0] === 3) {\n                throw [3, Error('Data exists')]\n            }\n        });\n\n}\n\n\nexport const addUpdateData = (qrytype, field, data, abort) => {\n    // console.log('calling add user' + JSON.stringify(data));\n    const dt = new Date();\n\n    if (data.subtype) {\n        data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n    } else {\n        data._id = uuidv4() + \"\";\n    }\n\n\n\n\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw new Error(`Add data for ${data.type} failed`);\n        });\n    }\n\n    return getData(qrytype, field, data, abort)\n        .then(user => {\n            console.log(\"User exists : updating: \" + JSON.stringify(user));\n            data._id = user._id;\n            data._rev = user._rev;\n\n            data.date = getFormattedDate(dt, '/');\n            data.time = getFormattedTime(dt, ':');\n            data.createDate = user.createDate;\n            data.createTime = user.createTime;\n\n\n\n            return db.put(data);\n        })\n        .catch(err => {\n            //  console.log('Error message is >>>>>: '+err[1].message);\n            if (err[0] === 0) {\n                data.date = getFormattedDate(dt, '/');\n                data.time = getFormattedTime(dt, ':');\n                data.createDate = getFormattedDate(dt, '/');\n                data.createTime = getFormattedTime(dt, ':');\n                return db.put(data);\n            }\n            if (err[0] === 3) {\n                throw [3, Error('Data exists')]\n            }\n        });\n\n}\n\nexport const getData = (qrytype, field, data, abort) => {\n    console.log(\"1:::\");\n    const id = eval(`data.${field}`);\n\n    //  console.log(\"ID is: \" + id);\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw [4, Error(`Get data for ${data.type} failed`)];\n        });\n    }\n\n    const opt = { latest: true, include_docs: true }\n    return db.query(qrytype, opt)\n        .then(res => res.rows.filter(doc => eval(`doc.doc.${field}`) === id))\n        .then(res => {\n            //  console.log('Doc is: ' + JSON.stringify(res));\n\n            if (res) {\n                if (res.length === 1) {\n                    return res[0].doc;\n                } else if (res.length > 1) {\n                    throw [1, Error('Multiple data objects found')];\n                } else {\n                    throw [0, Error('No data found')]\n                }\n            }\n        })\n\n}\n\n\nexport const addUser = (data, opt) => {\n    console.log('calling add user');\n\n    if (data.subtype) {\n        data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n    } else {\n        data._id = uuidv4() + \"\";\n    }\n\n    //data.type = 'USER';\n    if (opt.signal) {\n        opt.signal.addEventListener('abort', evt => {\n            throw new Error('Add user failed');\n        });\n    }\n\n    return getUser(data.email, opt)\n        .then(user => { throw [3, Error('User id exists')] })\n        .catch(err => {\n            //  console.log('Error message is >>>>>: '+err[1].message);\n            if (err[0] === 0) {\n                return db.put(data);\n            }\n            if (err[0] === 3) {\n                throw [3, Error('User id exists')]\n            }\n        });\n\n\n    // return db.put(data);\n\n}\n\nexport const getUser = (data, abort) => {\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw [4, Error('Get user failed')];\n        });\n    }\n\n    const opt = { latest: true, include_docs: true }\n    return db.query('types/users', opt)\n        .then(res => res.rows.filter(doc => doc.doc.email === data))\n        .then(res => {\n\n            if (res) {\n                if (res.length === 1) {\n                    return res[0].doc;\n                } else if (res.length > 1) {\n                    throw [1, Error('Multiple users found')];\n                } else {\n                    throw [0, Error('No user found')]\n                }\n            }\n        })\n\n}\n\nexport const createSession = (src, data, dispatch) => {\n\n    console.log('Source is: ' + src);\n\n\n    try {\n        switch (src) {\n            case 'google': {\n\n                console.log('calling add social user for google');\n                setCookie('sessid', 'SESSION_GOOGLE_' + data.id);\n                sessionStorage.setItem('sessid', 'SESSION_GOOGLE_' + data.id);\n                setRedis('SESSION_GOOGLE_' + data.id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_GOOGLE_' + data.id, source: 'google', sessdata: {}, data: data });\n                break;\n\n\n            }\n            case 'facebook': {\n                console.log('calling add social user for fb ');\n                setCookie('sessid', 'SESSION_FB_' + data.id);\n                sessionStorage.setItem('sessid', 'SESSION_FB_' + data.id);\n                setRedis('SESSION_FB_' + data.id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_FB_' + data.id, source: 'facebook', sessdata: {}, data: data });\n                break;\n            }\n\n            case 'amazon': {\n                console.log('calling add social user for amz');\n                setCookie('sessid', 'SESSION_AMZ_' + data.user_id);\n                sessionStorage.setItem('sessid', 'SESSION_AMZ_' + data.user_id);\n                setRedis('SESSION_AMZ_' + data.user_id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_AMZ_' + data.user_id, source: 'amazon', sessdata: {}, data: data });\n                break;\n            }\n\n            case 'twitter': {\n                console.log('calling add social user for tw');\n                setCookie('sessid', 'SESSION_TW_' + data.user_id);\n                sessionStorage.setItem('sessid', 'SESSION_TW_' + data.user_id);\n                setRedis('SESSION_TW_' + data.user_id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_TW_' + data.user_id, source: 'twitter', sessdata: {}, data: data });\n\n                break;\n            }\n\n            default: {\n                console.log('Sorry no source match');\n                break;\n            }\n\n        }\n\n    } catch (error) {\n        console.log('Add social error: ' + error.message)\n    }\n\n\n\n\n}\n\n\n\n\n\n\n\nexport const addContact = (data) => {\n    data._id = uuidv4() + \"\";\n    data.type = 'CONTACT';\n    return db.put(data);\n}\n\nexport const addHome = (data, img) => {\n    data._id = uuidv4() + \"\";\n    data.type = 'HOME';\n    const keys = Object.keys(img);\n    let keylength = keys.length;\n    console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n\n    return db.put(data)\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //  console.log(\"Image is :\" + key + \" : \" + img[key]);\n\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //   console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        });\n\n}\n\n\n\nexport const addHomeCloud = (data, img) => {\n    data._id = uuidv4() + \"\";\n    data.type = 'HOME';\n    const keys = Object.keys(img);\n    let keylength = keys.length;\n    console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n\n    return db.put(data)\n        .then(res => {\n            if (keys) {\n                return Promise.all(keys.map(key => {\n                    return uploadImg(res.id, key, img[key]);\n                }));\n            } else {\n                return {}\n            }\n\n        })\n        .then(cloudinaryArrId => {\n            return updateHome(cloudinaryArrId);\n        })\n\n\n}\n\nexport const updateHome = (cloudinaryRes) => {\n    const docId = cloudinaryRes[0].tags[0];\n    console.log('DocId updated with cloudinary urls: ' + docId);\n    if (docId) {\n        return db\n            .get(docId, { latest: true })\n            .then(doc => db.put({ ...doc, cloudinary: cloudinaryRes }, { rev: doc._rev }))\n\n    } else {\n        return {}\n    }\n\n}\n\n\nexport const uploadImg = (id, key, blob) => {\n    const controller = new AbortController();\n    const frmData = new FormData();\n    const apptype = blob.type;\n\n   // frmData.set('upload_preset', 'jxaf96un');\n    frmData.set('upload_preset', CONST.CLOUDINARY_UPLOAD_PRESET);\n    frmData.set('public_id', id + '_' + key);\n    frmData.set('tags', id);\n    frmData.set('file', blob, key);\n    frmData.set('folder', 'img');\n    /* \n         const headers = new Headers({\n            'Access-Control-Request-Headers':'Accept, Content-Type',\n            'Accept': 'multipart/form-data',\n            'Content-Type': 'multipart/form-data',        \n           \n        });  */\n\n\n    //    const uri = 'https://api.cloudinary.com/v1_1/hgill/image/upload';\n    const uri = `${CONST.CLOUDINARY_API}/${CONST.CLOUDINARY_DB}/image/upload`;\n    const req = new Request(uri, {\n        signal: controller.signal,\n        method: 'POST',\n        // mode:'no-cors',\n        // headers: headers,\n        body: frmData,\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return {}\n            }\n        })\n}\n\n\n\n\n\nexport const getHomes = (opt, abort) => {\n    return db.query('types/homes', opt)\n        .then(res => {\n\n            if (abort.signal) {\n                abort.signal.addEventListener('abort', event => {\n                    // throw new Error(\"get homes aborted\");\n                });\n            }\n            return res.rows.map(elem => elem.doc);\n        });\n\n    /*return db.allDocs({include_docs:true,attachments:true,binary:true})\n    .then(res=>console.log(\"All  docs are:\"+JSON.stringify(res)));\n      */\n\n}\n\n\n\nexport const getHome = (id, abort) => {\n    const opts = {\n        latest: true,\n        attachments: true,\n        binary: true,\n    }\n    return db.get(id, opts);\n\n}\n\n\nexport const testCouchdb = () => {\n    const url = 'http://localhost:5984';\n    const opts = {\n        method: 'GET',\n    }\n    return fetch(url);\n}\n\n\nexport const getHomeImages = (tag) => {\n    const controller = new AbortController();\n\n    //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n    //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n    const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/upload/img/${tag}_imgliving.jpg`;\n\n  //  console.log('Cloudinary searcy uri : '+ searchUri);\n    const req = new Request(searchUri, {\n        signal: controller.signal\n    });\n\n    return fetch(req)\n        .then(response => {\n            if (response.ok) {\n              //    console.log('PASS :: searchuri :: ' + searchUri);\n                //return response.json();\n                return response.url;\n            } else {\n                // console.log('FAIL :: searchuri :: ' + searchUri);\n                return {}\n            }\n        })\n\n\n}\n\n/*\nexport const getHomeImages = (tag) => {\n    const controller = new AbortController();\n\n    //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n    //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n    const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n\n  //  console.log('Cloudinary searcy uri : '+ searchUri);\n    const req = new Request(searchUri, {\n        signal: controller.signal\n    });\n\n    return fetch(req)\n        .then(response => {\n            if (response.ok) {\n                  console.log('PASS :: searchuri :: ' + searchUri);\n                return response.json();\n            } else {\n                 console.log('FAIL :: searchuri :: ' + searchUri);\n                return {}\n            }\n        })\n\n\n}\n*/\n\nexport const getRedis = (key) => {\n    const uri = CONST.SESSIONURL + '/get';\n    const url = new URL(uri);\n    url.search = new URLSearchParams({ key: key });\n    const req = new Request(url, {\n        method: 'GET'\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.text();\n            } else {\n                return \"\"\n            }\n        });\n}\n\nexport const setRedis = (key, val) => {\n    const uri = CONST.SESSIONURL + '/set';\n    const url = new URL(uri);\n    url.search = new URLSearchParams({ key: key, val: `${JSON.stringify(val)}` });\n\n    const req = new Request(url, {\n        method: 'GET'\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.text();\n            } else {\n                return \"\"\n            }\n        })\n\n}\n\nexport const deleteRedis = (key) => {\n    const uri = CONST.SESSIONURL + '/del';\n    const url = new URL(uri);\n    url.search = new URLSearchParams({ key: key });\n    const req = new Request(url, {\n        method: 'GET'\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.text();\n            } else {\n                return \"\"\n            }\n        })\n\n}\n\nexport default {\n\n    addData,\n    addUpdateData,\n    getData,\n    addUser,\n    createSession,\n    getUser,\n    addContact,\n    addHomeCloud,\n    updateHome,\n    getHome,\n    getHomes,\n    testCouchdb,\n    uploadImg,\n    getHomeImages,\n    getRedis,\n    setRedis,\n    deleteRedis\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}