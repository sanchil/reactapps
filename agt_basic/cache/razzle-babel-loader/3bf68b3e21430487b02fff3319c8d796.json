{"ast":null,"code":"//var hash = hmacsha1(KEY, DATA);\nexport var twSignIn = function twSignIn() {\n  location.href = \"/oauth/twauth\";\n};\n/* const getSignature = (inp) => {\n    let initStr = \"\";\n    let paraStr = \"\";\n    initStr = 'POST&' + encodeURIComponent(CONST.TW_REQ_TOKEN_EP) + '&';\n    paraStr = encodeURIComponent('oauth_callback') + '=' + encodeURIComponent(inp['oauth_callback']);\n    paraStr += '&' + encodeURIComponent('oauth_consumer_key') + '=' + encodeURIComponent(inp['oauth_consumer_key']);\n    paraStr += '&' + encodeURIComponent('oauth_nonce') + '=' + encodeURIComponent(inp['oauth_nonce']);\n    paraStr += '&' + encodeURIComponent('oauth_signature_method') + '=' + encodeURIComponent(inp['oauth_signature_method']);\n    paraStr += '&' + encodeURIComponent('oauth_timestamp') + '=' + encodeURIComponent(inp['oauth_timestamp']);\n    paraStr += '&' + encodeURIComponent('oauth_version') + '=' + encodeURIComponent(inp['oauth_version']);\n\n    let signStr = initStr + encodeURIComponent(paraStr);\n    return hmacsha1(CONST.TWSECRET + '&', signStr);\n\n    //return btoa(hmacsha1(CONST.TWSECRET+'&',signStr+encodeURIComponent(paraStr)));\n    //return hmacsha1(CONST.TWSECRET+'&',signStr+encodeURIComponent(paraStr));\n    //  return new Buffer(hmacsha1(CONST.TWSECRET+'&',signStr+encodeURIComponent(paraStr))).toString('base64');\n} \n*/\n\n/* \n\nexport const getTwBearToken = () => {\n\n    // const authstring = btoa(CONST.TWCLIENTID + ':' + CONST.TWSECRET);\n    const nonce = btoa('hello' + new Date().getTime() + 'twitter');\n    //  let nonce = new Buffer('hello'+new Date().getTime()+'twitter').toString('base64');\n\n    //const authstring = 'OAuth oauth_consumer_key=\"CONSUMER_API_KEY\", oauth_nonce=\"OAUTH_NONCE\", oauth_signature=\"OAUTH_SIGNATURE\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"OAUTH_TIMESTAMP\", oauth_token=\"ACCESS_TOKEN\", oauth_version=\"1.0\"'\n    //const authstring = 'OAuth oauth_nonce=\"'+nonce+'\", oauth_callback=\"http%3A%2F%2Fwebapp.org%2Ftwauth\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"'+new Date().getTime()+'\", oauth_consumer_key=\"OqEqJeafRSF11jBMStrZz\", oauth_signature=\"Pc%2BMLdv028fxCErFyi8KXFM%2BddU%3D\", oauth_version=\"1.0\"';\n    //const authstring = 'OAuth ,  oauth_callback=\"http%3A%2F%2Fapi.twitter.com%2Foauth%2Frequest_token\", oauth_consumer_key=\"'+CONST.TWCLIENTID+'\", oauth_nonce=\"'+nonce+'\", oauth_signature_method=\"HMAC-SHA1\" , oauth_timestamp=\"'+new Date().getTime()+'\",  oauth_version=\"1.0\", oauth_signature=\"Pc%2BMLdv028fxCErFyi8KXFM%2BddU%3D\"';\n\n\n    const authObj = {\n\n        oauth_callback: CONST.TWREDIRECT_URI,\n        oauth_consumer_key: CONST.TWCLIENTID,\n        oauth_nonce: nonce,\n        oauth_signature: \"\",\n        oauth_signature_method: \"HMAC-SHA1\",\n        oauth_timestamp: new Date().getTime(),\n        oauth_version: \"1.0\"\n    }\n\n\n    const authstring = 'OAuth ' + encodeURIComponent(\"oauth_callback\") + '=\"' + encodeURIComponent(authObj[\"oauth_callback\"]) + '\", ' + encodeURIComponent(\"oauth_consumer_key\") + '=\"' + encodeURIComponent(authObj[\"oauth_consumer_key\"]) + '\", ' + encodeURIComponent(\"oauth_nonce\") + '=\"' + encodeURIComponent(authObj[\"oauth_nonce\"]) + '\", ' + encodeURIComponent(\"oauth_signature\") + '=\"' + encodeURIComponent(getSignature(authObj)) + '\", ' + encodeURIComponent(\"oauth_signature_method\") + '=\"' + authObj[\"oauth_signature_method\"] + '\", ' + encodeURIComponent(\"oauth_timestamp\") + '=\"' + encodeURIComponent(authObj[\"oauth_timestamp\"]) + '\", ' + encodeURIComponent(\"oauth_version\") + '=\"' + encodeURIComponent(authObj[\"oauth_version\"]) + '\"';\n\n    console.log('Encoded tw auth string:  ' + authstring);\n    //  const uri = 'https://api.twitter.com/oauth2/token';\n    //const uri = 'https://api.twitter.com/oauth/request_token';\n    //   const uri = 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/oauth/request_token';\n\n    // const uri = 'https://webapp.org/twitterauth';\n    const url = new URL(CONST.TW_REQ_TOKEN_EP);\n\n    //   url.search = new URLSearchParams({\n    //      grant_type: 'client_credentials',\n    //  });\n   \n    //  const formData = new FormData();\n    //  formData.append('grant_type','client_credentials')\n\n    const headers = new Headers({\n        'Authorization': authstring,\n        //    'Authorization': 'Bearer ' + 'ya29.Il_ABz1maps1ttHy1f9YlRj6FMfkvlEr1T0qa062Z1976NhfWJPoLPL9SljDL1xCj1RDJBIrkxsOXNfChkbiyoEZHHOWEjNq1TEELIpcqlF02K6wYTUdQ9gviuRQWjroQw',\n        //'Accept': 'application/json',\n        //    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n        //   'Content-Length': '29',\n        //   'Accept-Encoding': 'gzip'\n        //  'Content-length':0\n    });\n\n    const reqOpts = {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        // credentials: 'omit', // include, *same-origin, omit\n        headers: headers,\n        // body:formData,\n        //    redirect: 'follow', // manual, *follow, error\n        //   referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        //   body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    }\n\n    const req = new Request('https://webapp.org/twitterauth', reqOpts)\n    return fetch(req)\n        .then(res => {\n            console.log(\"Twitter response is: \" + JSON.stringify(res));\n        })\n\n\n}\n */","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/data/auth/twauth.js"],"names":["twSignIn","location","href"],"mappings":"AAIA;AAEA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC1BC,EAAAA,QAAQ,CAACC,IAAT,GAAgB,eAAhB;AACH,CAFM;AAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import CONST from '../../consts';\nimport hmacsha1 from 'hmacsha1';\n\n\n//var hash = hmacsha1(KEY, DATA);\n\nexport const twSignIn = () => {\n    location.href = \"/oauth/twauth\";  \n}\n\n/* const getSignature = (inp) => {\n    let initStr = \"\";\n    let paraStr = \"\";\n    initStr = 'POST&' + encodeURIComponent(CONST.TW_REQ_TOKEN_EP) + '&';\n    paraStr = encodeURIComponent('oauth_callback') + '=' + encodeURIComponent(inp['oauth_callback']);\n    paraStr += '&' + encodeURIComponent('oauth_consumer_key') + '=' + encodeURIComponent(inp['oauth_consumer_key']);\n    paraStr += '&' + encodeURIComponent('oauth_nonce') + '=' + encodeURIComponent(inp['oauth_nonce']);\n    paraStr += '&' + encodeURIComponent('oauth_signature_method') + '=' + encodeURIComponent(inp['oauth_signature_method']);\n    paraStr += '&' + encodeURIComponent('oauth_timestamp') + '=' + encodeURIComponent(inp['oauth_timestamp']);\n    paraStr += '&' + encodeURIComponent('oauth_version') + '=' + encodeURIComponent(inp['oauth_version']);\n\n    let signStr = initStr + encodeURIComponent(paraStr);\n    return hmacsha1(CONST.TWSECRET + '&', signStr);\n\n    //return btoa(hmacsha1(CONST.TWSECRET+'&',signStr+encodeURIComponent(paraStr)));\n    //return hmacsha1(CONST.TWSECRET+'&',signStr+encodeURIComponent(paraStr));\n    //  return new Buffer(hmacsha1(CONST.TWSECRET+'&',signStr+encodeURIComponent(paraStr))).toString('base64');\n} \n*/\n\n/* \n\nexport const getTwBearToken = () => {\n\n    // const authstring = btoa(CONST.TWCLIENTID + ':' + CONST.TWSECRET);\n    const nonce = btoa('hello' + new Date().getTime() + 'twitter');\n    //  let nonce = new Buffer('hello'+new Date().getTime()+'twitter').toString('base64');\n\n    //const authstring = 'OAuth oauth_consumer_key=\"CONSUMER_API_KEY\", oauth_nonce=\"OAUTH_NONCE\", oauth_signature=\"OAUTH_SIGNATURE\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"OAUTH_TIMESTAMP\", oauth_token=\"ACCESS_TOKEN\", oauth_version=\"1.0\"'\n    //const authstring = 'OAuth oauth_nonce=\"'+nonce+'\", oauth_callback=\"http%3A%2F%2Fwebapp.org%2Ftwauth\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"'+new Date().getTime()+'\", oauth_consumer_key=\"OqEqJeafRSF11jBMStrZz\", oauth_signature=\"Pc%2BMLdv028fxCErFyi8KXFM%2BddU%3D\", oauth_version=\"1.0\"';\n    //const authstring = 'OAuth ,  oauth_callback=\"http%3A%2F%2Fapi.twitter.com%2Foauth%2Frequest_token\", oauth_consumer_key=\"'+CONST.TWCLIENTID+'\", oauth_nonce=\"'+nonce+'\", oauth_signature_method=\"HMAC-SHA1\" , oauth_timestamp=\"'+new Date().getTime()+'\",  oauth_version=\"1.0\", oauth_signature=\"Pc%2BMLdv028fxCErFyi8KXFM%2BddU%3D\"';\n\n\n    const authObj = {\n\n        oauth_callback: CONST.TWREDIRECT_URI,\n        oauth_consumer_key: CONST.TWCLIENTID,\n        oauth_nonce: nonce,\n        oauth_signature: \"\",\n        oauth_signature_method: \"HMAC-SHA1\",\n        oauth_timestamp: new Date().getTime(),\n        oauth_version: \"1.0\"\n    }\n\n\n    const authstring = 'OAuth ' + encodeURIComponent(\"oauth_callback\") + '=\"' + encodeURIComponent(authObj[\"oauth_callback\"]) + '\", ' + encodeURIComponent(\"oauth_consumer_key\") + '=\"' + encodeURIComponent(authObj[\"oauth_consumer_key\"]) + '\", ' + encodeURIComponent(\"oauth_nonce\") + '=\"' + encodeURIComponent(authObj[\"oauth_nonce\"]) + '\", ' + encodeURIComponent(\"oauth_signature\") + '=\"' + encodeURIComponent(getSignature(authObj)) + '\", ' + encodeURIComponent(\"oauth_signature_method\") + '=\"' + authObj[\"oauth_signature_method\"] + '\", ' + encodeURIComponent(\"oauth_timestamp\") + '=\"' + encodeURIComponent(authObj[\"oauth_timestamp\"]) + '\", ' + encodeURIComponent(\"oauth_version\") + '=\"' + encodeURIComponent(authObj[\"oauth_version\"]) + '\"';\n\n    console.log('Encoded tw auth string:  ' + authstring);\n    //  const uri = 'https://api.twitter.com/oauth2/token';\n    //const uri = 'https://api.twitter.com/oauth/request_token';\n    //   const uri = 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/oauth/request_token';\n\n    // const uri = 'https://webapp.org/twitterauth';\n    const url = new URL(CONST.TW_REQ_TOKEN_EP);\n\n    //   url.search = new URLSearchParams({\n    //      grant_type: 'client_credentials',\n    //  });\n   \n    //  const formData = new FormData();\n    //  formData.append('grant_type','client_credentials')\n\n    const headers = new Headers({\n        'Authorization': authstring,\n        //    'Authorization': 'Bearer ' + 'ya29.Il_ABz1maps1ttHy1f9YlRj6FMfkvlEr1T0qa062Z1976NhfWJPoLPL9SljDL1xCj1RDJBIrkxsOXNfChkbiyoEZHHOWEjNq1TEELIpcqlF02K6wYTUdQ9gviuRQWjroQw',\n        //'Accept': 'application/json',\n        //    'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n        //   'Content-Length': '29',\n        //   'Accept-Encoding': 'gzip'\n        //  'Content-length':0\n    });\n\n    const reqOpts = {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        // credentials: 'omit', // include, *same-origin, omit\n        headers: headers,\n        // body:formData,\n        //    redirect: 'follow', // manual, *follow, error\n        //   referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        //   body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    }\n\n    const req = new Request('https://webapp.org/twitterauth', reqOpts)\n    return fetch(req)\n        .then(res => {\n            console.log(\"Twitter response is: \" + JSON.stringify(res));\n        })\n\n\n}\n */\n\n\n\n"]},"metadata":{},"sourceType":"module"}