{"ast":null,"code":"import _defineProperty from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { TextF } from '../../../components/datacomponents/inputcomponents'; //import { animated, useTransition } from 'react-spring';\n\nvar useStyles = makeStyles(function (theme) {\n  var _formsection, _formheader, _formcontent;\n\n  return {\n    formbox: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flex: 'auto',\n      flexFlow: 'row wrap',\n      justifyContent: 'flex-start',\n      alignItems: 'flex-start',\n      alignContent: 'flex-start',\n      width: '80%',\n      height: '80%',\n      opacity: 1.0,\n      transition: 'width 2s height 2s'\n    },\n    formsection: (_formsection = {}, _defineProperty(_formsection, theme.breakpoints.up('xs'), {\n      flexFlow: 'column wrap' //    height: 450,\n\n    }), _defineProperty(_formsection, theme.breakpoints.up('md'), {\n      flexFlow: 'row wrap' //      height: 200,\n\n    }), _defineProperty(_formsection, \"boxSizing\", 'border-box'), _defineProperty(_formsection, \"display\", 'flex'), _defineProperty(_formsection, \"flex\", 'auto'), _defineProperty(_formsection, \"justifyContent\", 'flex-start'), _defineProperty(_formsection, \"alignItems\", 'flex-start'), _defineProperty(_formsection, \"alignContent\", 'flex-start'), _defineProperty(_formsection, \"width\", '80%'), _defineProperty(_formsection, \"margin\", 'auto'), _formsection),\n    formheader: (_formheader = {}, _defineProperty(_formheader, theme.breakpoints.up('xs'), {\n      width: '90%',\n      height: '10%'\n    }), _defineProperty(_formheader, theme.breakpoints.up('md'), {\n      width: '10%',\n      height: '90%'\n    }), _defineProperty(_formheader, \"boxSizing\", 'border-box'), _defineProperty(_formheader, \"display\", 'flex'), _defineProperty(_formheader, \"flex\", 'auto'), _defineProperty(_formheader, \"flexFlow\", 'row wrap'), _defineProperty(_formheader, \"justifyContent\", 'flex-start'), _defineProperty(_formheader, \"alignItems\", 'flex-start'), _defineProperty(_formheader, \"alignContent\", 'flex-start'), _formheader),\n    formcontent: (_formcontent = {}, _defineProperty(_formcontent, theme.breakpoints.up('xs'), {\n      width: '90%',\n      height: '80%'\n    }), _defineProperty(_formcontent, theme.breakpoints.up('md'), {\n      width: '90%',\n      height: '90%'\n    }), _defineProperty(_formcontent, \"boxSizing\", 'border-box'), _defineProperty(_formcontent, \"display\", 'flex'), _defineProperty(_formcontent, \"flex\", 'auto'), _defineProperty(_formcontent, \"flexFlow\", 'row wrap'), _defineProperty(_formcontent, \"justifyContent\", 'flex-start'), _defineProperty(_formcontent, \"alignItems\", 'flex-start'), _defineProperty(_formcontent, \"alignContent\", 'flex-start'), _defineProperty(_formcontent, \"width\", '80%'), _defineProperty(_formcontent, \"height\", '90%'), _formcontent),\n    formcontrol: {\n      display: 'flex',\n      flex: 'auto',\n      flexFlow: 'row nowrap',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      padding: '50px 300px 10px 10px',\n      width: '100%',\n      margin: 'auto' //     border:'1px solid blue',\n\n    },\n    \"@keyframes anim1\": {}\n  };\n}); //const FormBox = animated(Box);\n\nvar FormBox = Box;\n\nvar RegisterForm = function RegisterForm(props) {\n  var classes = useStyles();\n  /* const transitions = useTransition(!props.submitted, null, {\n      from: { opacity: 0 },\n      enter: { opacity: 1 },\n      leave: { opacity: 0 },\n  } */\n\n  /*     return transitions.map(({item,key,props1})=>\n          item\n          ?\n          (<FormBox className={classes.formbox} style={props1}>\n              \n              <Box className={classes.formsection} >\n                  <Box className={classes.formheader}>\n                      User Id\n                  </Box>\n                  <Box className={classes.formcontent} >\n                      <TextF\n                          type=\"email\"\n                          label=\"Email Id: This will be your user id\"\n                          width=\"72%\"\n                          onChange={props.handleChange('email')} required />\n                      <TextF\n                          type=\"password\"\n                          label=\"Password\"\n                          width=\"35%\"\n                          onChange={props.handleChange('pwd')} required />\n                      <TextF\n                          type=\"password\"\n                          label=\"Pls re-enter the same password\"\n                          width=\"35%\"\n                          onChange={props.handleChange('pwd1')} required />\n  \n                  </Box>\n              </Box>\n              <Box className={classes.formsection}>\n                  <Box className={classes.formheader}>\n                      Details\n                  </Box>\n                  <Box className={classes.formcontent}>\n  \n                      <TextF\n                          label=\"First Name\"\n                          width=\"35%\"\n                          onChange={props.handleChange('fname')} />\n                      <TextF\n                          label=\"Last Name\"\n                          width=\"35%\"\n                          onChange={props.handleChange('lname')} />\n                      <TextF\n                          label=\"Phone\"\n                          width=\"72%\"\n                          onChange={props.handleChange('phone')} />\n  \n                  </Box>\n              </Box>\n              <Box className={classes.formsection}>\n                  <Box className={classes.formheader}>\n                      Address\n                  </Box>\n                  <Box className={classes.formcontent}>\n                      <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                      <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                      <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                      <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                      <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                      <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                      <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                  </Box>\n              </Box>\n  \n  \n              <Box className={classes.formsection}>\n                  <Box className={classes.formheader}>\n  \n                  </Box>\n                  <Box className={classes.formcontent}>\n                      <Box className={classes.formcontrol}>\n                          <Button onClick={props.handleSubmit}>Submit</Button>\n                          <Button>Reset</Button>\n                      </Box>\n  \n                  </Box>\n              </Box>\n              </FormBox>)\n          :\n          (<div>\n              Thank you for submitting the form !!;\n          </div>)\n          \n          );\n  \n   */\n\n  if (!props.submitted) {\n    return __jsx(Box, {\n      className: classes.formbox\n    }, __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }, \"User Id\"), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(TextF, {\n      type: \"email\",\n      label: \"Email Id: This will be your user id\",\n      width: \"72%\",\n      onChange: props.handleChange('email'),\n      required: true\n    }), __jsx(TextF, {\n      type: \"password\",\n      label: \"Password\",\n      width: \"35%\",\n      onChange: props.handleChange('pwd'),\n      required: true\n    }), __jsx(TextF, {\n      type: \"password\",\n      label: \"Pls re-enter the same password\",\n      width: \"35%\",\n      onChange: props.handleChange('pwd1'),\n      required: true\n    }))), __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }, \"Details\"), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(TextF, {\n      label: \"First Name\",\n      width: \"35%\",\n      onChange: props.handleChange('fname')\n    }), __jsx(TextF, {\n      label: \"Last Name\",\n      width: \"35%\",\n      onChange: props.handleChange('lname')\n    }), __jsx(TextF, {\n      label: \"Phone\",\n      width: \"72%\",\n      onChange: props.handleChange('phone')\n    }))), __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }, \"Address\"), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(TextF, {\n      label: \"Unit No\",\n      width: \"10%\",\n      onChange: props.handleAddrChange('unitno')\n    }), __jsx(TextF, {\n      label: \"Street No\",\n      width: \"10%\",\n      onChange: props.handleAddrChange('stno')\n    }), __jsx(TextF, {\n      label: \"Street Name\",\n      width: \"48%\",\n      onChange: props.handleAddrChange('stname')\n    }), __jsx(TextF, {\n      label: \"City\",\n      width: \"50%\",\n      onChange: props.handleAddrChange('city')\n    }), __jsx(TextF, {\n      label: \"Zip\",\n      width: \"20%\",\n      onChange: props.handleAddrChange('zip')\n    }), __jsx(TextF, {\n      label: \"Province\",\n      width: \"45%\",\n      onChange: props.handleAddrChange('province')\n    }), __jsx(TextF, {\n      label: \"Country\",\n      width: \"25%\",\n      onChange: props.handleAddrChange('country')\n    }))), __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(Box, {\n      className: classes.formcontrol\n    }, __jsx(Button, {\n      onClick: props.handleSubmit\n    }, \"Submit\"), __jsx(Button, null, \"Reset\")))));\n  } else {\n    return __jsx(\"div\", null, \"Thank you for submitting the form !!;\");\n  }\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/content/admin/register/registerform.js"],"names":["React","makeStyles","Box","Button","TextF","useStyles","theme","formbox","boxSizing","display","flex","flexFlow","justifyContent","alignItems","alignContent","width","height","opacity","transition","formsection","breakpoints","up","formheader","formcontent","formcontrol","padding","margin","FormBox","RegisterForm","props","classes","submitted","handleChange","handleAddrChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, { userEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { TextF } from '../../../components/datacomponents/inputcomponents';\n//import { animated, useTransition } from 'react-spring';\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles(theme => ({\n    formbox: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '80%',\n        opacity: 1.0,\n        transition: 'width 2s height 2s',\n    },\n    formsection: {\n        [theme.breakpoints.up('xs')]: {\n            flexFlow: 'column wrap',\n            //    height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            flexFlow: 'row wrap',\n            //      height: 200,\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        margin: 'auto',\n        //   borderTop: '1px solid grey',\n    },\n    formheader: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '10%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n\n        //  border: '2px solid green',\n    },\n    formcontent: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '80%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '90%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '90%',\n        //    border: '2px solid green',\n    },\n    formcontrol: {\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row nowrap',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        padding: '50px 300px 10px 10px',\n\n        width: '100%',\n        margin: 'auto',\n        //     border:'1px solid blue',\n    },\n\n    \"@keyframes anim1\": {\n\n    }\n\n}))\n\n//const FormBox = animated(Box);\n\nconst FormBox = Box;\n\nconst RegisterForm = (props) => {\n    const classes = useStyles();\n\n    /* const transitions = useTransition(!props.submitted, null, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    } */\n\n    /*     return transitions.map(({item,key,props1})=>\n            item\n            ?\n            (<FormBox className={classes.formbox} style={props1}>\n                \n                <Box className={classes.formsection} >\n                    <Box className={classes.formheader}>\n                        User Id\n                    </Box>\n                    <Box className={classes.formcontent} >\n                        <TextF\n                            type=\"email\"\n                            label=\"Email Id: This will be your user id\"\n                            width=\"72%\"\n                            onChange={props.handleChange('email')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Pls re-enter the same password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd1')} required />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Details\n                    </Box>\n                    <Box className={classes.formcontent}>\n    \n                        <TextF\n                            label=\"First Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('fname')} />\n                        <TextF\n                            label=\"Last Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('lname')} />\n                        <TextF\n                            label=\"Phone\"\n                            width=\"72%\"\n                            onChange={props.handleChange('phone')} />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Address\n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                        <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                        <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                        <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                        <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                        <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                        <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                    </Box>\n                </Box>\n    \n    \n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n    \n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <Box className={classes.formcontrol}>\n                            <Button onClick={props.handleSubmit}>Submit</Button>\n                            <Button>Reset</Button>\n                        </Box>\n    \n                    </Box>\n                </Box>\n                </FormBox>)\n            :\n            (<div>\n                Thank you for submitting the form !!;\n            </div>)\n            \n            );\n    \n     */\n\n    if (!props.submitted) {\n        return (\n            <Box className={classes.formbox}>\n\n                <Box className={classes.formsection} >\n                    <Box className={classes.formheader}>\n                        User Id\n                </Box>\n                    <Box className={classes.formcontent} >\n                        <TextF\n                            type=\"email\"\n                            label=\"Email Id: This will be your user id\"\n                            width=\"72%\"\n                            onChange={props.handleChange('email')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Pls re-enter the same password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd1')} required />\n\n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Details\n                </Box>\n                    <Box className={classes.formcontent}>\n\n                        <TextF\n                            label=\"First Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('fname')} />\n                        <TextF\n                            label=\"Last Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('lname')} />\n                        <TextF\n                            label=\"Phone\"\n                            width=\"72%\"\n                            onChange={props.handleChange('phone')} />\n\n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Address\n                </Box>\n                    <Box className={classes.formcontent}>\n                        <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                        <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                        <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                        <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                        <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                        <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                        <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                    </Box>\n                </Box>\n\n\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n\n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <Box className={classes.formcontrol}>\n                            <Button onClick={props.handleSubmit}>Submit</Button>\n                            <Button>Reset</Button>\n                        </Box>\n\n                    </Box>\n                </Box>\n            </Box>\n        );\n    } else {\n        return (<div>\n            Thank you for submitting the form !!;\n        </div>);\n\n    }\n\n\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}