{"ast":null,"code":"export const SET_COUNTER = 'SET_COUNTER';\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport const set = value => ({\n  type: SET_COUNTER,\n  payload: value\n});\nexport const increment = () => ({\n  type: INCREMENT_COUNTER\n});\nexport const decrement = () => ({\n  type: DECREMENT_COUNTER\n});\nexport const incrementIfOdd = () => (dispatch, getState) => {\n  const {\n    counter\n  } = getState();\n\n  if (counter % 2 === 0) {\n    return;\n  }\n\n  dispatch(increment());\n};\nexport const incrementAsync = (delay = 1000) => dispatch => {\n  setTimeout(() => {\n    dispatch(increment());\n  }, delay);\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/common/actions/index.js"],"names":["SET_COUNTER","INCREMENT_COUNTER","DECREMENT_COUNTER","set","value","type","payload","increment","decrement","incrementIfOdd","dispatch","getState","counter","incrementAsync","delay","setTimeout"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,MAAMC,GAAG,GAAGC,KAAK,KAAK;AAC3BC,EAAAA,IAAI,EAAEL,WADqB;AAE3BM,EAAAA,OAAO,EAAEF;AAFkB,CAAL,CAAjB;AAKP,OAAO,MAAMG,SAAS,GAAG,OAAO;AAC9BF,EAAAA,IAAI,EAAEJ;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMO,SAAS,GAAG,OAAO;AAC9BH,EAAAA,IAAI,EAAEH;AADwB,CAAP,CAAlB;AAIP,OAAO,MAAMO,cAAc,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAcD,QAAQ,EAA5B;;AAEA,MAAIC,OAAO,GAAG,CAAV,KAAgB,CAApB,EAAuB;AACrB;AACD;;AAEDF,EAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACD,CARM;AAUP,OAAO,MAAMM,cAAc,GAAG,CAACC,KAAK,GAAG,IAAT,KAAkBJ,QAAQ,IAAI;AAC1DK,EAAAA,UAAU,CAAC,MAAM;AACfL,IAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACD,GAFS,EAEPO,KAFO,CAAV;AAGD,CAJM","sourcesContent":["export const SET_COUNTER = 'SET_COUNTER';\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\n\nexport const set = value => ({\n  type: SET_COUNTER,\n  payload: value,\n});\n\nexport const increment = () => ({\n  type: INCREMENT_COUNTER,\n});\n\nexport const decrement = () => ({\n  type: DECREMENT_COUNTER,\n});\n\nexport const incrementIfOdd = () => (dispatch, getState) => {\n  const { counter } = getState();\n\n  if (counter % 2 === 0) {\n    return;\n  }\n\n  dispatch(increment());\n};\n\nexport const incrementAsync = (delay = 1000) => dispatch => {\n  setTimeout(() => {\n    dispatch(increment());\n  }, delay);\n};\n"]},"metadata":{},"sourceType":"module"}