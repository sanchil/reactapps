{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { db } from '../index';\nimport { v4 as uuidv4 } from 'uuid'; //import * as blobUtil from 'blob-util';\n//import cloudinary from 'cloudinary-core';\n\nimport CONST from '../../consts';\nimport { getFormattedDate, getFormattedTime } from '../../lib/utils';\nimport { setCookie } from '../../lib/utils';\nexport const addData = (qrytype, field, data, abort) => {\n  console.log('calling add user');\n  data._id = uuidv4() + \"\";\n\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', evt => {\n      throw new Error(`Add data for ${data.type}failed`);\n    });\n  }\n\n  return getData(qrytype, field, data, abort).then(user => {\n    throw [3, Error('Data exists')];\n  }).catch(err => {\n    //  console.log('Error message is >>>>>: '+err[1].message);\n    if (err[0] === 0) {\n      return db.put(data);\n    }\n\n    if (err[0] === 3) {\n      throw [3, Error('Data exists')];\n    }\n  });\n};\nexport const addUpdateData = (qrytype, field, data, abort) => {\n  // console.log('calling add user' + JSON.stringify(data));\n  const dt = new Date();\n\n  if (data.subtype) {\n    data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n  } else {\n    data._id = uuidv4() + \"\";\n  }\n\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', evt => {\n      throw new Error(`Add data for ${data.type} failed`);\n    });\n  }\n\n  return getData(qrytype, field, data, abort).then(user => {\n    console.log(\"User exists : updating: \" + JSON.stringify(user));\n    data._id = user._id;\n    data._rev = user._rev;\n    data.date = getFormattedDate(dt, '/');\n    data.time = getFormattedTime(dt, ':');\n    data.createDate = user.createDate;\n    data.createTime = user.createTime;\n    return db.put(data);\n  }).catch(err => {\n    //  console.log('Error message is >>>>>: '+err[1].message);\n    if (err[0] === 0) {\n      data.date = getFormattedDate(dt, '/');\n      data.time = getFormattedTime(dt, ':');\n      data.createDate = getFormattedDate(dt, '/');\n      data.createTime = getFormattedTime(dt, ':');\n      return db.put(data);\n    }\n\n    if (err[0] === 3) {\n      throw [3, Error('Data exists')];\n    }\n  });\n};\nexport const getData = (qrytype, field, data, abort) => {\n  console.log(\"1:::\");\n  const id = eval(`data.${field}`); //  console.log(\"ID is: \" + id);\n\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', evt => {\n      throw [4, Error(`Get data for ${data.type} failed`)];\n    });\n  }\n\n  const opt = {\n    latest: true,\n    include_docs: true\n  };\n  return db.query(qrytype, opt).then(res => res.rows.filter(doc => eval(`doc.doc.${field}`) === id)).then(res => {\n    //  console.log('Doc is: ' + JSON.stringify(res));\n    if (res) {\n      if (res.length === 1) {\n        return res[0].doc;\n      } else if (res.length > 1) {\n        throw [1, Error('Multiple data objects found')];\n      } else {\n        throw [0, Error('No data found')];\n      }\n    }\n  });\n};\nexport const addUser = (data, opt) => {\n  console.log('calling add user');\n\n  if (data.subtype) {\n    data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n  } else {\n    data._id = uuidv4() + \"\";\n  } //data.type = 'USER';\n\n\n  if (opt.signal) {\n    opt.signal.addEventListener('abort', evt => {\n      throw new Error('Add user failed');\n    });\n  }\n\n  return getUser(data.email, opt).then(user => {\n    throw [3, Error('User id exists')];\n  }).catch(err => {\n    //  console.log('Error message is >>>>>: '+err[1].message);\n    if (err[0] === 0) {\n      return db.put(data);\n    }\n\n    if (err[0] === 3) {\n      throw [3, Error('User id exists')];\n    }\n  }); // return db.put(data);\n};\nexport const getUser = (data, abort) => {\n  if (abort.signal) {\n    abort.signal.addEventListener('abort', evt => {\n      throw [4, Error('Get user failed')];\n    });\n  }\n\n  const opt = {\n    latest: true,\n    include_docs: true\n  };\n  return db.query('types/users', opt).then(res => res.rows.filter(doc => doc.doc.email === data)).then(res => {\n    if (res) {\n      if (res.length === 1) {\n        return res[0].doc;\n      } else if (res.length > 1) {\n        throw [1, Error('Multiple users found')];\n      } else {\n        throw [0, Error('No user found')];\n      }\n    }\n  });\n};\nexport const createSession = (src, data, dispatch) => {\n  console.log('Source is: ' + src);\n\n  try {\n    switch (src) {\n      case 'google':\n        {\n          console.log('calling add social user for google');\n          setCookie('sessid', 'SESSION_GOOGLE_' + data.id);\n          sessionStorage.setItem('sessid', 'SESSION_GOOGLE_' + data.id);\n          setRedis('SESSION_GOOGLE_' + data.id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_GOOGLE_' + data.id,\n            source: 'google',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      case 'facebook':\n        {\n          console.log('calling add social user for fb ');\n          setCookie('sessid', 'SESSION_FB_' + data.id);\n          sessionStorage.setItem('sessid', 'SESSION_FB_' + data.id);\n          setRedis('SESSION_FB_' + data.id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_FB_' + data.id,\n            source: 'facebook',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      case 'amazon':\n        {\n          console.log('calling add social user for amz');\n          setCookie('sessid', 'SESSION_AMZ_' + data.user_id);\n          sessionStorage.setItem('sessid', 'SESSION_AMZ_' + data.user_id);\n          setRedis('SESSION_AMZ_' + data.user_id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_AMZ_' + data.user_id,\n            source: 'amazon',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      case 'twitter':\n        {\n          console.log('calling add social user for tw');\n          setCookie('sessid', 'SESSION_TW_' + data.user_id);\n          sessionStorage.setItem('sessid', 'SESSION_TW_' + data.user_id);\n          setRedis('SESSION_TW_' + data.user_id, data);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: 'SESSION_TW_' + data.user_id,\n            source: 'twitter',\n            sessdata: {},\n            data: data\n          });\n          break;\n        }\n\n      default:\n        {\n          console.log('Sorry no source match');\n          break;\n        }\n    }\n  } catch (error) {\n    console.log('Add social error: ' + error.message);\n  }\n};\nexport const addContact = data => {\n  data._id = uuidv4() + \"\";\n  data.type = 'CONTACT';\n  return db.put(data);\n};\nexport const addHome = (data, img) => {\n  data._id = uuidv4() + \"\";\n  data.type = 'HOME';\n  const keys = Object.keys(img);\n  let keylength = keys.length;\n  console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n  return db.put(data).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //  console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //   console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  }).then(res => {\n    const key = keys.shift();\n\n    if (typeof key !== 'undefined') {\n      //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n      return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n    } else {\n      return;\n    }\n  });\n};\nexport const addHomeCloud = (data, img) => {\n  data._id = uuidv4() + \"\";\n  data.type = 'HOME';\n  const keys = Object.keys(img);\n  let keylength = keys.length;\n  console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n  return db.put(data).then(res => {\n    if (keys) {\n      return Promise.all(keys.map(key => {\n        return uploadImg(res.id, key, img[key]);\n      }));\n    } else {\n      return {};\n    }\n  }).then(cloudinaryArrId => {\n    return updateHome(cloudinaryArrId);\n  });\n};\nexport const updateHome = cloudinaryRes => {\n  const docId = cloudinaryRes[0].tags[0];\n  console.log('DocId updated with cloudinary urls: ' + docId);\n\n  if (docId) {\n    return db.get(docId, {\n      latest: true\n    }).then(doc => db.put(_objectSpread(_objectSpread({}, doc), {}, {\n      cloudinary: cloudinaryRes\n    }), {\n      rev: doc._rev\n    }));\n  } else {\n    return {};\n  }\n};\nexport const uploadImg = (id, key, blob) => {\n  const controller = new AbortController();\n  const frmData = new FormData();\n  const apptype = blob.type; // frmData.set('upload_preset', 'jxaf96un');\n\n  frmData.set('upload_preset', CONST.CLOUDINARY_UPLOAD_PRESET);\n  frmData.set('public_id', id + '_' + key);\n  frmData.set('tags', id);\n  frmData.set('file', blob, key);\n  frmData.set('folder', 'img');\n  /* \n       const headers = new Headers({\n          'Access-Control-Request-Headers':'Accept, Content-Type',\n          'Accept': 'multipart/form-data',\n          'Content-Type': 'multipart/form-data',        \n         \n      });  */\n  //    const uri = 'https://api.cloudinary.com/v1_1/hgill/image/upload';\n\n  const uri = `${CONST.CLOUDINARY_API}/${CONST.CLOUDINARY_DB}/image/upload`;\n  const req = new Request(uri, {\n    signal: controller.signal,\n    method: 'POST',\n    // mode:'no-cors',\n    // headers: headers,\n    body: frmData\n  });\n  return fetch(req).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return {};\n    }\n  });\n};\nexport const getHomes = (opt, abort) => {\n  return db.query('types/homes', opt).then(res => {\n    if (abort.signal) {\n      abort.signal.addEventListener('abort', event => {// throw new Error(\"get homes aborted\");\n      });\n    }\n\n    return res.rows.map(elem => elem.doc);\n  });\n  /*return db.allDocs({include_docs:true,attachments:true,binary:true})\n  .then(res=>console.log(\"All  docs are:\"+JSON.stringify(res)));\n    */\n};\nexport const getHome = (id, abort) => {\n  const opts = {\n    latest: true,\n    attachments: true,\n    binary: true\n  };\n  return db.get(id, opts);\n};\nexport const testCouchdb = () => {\n  const url = 'http://localhost:5984';\n  const opts = {\n    method: 'GET'\n  };\n  return fetch(url);\n};\nexport const getHomeImages = tag => {\n  const controller = new AbortController(); //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n  //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n\n  const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/upload/img/${tag}_imgliving.jpg`; //  console.log('Cloudinary searcy uri : '+ searchUri);\n\n  const req = new Request(searchUri, {\n    signal: controller.signal\n  });\n  return fetch(req).then(response => {\n    if (response.ok) {\n      //    console.log('PASS :: searchuri :: ' + searchUri);\n      //return response.json();\n      return response.url;\n    } else {\n      // console.log('FAIL :: searchuri :: ' + searchUri);\n      return {};\n    }\n  });\n};\n/*\nexport const getHomeImages = (tag) => {\n    const controller = new AbortController();\n\n    //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n    //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n    const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n\n  //  console.log('Cloudinary searcy uri : '+ searchUri);\n    const req = new Request(searchUri, {\n        signal: controller.signal\n    });\n\n    return fetch(req)\n        .then(response => {\n            if (response.ok) {\n                  console.log('PASS :: searchuri :: ' + searchUri);\n                return response.json();\n            } else {\n                 console.log('FAIL :: searchuri :: ' + searchUri);\n                return {}\n            }\n        })\n\n\n}\n*/\n\nexport const getRedis = key => {\n  const uri = CONST.SESSIONURL + '/get';\n  const url = new URL(uri);\n  url.search = new URLSearchParams({\n    key: key\n  });\n  const req = new Request(url, {\n    method: 'GET'\n  });\n  return fetch(req).then(res => {\n    if (res.ok) {\n      return res.text();\n    } else {\n      return \"\";\n    }\n  });\n};\nexport const setRedis = (key, val) => {\n  const uri = CONST.SESSIONURL + '/set';\n  const url = new URL(uri);\n  url.search = new URLSearchParams({\n    key: key,\n    val: `${JSON.stringify(val)}`\n  });\n  const req = new Request(url, {\n    method: 'GET'\n  });\n  return fetch(req).then(res => {\n    if (res.ok) {\n      return res.text();\n    } else {\n      return \"\";\n    }\n  });\n};\nexport const deleteRedis = key => {\n  const uri = CONST.SESSIONURL + '/del';\n  const url = new URL(uri);\n  url.search = new URLSearchParams({\n    key: key\n  });\n  const req = new Request(url, {\n    method: 'GET'\n  });\n  return fetch(req).then(res => {\n    if (res.ok) {\n      return res.text();\n    } else {\n      return \"\";\n    }\n  });\n};\nexport default {\n  addData,\n  addUpdateData,\n  getData,\n  addUser,\n  createSession,\n  getUser,\n  addContact,\n  addHomeCloud,\n  updateHome,\n  getHome,\n  getHomes,\n  testCouchdb,\n  uploadImg,\n  getHomeImages,\n  getRedis,\n  setRedis,\n  deleteRedis\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/data/db/queries.js"],"names":["db","v4","uuidv4","CONST","getFormattedDate","getFormattedTime","setCookie","addData","qrytype","field","data","abort","console","log","_id","signal","addEventListener","evt","Error","type","getData","then","user","catch","err","put","addUpdateData","dt","Date","subtype","toLowerCase","JSON","stringify","_rev","date","time","createDate","createTime","id","eval","opt","latest","include_docs","query","res","rows","filter","doc","length","addUser","getUser","email","createSession","src","dispatch","sessionStorage","setItem","setRedis","login","sessid","source","sessdata","user_id","error","message","addContact","addHome","img","keys","Object","keylength","key","shift","putAttachment","rev","addHomeCloud","Promise","all","map","uploadImg","cloudinaryArrId","updateHome","cloudinaryRes","docId","tags","get","cloudinary","blob","controller","AbortController","frmData","FormData","apptype","set","CLOUDINARY_UPLOAD_PRESET","uri","CLOUDINARY_API","CLOUDINARY_DB","req","Request","method","body","fetch","ok","json","getHomes","event","elem","getHome","opts","attachments","binary","testCouchdb","url","getHomeImages","tag","searchUri","CLOUDINARY_URL_DB","response","getRedis","SESSIONURL","URL","search","URLSearchParams","text","val","deleteRedis"],"mappings":"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","sourcesContent":["import { db } from '../index';\n\nimport { v4 as uuidv4 } from 'uuid';\n//import * as blobUtil from 'blob-util';\n//import cloudinary from 'cloudinary-core';\nimport CONST from '../../consts';\nimport { getFormattedDate, getFormattedTime } from '../../lib/utils';\n\nimport { setCookie } from '../../lib/utils';\n\n\nexport const addData = (qrytype, field, data, abort) => {\n    console.log('calling add user');\n    data._id = uuidv4() + \"\";\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw new Error(`Add data for ${data.type}failed`);\n        });\n    }\n\n    return getData(qrytype, field, data, abort)\n        .then(user => { throw [3, Error('Data exists')] })\n        .catch(err => {\n            //  console.log('Error message is >>>>>: '+err[1].message);\n            if (err[0] === 0) {\n                return db.put(data);\n            }\n            if (err[0] === 3) {\n                throw [3, Error('Data exists')]\n            }\n        });\n\n}\n\n\nexport const addUpdateData = (qrytype, field, data, abort) => {\n    // console.log('calling add user' + JSON.stringify(data));\n    const dt = new Date();\n\n    if (data.subtype) {\n        data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n    } else {\n        data._id = uuidv4() + \"\";\n    }\n\n\n\n\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw new Error(`Add data for ${data.type} failed`);\n        });\n    }\n\n    return getData(qrytype, field, data, abort)\n        .then(user => {\n            console.log(\"User exists : updating: \" + JSON.stringify(user));\n            data._id = user._id;\n            data._rev = user._rev;\n\n            data.date = getFormattedDate(dt, '/');\n            data.time = getFormattedTime(dt, ':');\n            data.createDate = user.createDate;\n            data.createTime = user.createTime;\n\n\n\n            return db.put(data);\n        })\n        .catch(err => {\n            //  console.log('Error message is >>>>>: '+err[1].message);\n            if (err[0] === 0) {\n                data.date = getFormattedDate(dt, '/');\n                data.time = getFormattedTime(dt, ':');\n                data.createDate = getFormattedDate(dt, '/');\n                data.createTime = getFormattedTime(dt, ':');\n                return db.put(data);\n            }\n            if (err[0] === 3) {\n                throw [3, Error('Data exists')]\n            }\n        });\n\n}\n\nexport const getData = (qrytype, field, data, abort) => {\n    console.log(\"1:::\");\n    const id = eval(`data.${field}`);\n\n    //  console.log(\"ID is: \" + id);\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw [4, Error(`Get data for ${data.type} failed`)];\n        });\n    }\n\n    const opt = { latest: true, include_docs: true }\n    return db.query(qrytype, opt)\n        .then(res => res.rows.filter(doc => eval(`doc.doc.${field}`) === id))\n        .then(res => {\n            //  console.log('Doc is: ' + JSON.stringify(res));\n\n            if (res) {\n                if (res.length === 1) {\n                    return res[0].doc;\n                } else if (res.length > 1) {\n                    throw [1, Error('Multiple data objects found')];\n                } else {\n                    throw [0, Error('No data found')]\n                }\n            }\n        })\n\n}\n\n\nexport const addUser = (data, opt) => {\n    console.log('calling add user');\n\n    if (data.subtype) {\n        data._id = data.subtype.toLowerCase() + \"_\" + uuidv4();\n    } else {\n        data._id = uuidv4() + \"\";\n    }\n\n    //data.type = 'USER';\n    if (opt.signal) {\n        opt.signal.addEventListener('abort', evt => {\n            throw new Error('Add user failed');\n        });\n    }\n\n    return getUser(data.email, opt)\n        .then(user => { throw [3, Error('User id exists')] })\n        .catch(err => {\n            //  console.log('Error message is >>>>>: '+err[1].message);\n            if (err[0] === 0) {\n                return db.put(data);\n            }\n            if (err[0] === 3) {\n                throw [3, Error('User id exists')]\n            }\n        });\n\n\n    // return db.put(data);\n\n}\n\nexport const getUser = (data, abort) => {\n    if (abort.signal) {\n        abort.signal.addEventListener('abort', evt => {\n            throw [4, Error('Get user failed')];\n        });\n    }\n\n    const opt = { latest: true, include_docs: true }\n    return db.query('types/users', opt)\n        .then(res => res.rows.filter(doc => doc.doc.email === data))\n        .then(res => {\n\n            if (res) {\n                if (res.length === 1) {\n                    return res[0].doc;\n                } else if (res.length > 1) {\n                    throw [1, Error('Multiple users found')];\n                } else {\n                    throw [0, Error('No user found')]\n                }\n            }\n        })\n\n}\n\nexport const createSession = (src, data, dispatch) => {\n\n    console.log('Source is: ' + src);\n\n\n    try {\n        switch (src) {\n            case 'google': {\n\n                console.log('calling add social user for google');\n                setCookie('sessid', 'SESSION_GOOGLE_' + data.id);\n                sessionStorage.setItem('sessid', 'SESSION_GOOGLE_' + data.id);\n                setRedis('SESSION_GOOGLE_' + data.id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_GOOGLE_' + data.id, source: 'google', sessdata: {}, data: data });\n                break;\n\n\n            }\n            case 'facebook': {\n                console.log('calling add social user for fb ');\n                setCookie('sessid', 'SESSION_FB_' + data.id);\n                sessionStorage.setItem('sessid', 'SESSION_FB_' + data.id);\n                setRedis('SESSION_FB_' + data.id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_FB_' + data.id, source: 'facebook', sessdata: {}, data: data });\n                break;\n            }\n\n            case 'amazon': {\n                console.log('calling add social user for amz');\n                setCookie('sessid', 'SESSION_AMZ_' + data.user_id);\n                sessionStorage.setItem('sessid', 'SESSION_AMZ_' + data.user_id);\n                setRedis('SESSION_AMZ_' + data.user_id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_AMZ_' + data.user_id, source: 'amazon', sessdata: {}, data: data });\n                break;\n            }\n\n            case 'twitter': {\n                console.log('calling add social user for tw');\n                setCookie('sessid', 'SESSION_TW_' + data.user_id);\n                sessionStorage.setItem('sessid', 'SESSION_TW_' + data.user_id);\n                setRedis('SESSION_TW_' + data.user_id, data);\n                dispatch({ type: 'LOGIN', login: true, sessid: 'SESSION_TW_' + data.user_id, source: 'twitter', sessdata: {}, data: data });\n\n                break;\n            }\n\n            default: {\n                console.log('Sorry no source match');\n                break;\n            }\n\n        }\n\n    } catch (error) {\n        console.log('Add social error: ' + error.message)\n    }\n\n\n\n\n}\n\n\n\n\n\n\n\nexport const addContact = (data) => {\n    data._id = uuidv4() + \"\";\n    data.type = 'CONTACT';\n    return db.put(data);\n}\n\nexport const addHome = (data, img) => {\n    data._id = uuidv4() + \"\";\n    data.type = 'HOME';\n    const keys = Object.keys(img);\n    let keylength = keys.length;\n    console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n\n    return db.put(data)\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //  console.log(\"Image is :\" + key + \" : \" + img[key]);\n\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //   console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n\n            if (typeof key !== 'undefined') {\n                //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //     console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        })\n        .then(res => {\n            const key = keys.shift();\n            if (typeof key !== 'undefined') {\n                //    console.log(\"Image is :\" + key + \" : \" + img[key]);\n                return db.putAttachment(res.id, key, res.rev, img[key], img[key].type);\n            } else {\n                return;\n            }\n        });\n\n}\n\n\n\nexport const addHomeCloud = (data, img) => {\n    data._id = uuidv4() + \"\";\n    data.type = 'HOME';\n    const keys = Object.keys(img);\n    let keylength = keys.length;\n    console.log(\"Keys are : \" + JSON.stringify(keys) + \" keys length: \" + keys.length);\n\n    return db.put(data)\n        .then(res => {\n            if (keys) {\n                return Promise.all(keys.map(key => {\n                    return uploadImg(res.id, key, img[key]);\n                }));\n            } else {\n                return {}\n            }\n\n        })\n        .then(cloudinaryArrId => {\n            return updateHome(cloudinaryArrId);\n        })\n\n\n}\n\nexport const updateHome = (cloudinaryRes) => {\n    const docId = cloudinaryRes[0].tags[0];\n    console.log('DocId updated with cloudinary urls: ' + docId);\n    if (docId) {\n        return db\n            .get(docId, { latest: true })\n            .then(doc => db.put({ ...doc, cloudinary: cloudinaryRes }, { rev: doc._rev }))\n\n    } else {\n        return {}\n    }\n\n}\n\n\nexport const uploadImg = (id, key, blob) => {\n    const controller = new AbortController();\n    const frmData = new FormData();\n    const apptype = blob.type;\n\n   // frmData.set('upload_preset', 'jxaf96un');\n    frmData.set('upload_preset', CONST.CLOUDINARY_UPLOAD_PRESET);\n    frmData.set('public_id', id + '_' + key);\n    frmData.set('tags', id);\n    frmData.set('file', blob, key);\n    frmData.set('folder', 'img');\n    /* \n         const headers = new Headers({\n            'Access-Control-Request-Headers':'Accept, Content-Type',\n            'Accept': 'multipart/form-data',\n            'Content-Type': 'multipart/form-data',        \n           \n        });  */\n\n\n    //    const uri = 'https://api.cloudinary.com/v1_1/hgill/image/upload';\n    const uri = `${CONST.CLOUDINARY_API}/${CONST.CLOUDINARY_DB}/image/upload`;\n    const req = new Request(uri, {\n        signal: controller.signal,\n        method: 'POST',\n        // mode:'no-cors',\n        // headers: headers,\n        body: frmData,\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return {}\n            }\n        })\n}\n\n\n\n\n\nexport const getHomes = (opt, abort) => {\n    return db.query('types/homes', opt)\n        .then(res => {\n\n            if (abort.signal) {\n                abort.signal.addEventListener('abort', event => {\n                    // throw new Error(\"get homes aborted\");\n                });\n            }\n            return res.rows.map(elem => elem.doc);\n        });\n\n    /*return db.allDocs({include_docs:true,attachments:true,binary:true})\n    .then(res=>console.log(\"All  docs are:\"+JSON.stringify(res)));\n      */\n\n}\n\n\n\nexport const getHome = (id, abort) => {\n    const opts = {\n        latest: true,\n        attachments: true,\n        binary: true,\n    }\n    return db.get(id, opts);\n\n}\n\n\nexport const testCouchdb = () => {\n    const url = 'http://localhost:5984';\n    const opts = {\n        method: 'GET',\n    }\n    return fetch(url);\n}\n\n\nexport const getHomeImages = (tag) => {\n    const controller = new AbortController();\n\n    //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n    //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n    const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/upload/img/${tag}_imgliving.jpg`;\n\n  //  console.log('Cloudinary searcy uri : '+ searchUri);\n    const req = new Request(searchUri, {\n        signal: controller.signal\n    });\n\n    return fetch(req)\n        .then(response => {\n            if (response.ok) {\n              //    console.log('PASS :: searchuri :: ' + searchUri);\n                //return response.json();\n                return response.url;\n            } else {\n                // console.log('FAIL :: searchuri :: ' + searchUri);\n                return {}\n            }\n        })\n\n\n}\n\n/*\nexport const getHomeImages = (tag) => {\n    const controller = new AbortController();\n\n    //const searchUri = `https://res.cloudinary.com/hgill/image/list/${tag}.json`;\n    //const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n    const searchUri = `${CONST.CLOUDINARY_URL_DB}/image/list/${tag}.json`;\n\n  //  console.log('Cloudinary searcy uri : '+ searchUri);\n    const req = new Request(searchUri, {\n        signal: controller.signal\n    });\n\n    return fetch(req)\n        .then(response => {\n            if (response.ok) {\n                  console.log('PASS :: searchuri :: ' + searchUri);\n                return response.json();\n            } else {\n                 console.log('FAIL :: searchuri :: ' + searchUri);\n                return {}\n            }\n        })\n\n\n}\n*/\n\nexport const getRedis = (key) => {\n    const uri = CONST.SESSIONURL + '/get';\n    const url = new URL(uri);\n    url.search = new URLSearchParams({ key: key });\n    const req = new Request(url, {\n        method: 'GET'\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.text();\n            } else {\n                return \"\"\n            }\n        });\n}\n\nexport const setRedis = (key, val) => {\n    const uri = CONST.SESSIONURL + '/set';\n    const url = new URL(uri);\n    url.search = new URLSearchParams({ key: key, val: `${JSON.stringify(val)}` });\n\n    const req = new Request(url, {\n        method: 'GET'\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.text();\n            } else {\n                return \"\"\n            }\n        })\n\n}\n\nexport const deleteRedis = (key) => {\n    const uri = CONST.SESSIONURL + '/del';\n    const url = new URL(uri);\n    url.search = new URLSearchParams({ key: key });\n    const req = new Request(url, {\n        method: 'GET'\n    });\n\n    return fetch(req)\n        .then(res => {\n            if (res.ok) {\n                return res.text();\n            } else {\n                return \"\"\n            }\n        })\n\n}\n\nexport default {\n\n    addData,\n    addUpdateData,\n    getData,\n    addUser,\n    createSession,\n    getUser,\n    addContact,\n    addHomeCloud,\n    updateHome,\n    getHome,\n    getHomes,\n    testCouchdb,\n    uploadImg,\n    getHomeImages,\n    getRedis,\n    setRedis,\n    deleteRedis\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}