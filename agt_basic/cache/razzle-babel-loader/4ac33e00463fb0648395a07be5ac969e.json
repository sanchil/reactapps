{"ast":null,"code":"import _objectSpread from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport { AppContext } from '../../state/appcntxt';\nimport * as astyles from '../styles';\nvar useStyles = makeStyles(function (theme) {\n  var _close;\n\n  return {\n    root: {\n      //    display: open => open ? 'initial' : 'none', // this does not help in getting the element dimentsions\n      visibility: function visibility(open) {\n        return open ? 'visible' : 'hidden';\n      },\n      // this works in getting element dimensions\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(0,0,0,0.7)',\n      zIndex: 1100\n    },\n    close: (_close = {}, _defineProperty(_close, theme.breakpoints.up('xs'), {\n      right: 1,\n      top: 1,\n      fontSize: 35,\n      fontWeight: 'bold'\n    }), _defineProperty(_close, theme.breakpoints.up('md'), {\n      right: 20,\n      top: 10,\n      fontSize: 50,\n      fontWeight: 'bold'\n    }), _defineProperty(_close, \"position\", 'absolute'), _defineProperty(_close, \"color\", '#f1f1f1'), _defineProperty(_close, '&:hover', {\n      color: '#f44336',\n      cursor: 'pointer'\n    }), _defineProperty(_close, '&:focus', {\n      color: '#f44336',\n      cursor: 'pointer'\n    }), _close),\n    container: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, {\n      width: '100%',\n      height: '100%'\n    })\n  };\n});\n\nvar OverLay = function OverLay(props) {\n  var _useContext = useContext(AppContext),\n      appstate = _useContext.appstate,\n      dispatch = _useContext.dispatch;\n\n  var classes = useStyles(appstate.overlay.open);\n  return __jsx(Box, {\n    className: classes.root\n  }, __jsx(\"span\", {\n    title: \"Close Modal\",\n    className: classes.close,\n    onClick: function onClick() {\n      return dispatch({\n        type: 'OVERLAY',\n        data: false\n      });\n    }\n  }, \"\\xD7\"), __jsx(Box, {\n    className: classes.container\n  }, props.children));\n};\n\nexport default OverLay;","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/components/overlay/index.js"],"names":["React","useContext","makeStyles","Box","AppContext","astyles","useStyles","theme","root","visibility","open","position","top","left","width","height","backgroundColor","zIndex","close","breakpoints","up","right","fontSize","fontWeight","color","cursor","container","rowstyle","OverLay","props","appstate","dispatch","classes","overlay","type","data","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,QAAoB,mBAApB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAAAK,KAAK;AAAA;;AAAA,SAAK;AACnCC,IAAAA,IAAI,EAAE;AACN;AACIC,MAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,eAAIA,IAAI,GAAG,SAAH,GAAe,QAAvB;AAAA,OAFd;AAE+C;AACjDC,MAAAA,QAAQ,EAAE,OAHR;AAIFC,MAAAA,GAAG,EAAE,CAJH;AAKFC,MAAAA,IAAI,EAAE,CALJ;AAMFC,MAAAA,KAAK,EAAE,MANL;AAOFC,MAAAA,MAAM,EAAE,MAPN;AAQFC,MAAAA,eAAe,EAAE,iBARf;AASFC,MAAAA,MAAM,EAAE;AATN,KAD6B;AAYnCC,IAAAA,KAAK,wCACAX,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CADA,EAC4B;AACzBC,MAAAA,KAAK,EAAE,CADkB;AAEzBT,MAAAA,GAAG,EAAE,CAFoB;AAGzBU,MAAAA,QAAQ,EAAE,EAHe;AAIzBC,MAAAA,UAAU,EAAE;AAJa,KAD5B,2BAOAhB,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAPA,EAO4B;AACzBC,MAAAA,KAAK,EAAE,EADkB;AAEzBT,MAAAA,GAAG,EAAE,EAFoB;AAGzBU,MAAAA,QAAQ,EAAE,EAHe;AAIzBC,MAAAA,UAAU,EAAE;AAJa,KAP5B,uCAaS,UAbT,oCAcM,SAdN,2BAeD,SAfC,EAeU;AACPC,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAfV,2BAmBD,SAnBC,EAmBU;AACPD,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAnBV,UAZ8B;AAoCnCC,IAAAA,SAAS,kCACFrB,OAAO,CAACsB,QAAR,CAAiBpB,KAAjB,CADE;AAELO,MAAAA,KAAK,EAAC,MAFD;AAGLC,MAAAA,MAAM,EAAC;AAHF;AApC0B,GAAL;AAAA,CAAN,CAA5B;;AA+CA,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEvB,oBAA+B5B,UAAU,CAACG,UAAD,CAAzC;AAAA,MAAQ0B,QAAR,eAAQA,QAAR;AAAA,MAAkBC,QAAlB,eAAkBA,QAAlB;;AACA,MAAMC,OAAO,GAAG1B,SAAS,CAACwB,QAAQ,CAACG,OAAT,CAAiBvB,IAAlB,CAAzB;AACA,SACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEsB,OAAO,CAACxB;AAAxB,KACI;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,SAAS,EAAEwB,OAAO,CAACd,KAFvB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMa,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAAD,CAAd;AAAA;AAHb,YADJ,EAOI,MAAC,GAAD;AAAQ,IAAA,SAAS,EAAEH,OAAO,CAACN;AAA3B,KACKG,KAAK,CAACO,QADX,CAPJ,CADJ;AAeH,CAnBD;;AAoBA,eAAeR,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport theme from '../../theme';\nimport { AppContext } from '../../state/appcntxt';\nimport * as astyles from '../styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    //    display: open => open ? 'initial' : 'none', // this does not help in getting the element dimentsions\n        visibility: open => open ? 'visible' : 'hidden', // this works in getting element dimensions\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        zIndex: 1100\n    },\n    close: {\n        [theme.breakpoints.up('xs')]:{\n            right: 1,\n            top: 1,\n            fontSize: 35,\n            fontWeight: 'bold',\n        },\n        [theme.breakpoints.up('md')]:{\n            right: 20,\n            top: 10,\n            fontSize: 50,\n            fontWeight: 'bold',\n        },\n        position: 'absolute',      \n        color: '#f1f1f1',\n        '&:hover': {\n            color: '#f44336',\n            cursor: 'pointer',\n        },\n        '&:focus': {\n            color: '#f44336',\n            cursor: 'pointer',\n        }\n    },\n    container: {\n        ...astyles.rowstyle(theme),\n        width:'100%',\n        height:'100%',\n       \n\n    }\n\n\n}));\n\nconst OverLay = (props) => {\n\n    const { appstate, dispatch } = useContext(AppContext);\n    const classes = useStyles(appstate.overlay.open);\n    return (\n        <Box className={classes.root}>\n            <span\n                title=\"Close Modal\"\n                className={classes.close}\n                onClick={() => dispatch({ type: 'OVERLAY', data: false })}>\n                &times;\n                    </span>\n            <Box    className={classes.container}>\n                {props.children}\n            </Box>\n\n\n        </Box>\n    );\n}\nexport default OverLay;"]},"metadata":{},"sourceType":"module"}