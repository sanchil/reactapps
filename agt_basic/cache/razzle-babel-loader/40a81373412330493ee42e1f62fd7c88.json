{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\nimport qs from 'qs';\nimport { fetchCounter } from '../../app/common/api/counter';\nimport configureStore from '../../app/common/store/configureStore';\nimport theme from '../../theme';\nimport { ServerStyleSheets, ThemeProvider } from '@material-ui/styles';\nimport { mainTemplate } from '../templates';\nimport { AppProvider } from '../../app/state/appcntxt';\nimport AppGrid from '../../app/appgrid';\nimport App from '../../app/approuter'; //import App from '../../App';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n};\n\nconst handleMain = async (req, res) => {\n  const sheets = new ServerStyleSheets();\n  const context = {};\n  let agtSessData = JSON.stringify({});\n\n  if ('session' in req && 'sessdata' in req.session) {\n    //  console.log(\"Session data value::: handleMain:: \" + req.session.sessdata);\n    agtSessData = req.session.sessdata;\n    req.session.destroy(req.session.id);\n  } else {\n    console.log(\"No twitter session data \");\n  }\n\n  if ('session' in req && 'gsession' in req.session) {\n    console.log(\"Session data value::: handleMain:: \" + req.session.gsession);\n    agtSessData = req.session.gsession;\n    req.session.destroy(req.session.id);\n  } else {\n    console.log(\"No google session data \");\n  }\n\n  if ('session' in req && 'amzsession' in req.session) {\n    console.log(\"Session data value::: handleMain:: \" + req.session.amzsession);\n    agtSessData = req.session.amzsession;\n    req.session.destroy(req.session.id);\n  } else {\n    console.log(\"No amazon session data \");\n  }\n\n  const p = new Promise(resolve => {\n    fetchCounter(apiResult => {\n      const params = qs.parse(req.query);\n      const counter = parseInt(params.counter, 10) || apiResult || 0; // Compile an initial state\n\n      const preloadedState = {\n        counter\n      }; // Create a new Redux store instance\n\n      const store = configureStore(preloadedState);\n      const markup = renderToString(sheets.collect(__jsx(Provider, {\n        store: store\n      }, __jsx(AppProvider, null, __jsx(StaticRouter, {\n        context: context,\n        location: req.url\n      }, __jsx(ThemeProvider, {\n        theme: theme\n      }, __jsx(AppGrid, null, __jsx(App, null))))))));\n      const css = sheets.toString();\n      const finalState = store.getState();\n      const html = mainTemplate({\n        markup,\n        css,\n        assets,\n        cssLinksFromAssets,\n        jsScriptTagsFromAssets,\n        finalState,\n        agtSessData\n      });\n      resolve(html);\n    });\n  });\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200).send(await p);\n  }\n};\n\nexport default {\n  handleMain\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/svr/controllers/index.js"],"names":["React","Provider","renderToString","StaticRouter","qs","fetchCounter","configureStore","theme","ServerStyleSheets","ThemeProvider","mainTemplate","AppProvider","AppGrid","App","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","handleMain","req","res","sheets","context","agtSessData","JSON","stringify","session","sessdata","destroy","id","console","log","gsession","amzsession","p","Promise","resolve","apiResult","params","parse","query","counter","parseInt","preloadedState","store","markup","collect","url","toString","finalState","getState","html","redirect","status","send"],"mappings":"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","sourcesContent":["import React from 'react';\nimport serialize from 'serialize-javascript';\nimport { Provider } from 'react-redux';\nimport { renderToString } from 'react-dom/server';\nimport { StaticRouter } from 'react-router-dom';\n\nimport qs from 'qs';\nimport { fetchCounter } from '../../app/common/api/counter';\nimport configureStore from '../../app/common/store/configureStore';\nimport theme from '../../theme';\nimport { ServerStyleSheets, ThemeProvider } from '@material-ui/styles';\nimport { mainTemplate } from '../templates';\nimport { AppProvider } from '../../app/state/appcntxt';\nimport AppGrid from '../../app/appgrid';\nimport App from '../../app/approuter';\n//import App from '../../App';\n\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n    assets[entrypoint].css.map(asset =>\n      `<link rel=\"stylesheet\" href=\"${asset}\">`\n    ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n    assets[entrypoint].js.map(asset =>\n      `<script src=\"${asset}\"${extra}></script>`\n    ).join('') : '' : '';\n};\n\n\n\n\nconst handleMain = async (req, res) => {\n\n  const sheets = new ServerStyleSheets();\n  const context = {};\n\n  let agtSessData = JSON.stringify({});\n\n  if ('session' in req && 'sessdata' in req.session) {\n    //  console.log(\"Session data value::: handleMain:: \" + req.session.sessdata);\n\n    agtSessData = req.session.sessdata;\n    req.session.destroy(req.session.id);\n  } else {\n    console.log(\"No twitter session data \");\n  }\n\n\n  if ('session' in req && 'gsession' in req.session) {\n    console.log(\"Session data value::: handleMain:: \" + req.session.gsession);\n    agtSessData = req.session.gsession;\n    req.session.destroy(req.session.id);\n  } else {\n    console.log(\"No google session data \");\n  }\n\n  if ('session' in req && 'amzsession' in req.session) {\n    console.log(\"Session data value::: handleMain:: \" + req.session.amzsession);\n    agtSessData = req.session.amzsession;\n    req.session.destroy(req.session.id);\n  } else {\n    console.log(\"No amazon session data \");\n  }\n\n  const p = new Promise((resolve) => {\n    fetchCounter(apiResult => {\n      const params = qs.parse(req.query);\n      const counter = parseInt(params.counter, 10) || apiResult || 0;\n\n      // Compile an initial state\n      const preloadedState = { counter };\n\n      // Create a new Redux store instance\n      const store = configureStore(preloadedState);\n\n\n      const markup = renderToString(\n        sheets.collect(\n          <Provider store={store}>\n            <AppProvider>\n              <StaticRouter context={context} location={req.url}>\n                <ThemeProvider theme={theme}>\n                 <AppGrid> \n                    <App />\n                  </AppGrid>\n                </ThemeProvider>\n              </StaticRouter>\n            </AppProvider>\n          </Provider>,\n        ),\n      );\n\n      const css = sheets.toString();\n      const finalState = store.getState();\n      const html = mainTemplate({\n        markup,\n        css,\n        assets,\n        cssLinksFromAssets,\n        jsScriptTagsFromAssets,\n        finalState,\n        agtSessData\n      });\n      resolve(html);\n    });\n  });\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200)\n      .send(await p);\n  }\n\n}\n\n\n\n\n\nexport default {\n  handleMain\n}"]},"metadata":{},"sourceType":"module"}