{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded'; //import { AppContext } from '../../state/appcntxt';\n//import { getSession } from '../../data/sessionquery';\n\nimport { getCookie, deleteCookie } from '../../lib/utils'; //import { getRedisSession, deleteRedisSession } from '../../data/session/sessionquery';\n\nimport redissession from '../../data/session/sessionquery';\nimport { useAppContext } from '../../lib/userhooks'; //import {useAuth0} from '../../lib/react-auth0-spa';\n\n/* export function SimpleMenu() {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Open Menu\n      </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n */\n\nconst useLoginIconStyles = makeStyles(theme => ({\n  root: {}\n}));\nexport const LoginIcon = props => {\n  const classes = useLoginIconStyles();\n  const setLogin = props.setLogin;\n  const login = props.login; //   const { appstate, dispatch } = useContext(AppContext);\n\n  const {\n    appstate,\n    dispatch\n  } = useAppContext(); //  const [login, setLogin] = useState(false);\n\n  const {\n    pathname\n  } = useLocation(); // const { isAuthenticated, loginWithRedirect, logout, loading } = useAuth0();\n  // console.log('Login: '+login+ 'Auth0 Authenticated: '+isAuthenticated);\n  // console.log(\"App state user: \" + JSON.stringify(appstate.user));\n\n  useEffect(() => {\n    //   console.log('SESSION is : ' +JSON.stringify(appstate.user));\n    //   console.log('SESSION is props login : ' + login );\n    let sessid = getCookie('sessid');\n    let bool = appstate.user.login || typeof sessid !== 'undefined';\n    console.log('SESSION is : ' + sessid + ' USer is logged in: ' + bool);\n    setLogin(bool);\n\n    if (!appstate.user.login && typeof sessid !== 'undefined') {\n      redissession.getRedisSession(sessid).then(res => {\n        //   setLogin(bool);\n        console.log('redis session from redis..O: ' + JSON.stringify(res));\n        dispatch({\n          type: 'LOGIN',\n          login: true,\n          sessid: sessid,\n          sessdata: res.sessdata,\n          data: res.uid\n        });\n      });\n    } //}, [pathname]);\n\n  }, [appstate.user.login]); //if (login||isAuthenticated) {\n\n  if (login) {\n    return __jsx(React.Fragment, null, __jsx(PersonRoundedIcon, null));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(LockRoundedIcon, null));\n  }\n};\nexport const LoginMenu = props => {\n  const anchorEl = props.anchorEl;\n  const setAnchorEl = props.setAnchorEl;\n  const {\n    appstate,\n    dispatch\n  } = useAppContext();\n  const history = useHistory();\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = e => {\n    handleClose();\n    const sessid = appstate.user.sessid;\n    console.log(\"Logging out sessid :: \" + sessid);\n    console.log(\"sessid in session storage :: \" + sessionStorage.getItem('sessid'));\n\n    if (sessid) {\n      redissession.deleteRedisSession(sessid).then(res => {\n        deleteCookie('sessid');\n        sessionStorage.removeItem('sessid');\n        dispatch({\n          type: 'LOGIN',\n          login: false,\n          source: \"\",\n          sessid: \"\",\n          sessdata: {},\n          data: {}\n        });\n        console.log(\"REDIS SESSION deleted: \" + JSON.stringify(res));\n        props.setLogin(false);\n        history.push('/');\n      });\n    } else {}\n\n    if (!_.isEmpty(appstate.auth0)) {} else {}\n  };\n\n  const handleProfile = url => e => {\n    history.push(`/${url}`);\n    handleClose();\n  };\n\n  return __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: handleProfile('userprofile')\n  }, \"My Profile\"), __jsx(MenuItem, {\n    onClick: handleLogout\n  }, \"Logout\"));\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/components/appbar/components.js"],"names":["React","useEffect","useLocation","useHistory","makeStyles","Menu","MenuItem","LockRoundedIcon","PersonRoundedIcon","getCookie","deleteCookie","redissession","useAppContext","useLoginIconStyles","theme","root","LoginIcon","props","classes","setLogin","login","appstate","dispatch","pathname","sessid","bool","user","console","log","getRedisSession","then","res","JSON","stringify","type","sessdata","data","uid","LoginMenu","anchorEl","setAnchorEl","history","handleClose","handleLogout","e","sessionStorage","getItem","deleteRedisSession","removeItem","source","push","_","isEmpty","auth0","handleProfile","url","Boolean"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\n\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\n//import { AppContext } from '../../state/appcntxt';\n\n//import { getSession } from '../../data/sessionquery';\nimport { getCookie, deleteCookie } from '../../lib/utils';\n//import { getRedisSession, deleteRedisSession } from '../../data/session/sessionquery';\nimport redissession from '../../data/session/sessionquery';\n\nimport {useAppContext} from '../../lib/userhooks';\n\n//import {useAuth0} from '../../lib/react-auth0-spa';\n\n\n/* export function SimpleMenu() {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                Open Menu\n      </Button>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n */\n\nconst useLoginIconStyles = makeStyles(theme => ({\n    root: {\n\n    }\n}));\n\nexport const LoginIcon = (props) => {\n    const classes = useLoginIconStyles();\n    const setLogin = props.setLogin;\n    const login = props.login;\n //   const { appstate, dispatch } = useContext(AppContext);\n    const { appstate, dispatch } = useAppContext();\n  //  const [login, setLogin] = useState(false);\n\n    \n    const { pathname } = useLocation();\n    // const { isAuthenticated, loginWithRedirect, logout, loading } = useAuth0();\n\n    // console.log('Login: '+login+ 'Auth0 Authenticated: '+isAuthenticated);\n\n    // console.log(\"App state user: \" + JSON.stringify(appstate.user));\n\n\n\n    useEffect(() => {\n     //   console.log('SESSION is : ' +JSON.stringify(appstate.user));\n     //   console.log('SESSION is props login : ' + login );\n        let sessid = getCookie('sessid');\n        let bool = appstate.user.login || (typeof sessid !== 'undefined')\n        console.log('SESSION is : '+ sessid + ' USer is logged in: '+ bool );\n        setLogin(bool);\n\n         if (!appstate.user.login && (typeof sessid !== 'undefined')) {\n\n            redissession.getRedisSession(sessid)\n                .then(res => {\n                 //   setLogin(bool);\n                    console.log('redis session from redis..O: '+ JSON.stringify(res));\n                    dispatch({ type: 'LOGIN', login: true, sessid: sessid, sessdata: res.sessdata, data: res.uid });\n                });\n\n        } \n\n    //}, [pathname]);\n    }, [appstate.user.login]);\n\n\n    //if (login||isAuthenticated) {\n    if (login) {\n        return (\n            <React.Fragment>\n                <PersonRoundedIcon />\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <React.Fragment>\n                <LockRoundedIcon />\n            </React.Fragment>\n        )\n\n    }\n\n\n}\n\n\nexport const LoginMenu = (props) => {\n\n    const anchorEl = props.anchorEl;\n    const setAnchorEl = props.setAnchorEl;\n    const { appstate, dispatch } = useAppContext();\n    const history = useHistory();\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = e => {\n        handleClose();\n        const sessid = appstate.user.sessid;\n        console.log(\"Logging out sessid :: \" + sessid);\n        console.log(\"sessid in session storage :: \" + sessionStorage.getItem('sessid'));\n        if (sessid) {\n            redissession.deleteRedisSession(sessid)\n                .then(res => {\n                    deleteCookie('sessid');\n                    sessionStorage.removeItem('sessid');\n                    dispatch({ type: 'LOGIN', login: false, source:\"\", sessid: \"\", sessdata: {}, data: {} });\n                    console.log(\"REDIS SESSION deleted: \" + JSON.stringify(res)); \n                    props.setLogin(false);                 \n                    history.push('/');\n                });\n        } else {\n\n        }\n\n\n        if (!(_.isEmpty(appstate.auth0))) {\n\n        } else {\n\n        }\n    }\n\n    const handleProfile = (url)=>e=>{\n        history.push(`/${url}`);\n        handleClose();\n    }\n\n    return (\n        <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n        >\n            <MenuItem onClick={handleProfile('userprofile')}>My Profile</MenuItem>\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n        </Menu>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}