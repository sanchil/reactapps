{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport { AppContext } from '../../state/appcntxt';\nimport * as astyles from '../styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //    display: open => open ? 'initial' : 'none', // this does not help in getting the element dimentsions\n    visibility: open => open ? 'visible' : 'hidden',\n    // this works in getting element dimensions\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    zIndex: 1100\n  },\n  close: {\n    [theme.breakpoints.up('xs')]: {\n      right: 1,\n      top: 1,\n      fontSize: 35,\n      fontWeight: 'bold'\n    },\n    [theme.breakpoints.up('md')]: {\n      right: 20,\n      top: 10,\n      fontSize: 50,\n      fontWeight: 'bold'\n    },\n    position: 'absolute',\n    color: '#f1f1f1',\n    '&:hover': {\n      color: '#f44336',\n      cursor: 'pointer'\n    },\n    '&:focus': {\n      color: '#f44336',\n      cursor: 'pointer'\n    }\n  },\n  container: _objectSpread(_objectSpread({}, astyles.rowstyle(theme)), {}, {\n    width: '100%',\n    height: '100%'\n  })\n}));\n\nconst OverLay = props => {\n  const {\n    appstate,\n    dispatch\n  } = useContext(AppContext);\n  const classes = useStyles(appstate.overlay.open);\n  return __jsx(Box, {\n    className: classes.root\n  }, __jsx(\"span\", {\n    title: \"Close Modal\",\n    className: classes.close,\n    onClick: () => dispatch({\n      type: 'OVERLAY',\n      data: false\n    })\n  }, \"\\xD7\"), __jsx(Box, {\n    className: classes.container\n  }, props.children));\n};\n\nexport default OverLay;","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/components/overlay/index.js"],"names":["React","useContext","makeStyles","Box","AppContext","astyles","useStyles","theme","root","visibility","open","position","top","left","width","height","backgroundColor","zIndex","close","breakpoints","up","right","fontSize","fontWeight","color","cursor","container","rowstyle","OverLay","props","appstate","dispatch","classes","overlay","type","data","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,QAAoB,mBAApB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACN;AACIC,IAAAA,UAAU,EAAEC,IAAI,IAAIA,IAAI,GAAG,SAAH,GAAe,QAFrC;AAE+C;AACjDC,IAAAA,QAAQ,EAAE,OAHR;AAIFC,IAAAA,GAAG,EAAE,CAJH;AAKFC,IAAAA,IAAI,EAAE,CALJ;AAMFC,IAAAA,KAAK,EAAE,MANL;AAOFC,IAAAA,MAAM,EAAE,MAPN;AAQFC,IAAAA,eAAe,EAAE,iBARf;AASFC,IAAAA,MAAM,EAAE;AATN,GAD6B;AAYnCC,EAAAA,KAAK,EAAE;AACH,KAACX,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA6B;AACzBC,MAAAA,KAAK,EAAE,CADkB;AAEzBT,MAAAA,GAAG,EAAE,CAFoB;AAGzBU,MAAAA,QAAQ,EAAE,EAHe;AAIzBC,MAAAA,UAAU,EAAE;AAJa,KAD1B;AAOH,KAAChB,KAAK,CAACY,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA6B;AACzBC,MAAAA,KAAK,EAAE,EADkB;AAEzBT,MAAAA,GAAG,EAAE,EAFoB;AAGzBU,MAAAA,QAAQ,EAAE,EAHe;AAIzBC,MAAAA,UAAU,EAAE;AAJa,KAP1B;AAaHZ,IAAAA,QAAQ,EAAE,UAbP;AAcHa,IAAAA,KAAK,EAAE,SAdJ;AAeH,eAAW;AACPA,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAfR;AAmBH,eAAW;AACPD,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,MAAM,EAAE;AAFD;AAnBR,GAZ4B;AAoCnCC,EAAAA,SAAS,kCACFrB,OAAO,CAACsB,QAAR,CAAiBpB,KAAjB,CADE;AAELO,IAAAA,KAAK,EAAC,MAFD;AAGLC,IAAAA,MAAM,EAAC;AAHF;AApC0B,CAAL,CAAN,CAA5B;;AA+CA,MAAMa,OAAO,GAAIC,KAAD,IAAW;AAEvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyB9B,UAAU,CAACG,UAAD,CAAzC;AACA,QAAM4B,OAAO,GAAG1B,SAAS,CAACwB,QAAQ,CAACG,OAAT,CAAiBvB,IAAlB,CAAzB;AACA,SACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEsB,OAAO,CAACxB;AAAxB,KACI;AACI,IAAA,KAAK,EAAC,aADV;AAEI,IAAA,SAAS,EAAEwB,OAAO,CAACd,KAFvB;AAGI,IAAA,OAAO,EAAE,MAAMa,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAAD;AAH3B,YADJ,EAOI,MAAC,GAAD;AAAQ,IAAA,SAAS,EAAEH,OAAO,CAACN;AAA3B,KACKG,KAAK,CAACO,QADX,CAPJ,CADJ;AAeH,CAnBD;;AAoBA,eAAeR,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport theme from '../../theme';\nimport { AppContext } from '../../state/appcntxt';\nimport * as astyles from '../styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n    //    display: open => open ? 'initial' : 'none', // this does not help in getting the element dimentsions\n        visibility: open => open ? 'visible' : 'hidden', // this works in getting element dimensions\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0,0,0,0.7)',\n        zIndex: 1100\n    },\n    close: {\n        [theme.breakpoints.up('xs')]:{\n            right: 1,\n            top: 1,\n            fontSize: 35,\n            fontWeight: 'bold',\n        },\n        [theme.breakpoints.up('md')]:{\n            right: 20,\n            top: 10,\n            fontSize: 50,\n            fontWeight: 'bold',\n        },\n        position: 'absolute',      \n        color: '#f1f1f1',\n        '&:hover': {\n            color: '#f44336',\n            cursor: 'pointer',\n        },\n        '&:focus': {\n            color: '#f44336',\n            cursor: 'pointer',\n        }\n    },\n    container: {\n        ...astyles.rowstyle(theme),\n        width:'100%',\n        height:'100%',\n       \n\n    }\n\n\n}));\n\nconst OverLay = (props) => {\n\n    const { appstate, dispatch } = useContext(AppContext);\n    const classes = useStyles(appstate.overlay.open);\n    return (\n        <Box className={classes.root}>\n            <span\n                title=\"Close Modal\"\n                className={classes.close}\n                onClick={() => dispatch({ type: 'OVERLAY', data: false })}>\n                &times;\n                    </span>\n            <Box    className={classes.container}>\n                {props.children}\n            </Box>\n\n\n        </Box>\n    );\n}\nexport default OverLay;"]},"metadata":{},"sourceType":"module"}