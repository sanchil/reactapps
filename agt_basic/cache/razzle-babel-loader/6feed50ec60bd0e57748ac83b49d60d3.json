{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, createRef } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid2 from '../../../components/grids/grid2';\nimport { Box, Button } from '@material-ui/core';\nimport * as astyles from '../../../components/styles';\nimport { blue, yellow } from '@material-ui/core/colors';\n//import { createRedisSession, getRedisSession, deleteRedisSession } from '../../../data/session/sessionquery';\nimport redissession from '../../../data/session/sessionquery'; //import { session } from '../../../data';\n\nimport { TextF } from '../../../components/datacomponents/inputcomponents';\nimport img from './banner_home5.png';\nimport { getUser } from '../../../data/db/queries';\nimport { comparePwd, setCookie } from '../../../lib/utils';\nimport { useAppContext } from '../../../lib/userhooks';\n//import { oauth2SignIn, fbSignIn, amzSignIn } from '../../../data/authquery';\nimport { amzSignIn } from '../../../data/auth/amzauth';\nimport { googleSignInSvr } from '../../../data/auth/googleauth';\nimport { fbSignIn } from '../../../data/auth/fbauth';\nimport { twSignIn } from '../../../data/auth/twauth';\n//import { AmazonIcon, GoogleIcon } from '../../../components/styles/icons';\n//import AmazonIcon  from '@material-ui/icons/Amazon';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport Alert from '../../../components/snacks';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexFlow: 'row wrap',\n    flex: 'auto',\n    width: '90%',\n    maxWidth: '90%',\n    height: 300,\n    borderRadius: 15,\n    margin: 20,\n    padding: '20px 20px 20px 50px'\n  },\n  panel: astyles.panel(theme),\n  panel1: astyles.panel1(theme),\n  bannerpanel: _objectSpread(_objectSpread({}, astyles.bannerpanel(theme)), {}, {\n    [theme.breakpoints.up('xs')]: {\n      margin: 0,\n      padding: '5px 5px 5px 10px',\n      height: 400\n    },\n    [theme.breakpoints.up('sm')]: {\n      margin: 0,\n      padding: '10px 10px 10px 25px',\n      height: 450\n    },\n    [theme.breakpoints.up('md')]: {\n      margin: 0,\n      padding: '100px 20px 20px 50px',\n      height: 700\n    },\n    backgroundImage: `url(${img})`,\n    backgroundSize: 'cover'\n  }),\n  banner: astyles.banner(theme),\n  centerpanel: astyles.centerpanel(theme),\n  center: astyles.center(theme),\n  loginbox: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: '75%',\n      width: '75%',\n      height: '85%',\n      justifyContent: 'space-around',\n      alignItems: 'flex-start',\n      alignContent: 'center',\n      margin: '10px auto auto'\n    },\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '45%',\n      width: '45%',\n      height: '70%',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      alignContent: 'center',\n      margin: '30px auto auto'\n    },\n    boxSizing: 'border-box',\n    display: 'flex',\n    flex: 'auto',\n    flexFlow: 'row wrap',\n    opacity: 0.9,\n    //filter: 'alpha(opacity=50)',\n    borderRadius: 10,\n    backgroundColor: 'white',\n    boxShadow: '0px 0px 20px rgb(200,200,200)' //   backgroundImage: `url(${loginimg})`,\n    //   backgroundSize: 'cover',\n\n  },\n  logincontrols: {\n    [theme.breakpoints.up('xs')]: {\n      maxWidth: '90%',\n      width: '90%',\n      //   height: '15%',\n      flexFlow: 'column nowrap',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      alignContent: 'center' // border: '3px solid green'\n\n    },\n    [theme.breakpoints.up('md')]: {\n      maxWidth: '70%',\n      width: '70%',\n      height: '20%',\n      flexFlow: 'row wrap',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      alignContent: 'center'\n    },\n    boxSizing: 'border-box',\n    display: 'flex',\n    flex: 'auto' //    / border:'1px solid red',\n\n  }\n}));\n\nconst Login = props => {\n  const classes = useStyles();\n  const uidRef = /*#__PURE__*/createRef();\n  const pwdRef = /*#__PURE__*/createRef();\n  const loginSessData = {};\n  const {\n    0: open,\n    1: handleAlert\n  } = useState(false);\n  const {\n    0: errmesg,\n    1: setErrMesg\n  } = useState(\"\");\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory(); // console.log('Pathname: '+ location.hash);\n  //console.log('Login naughty message: ' + naughty);\n  // const { appstate, dispatch } = useContext(AppContext);\n\n  const {\n    appstate,\n    dispatch\n  } = useAppContext();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  const handleLogin = val => evt => {\n    let abortController = new AbortController();\n    const user = uidRef.current.value;\n    const pwd = pwdRef.current.value;\n    getUser(user, {\n      signal: abortController.signal\n    }).then(user => {\n      if (comparePwd(pwd, user.pwd)) {\n        const sessid = 'SESSION_' + user._id; //    createSession(user)\n        //    .then(res=>console.log('SEssion id: '+JSON.stringify(res)));\n\n        redissession.createRedisSession(user, loginSessData).then(res => {\n          //    console.log('RESULt from REDIS : >> ' + JSON.stringify(res));\n          setCookie('sessid', sessid);\n          sessionStorage.setItem('sessid', sessid);\n          dispatch({\n            type: 'LOGIN',\n            login: true,\n            sessid: sessid,\n            sessdata: loginSessData,\n            data: user\n          });\n          history.push('/');\n        }).catch(err => console.log(\"Redis Session error : \" + JSON.stringify(err)));\n      } else {\n        console.log('Credentials Error');\n        throw [4, new Error('Credentials Error')];\n      }\n    }).catch(err => {\n      //  console.log('User arror is: ' + JSON.stringify(err));\n      if (err && err.length > 0) {\n        console.log('Error is: ' + err[1].message);\n        setErrMesg(err[1].message);\n        handleAlert(true); //dispatch({type:'ALERT',open:true,data:err[1].message});\n\n        /*  if (err[0] === 0) {\n             return {}\n         } */\n      }\n    });\n    /*     .then(() => {\n         console.log('Initiate social login.');\n         if (!(_.isEmpty(appstate.auth0))) {\n           } else {\n          }\n       }); */\n    //      const login = { login: true, uid: { name: 'Sandeep' } };\n  };\n\n  const handleRegister = url => e => {\n    history.push(`/${url}`);\n  };\n\n  const handleGoogleLogin = url => e => {\n    //    oauth2SignIn();\n    // googleSignIn();\n    googleSignInSvr();\n  };\n\n  const handleFBLogin = url => e => {\n    fbSignIn(); //fbSignIn1();\n  };\n\n  const handleAmzLogin = url => e => {\n    amzSignIn();\n  };\n\n  const handleTwLogin = url => e => {\n    // history.push('/oauth');\n    twSignIn(); // fetch('/oauth')\n    // .then(res=>{console.log(\"Twitter Response: \"+JSON.stringify(res))})\n    //.catch(err=>{console.log(\"Error is: \"+err.message)})\n  };\n\n  return __jsx(Grid2, null, __jsx(Alert, {\n    open: open,\n    handleClose: () => handleAlert(false)\n  }, __jsx(\"p\", null, errmesg, \" !!!\")), __jsx(Box, {\n    className: classes.bannerpanel\n  }, __jsx(Box, {\n    className: classes.loginbox\n  }, __jsx(TextF, {\n    ref: uidRef,\n    label: \"User Id\",\n    width: \"70%\"\n  }), __jsx(TextF, {\n    ref: pwdRef,\n    type: \"password\",\n    label: \"Password\",\n    width: \"70%\"\n  }), __jsx(Box, {\n    className: classes.logincontrols\n  }, __jsx(Button, {\n    onClick: handleLogin('login')\n  }, \"Login\"), __jsx(Button, {\n    onClick: handleRegister('register')\n  }, \"Register\"), __jsx(Button, {\n    onClick: handleGoogleLogin('googlelogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0\n      }\n    })\n  }, \"Google\"), __jsx(Button, {\n    onClick: handleFBLogin('fblogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0,\n        color: blue[700]\n      }\n    })\n  }, \"Facebook\"), __jsx(Button, {\n    onClick: handleAmzLogin('amzlogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0,\n        color: yellow[700]\n      }\n    })\n  }, \"Amazon\"), __jsx(Button, {\n    onClick: handleTwLogin('twlogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0,\n        color: yellow[700]\n      }\n    })\n  }, \"Twitter\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/content/admin/login/index.js"],"names":["React","useState","useEffect","createRef","useLocation","useHistory","makeStyles","Grid2","Box","Button","astyles","blue","yellow","redissession","TextF","img","getUser","comparePwd","setCookie","useAppContext","amzSignIn","googleSignInSvr","fbSignIn","twSignIn","FacebookIcon","Alert","useStyles","theme","root","boxSizing","display","flexFlow","flex","width","maxWidth","height","borderRadius","margin","padding","panel","panel1","bannerpanel","breakpoints","up","backgroundImage","backgroundSize","banner","centerpanel","center","loginbox","justifyContent","alignItems","alignContent","opacity","backgroundColor","boxShadow","logincontrols","Login","props","classes","uidRef","pwdRef","loginSessData","open","handleAlert","errmesg","setErrMesg","pathname","history","appstate","dispatch","window","scrollTo","handleLogin","val","evt","abortController","AbortController","user","current","value","pwd","signal","then","sessid","_id","createRedisSession","res","sessionStorage","setItem","type","login","sessdata","data","push","catch","err","console","log","JSON","stringify","Error","length","message","handleRegister","url","e","handleGoogleLogin","handleFBLogin","handleAmzLogin","handleTwLogin","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef, useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid2 from '../../../components/grids/grid2';\nimport { Box, Paper, Typography, Button } from '@material-ui/core';\nimport theme from '../../../theme';\nimport * as astyles from '../../../components/styles';\nimport { blue, yellow, amber } from '@material-ui/core/colors';\nimport { AppContext } from '../../../state/appcntxt';\n//import { createRedisSession, getRedisSession, deleteRedisSession } from '../../../data/session/sessionquery';\nimport redissession from '../../../data/session/sessionquery';\n//import { session } from '../../../data';\nimport { TextF } from '../../../components/datacomponents/inputcomponents';\nimport img from './banner_home5.png';\nimport loginimg from './login_home.jpg';\nimport { getUser } from '../../../data/db/queries';\nimport { comparePwd, parseRedisResponseToObj, getCookie, setCookie, checkCookie, deleteCookie } from '../../../lib/utils';\nimport { useAppContext } from '../../../lib/userhooks';\nimport _ from 'lodash';\n//import { oauth2SignIn, fbSignIn, amzSignIn } from '../../../data/authquery';\nimport { amzSignIn } from '../../../data/auth/amzauth';\nimport { googleSignIn, googleSignInSvr } from '../../../data/auth/googleauth';\nimport { fbSignIn, fbSignIn1 } from '../../../data/auth/fbauth';\nimport { twSignIn } from '../../../data/auth/twauth';\n\nimport SaveIcon from '@material-ui/icons/Save';\n//import { AmazonIcon, GoogleIcon } from '../../../components/styles/icons';\n//import AmazonIcon  from '@material-ui/icons/Amazon';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Alert from '../../../components/snacks';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexFlow: 'row wrap',\n        flex: 'auto',\n        width: '90%',\n        maxWidth: '90%',\n        height: 300,\n        borderRadius: 15,\n        margin: 20,\n        padding: '20px 20px 20px 50px'\n\n    },\n    panel: astyles.panel(theme),\n    panel1: astyles.panel1(theme),\n    bannerpanel: {\n        ...astyles.bannerpanel(theme),\n        [theme.breakpoints.up('xs')]: {\n            margin: 0,\n            padding: '5px 5px 5px 10px',\n            height: 400,\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: 0,\n            padding: '10px 10px 10px 25px',\n            height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            margin: 0,\n            padding: '100px 20px 20px 50px',\n            height: 700,\n        },\n        backgroundImage: `url(${img})`,\n        backgroundSize: 'cover',\n    },\n\n    banner: astyles.banner(theme),\n    centerpanel: astyles.centerpanel(theme),\n    center: astyles.center(theme),\n    loginbox: {\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: '75%',\n            width: '75%',\n            height: '85%',\n            justifyContent: 'space-around',\n            alignItems: 'flex-start',\n            alignContent: 'center',\n            margin: '10px auto auto',\n           \n        },\n        [theme.breakpoints.up('md')]: {\n            maxWidth: '45%',\n            width: '45%',\n            height: '70%',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n            alignContent: 'center',\n            margin: '30px auto auto',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n\n        opacity: 0.9,\n        //filter: 'alpha(opacity=50)',\n        borderRadius: 10,\n        backgroundColor: 'white',\n        boxShadow: '0px 0px 20px rgb(200,200,200)',\n        //   backgroundImage: `url(${loginimg})`,\n        //   backgroundSize: 'cover',\n\n    },\n    logincontrols: {\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: '90%',\n            width: '90%',\n         //   height: '15%',\n            flexFlow: 'column nowrap',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            alignContent: 'center',\n           // border: '3px solid green'\n        },\n        [theme.breakpoints.up('md')]: {\n            maxWidth: '70%',\n            width: '70%',\n            height: '20%',\n            flexFlow: 'row wrap',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n            alignContent: 'center',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        \n\n        //    / border:'1px solid red',\n\n    },\n\n}));\n\nconst Login = (props) => {\n    const classes = useStyles();\n    const uidRef = createRef();\n    const pwdRef = createRef();\n    const loginSessData = {}\n    const [open, handleAlert] = useState(false);\n    const [errmesg, setErrMesg] = useState(\"\");\n\n    const { pathname } = useLocation();\n\n    const history = useHistory();\n\n    // console.log('Pathname: '+ location.hash);\n    //console.log('Login naughty message: ' + naughty);\n\n    // const { appstate, dispatch } = useContext(AppContext);\n    const { appstate, dispatch } = useAppContext();\n\n\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n\n\n    const handleLogin = (val) => evt => {\n        let abortController = new AbortController();\n\n        const user = uidRef.current.value;\n        const pwd = pwdRef.current.value;\n\n\n\n\n        getUser(user, { signal: abortController.signal })\n            .then(user => {\n                if (comparePwd(pwd, user.pwd)) {\n\n\n                    const sessid = 'SESSION_' + user._id;\n\n                    //    createSession(user)\n                    //    .then(res=>console.log('SEssion id: '+JSON.stringify(res)));\n\n                    redissession.createRedisSession(user, loginSessData)\n                        .then(res => {\n                            //    console.log('RESULt from REDIS : >> ' + JSON.stringify(res));\n                            setCookie('sessid', sessid);\n                            sessionStorage.setItem('sessid', sessid);\n                            dispatch({ type: 'LOGIN', login: true, sessid: sessid, sessdata: loginSessData, data: user });\n\n                            history.push('/');\n                        })\n                        .catch(err => console.log(\"Redis Session error : \" + JSON.stringify(err)));\n\n\n                } else {\n                    console.log('Credentials Error');\n                    throw [4, new Error('Credentials Error')];\n                }\n            })\n            .catch(err => {\n                //  console.log('User arror is: ' + JSON.stringify(err));\n                if (err && err.length > 0) {\n                    console.log('Error is: ' + err[1].message);\n                    setErrMesg(err[1].message);\n                    handleAlert(true);\n                    //dispatch({type:'ALERT',open:true,data:err[1].message});\n                    /*  if (err[0] === 0) {\n                         return {}\n                     } */\n                }\n\n            });\n        /*     .then(() => {\n             console.log('Initiate social login.');\n             if (!(_.isEmpty(appstate.auth0))) {\n\n\n             } else {\n\n             }\n\n\n         }); */\n\n\n\n        //      const login = { login: true, uid: { name: 'Sandeep' } };\n\n\n    }\n\n\n\n\n    const handleRegister = (url) => (e) => {\n        history.push(`/${url}`);\n    }\n\n    const handleGoogleLogin = (url) => e => {\n\n        //    oauth2SignIn();\n        // googleSignIn();\n        googleSignInSvr();\n\n\n    }\n\n    const handleFBLogin = (url) => e => {\n\n        fbSignIn();\n        //fbSignIn1();\n\n    }\n\n    const handleAmzLogin = (url) => e => {\n\n        amzSignIn();\n\n    }\n\n    const handleTwLogin = (url) => e => {\n        // history.push('/oauth');\n        twSignIn();\n        // fetch('/oauth')\n        // .then(res=>{console.log(\"Twitter Response: \"+JSON.stringify(res))})\n        //.catch(err=>{console.log(\"Error is: \"+err.message)})\n    }\n\n\n\n    return (\n        <Grid2>\n            <Alert open={open} handleClose={() => handleAlert(false)}>\n                <p>{errmesg} !!!</p>\n            </Alert>\n            <Box className={classes.bannerpanel} >\n                {/*   <Paper className={classes.banner} elevation={3}> */}\n                <Box className={classes.loginbox}>\n                    <TextF ref={uidRef} label=\"User Id\" width=\"70%\" />\n                    <TextF ref={pwdRef} type='password' label=\"Password\" width=\"70%\" />\n                    <Box className={classes.logincontrols}>\n\n                        <Button onClick={handleLogin('login')} >Login</Button>\n                        <Button onClick={handleRegister('register')} >Register</Button>\n                        <Button onClick={handleGoogleLogin('googlelogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0 }} />}\n                        >Google</Button>\n                        <Button\n                            onClick={handleFBLogin('fblogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0, color: blue[700] }} />}\n                        >Facebook</Button>\n                        <Button\n                            onClick={handleAmzLogin('amzlogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0, color: yellow[700] }} />}\n                        >Amazon</Button>\n\n                        <Button\n                            onClick={handleTwLogin('twlogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0, color: yellow[700] }} />}\n                        >Twitter</Button>\n\n\n\n                    </Box>\n                </Box>\n\n\n                {/*   </Paper> */}\n\n            </Box>\n\n\n\n\n\n        </Grid2 >\n    );\n\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}