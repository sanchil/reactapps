{"ast":null,"code":"import _objectSpread from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { useReducer } from 'react';\nexport var initstate = {\n  bodyload: false,\n  modal: false,\n  auth0: {},\n  user: {\n    login: false,\n    sessid: null,\n    sessdata: {},\n    source: '',\n    uid: {}\n  },\n  calc: {\n    caltype: \"i\",\n    costofhouse: 0,\n    emi: 0,\n    annualincome: 0,\n    mortgagerate: 0,\n    loanterm: 0,\n    landtransfertax: 0,\n    affordability: 0,\n    cmhcpremium: 0,\n    results: 0,\n    othercosts: 0,\n    totalcosts: 0\n  },\n  alert: {\n    open: false,\n    mesg: \"\"\n  },\n  overlay: {\n    open: false\n  },\n  overlaycontent: {\n    home: {\n      title: \"\",\n      name: \"\",\n      descr: \"\",\n      addr: \"\",\n      bath: \"\",\n      garage: \"\",\n      bedroom: \"\",\n      amenities: \"\"\n    }\n  },\n  viewprofile: {\n    view: ''\n  }\n};\nexport var useContextStore = function useContextStore(inp) {\n  var _useReducer = useReducer(function (appstate, action) {\n    var newstate = Object.assign({}, appstate); //    console.log('old app state is ' + JSON.stringify(newstate))\n\n    //    console.log('old app state is ' + JSON.stringify(newstate))\n    switch (action.type) {\n      case 'BODYLOAD':\n        {\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            bodyload: action.data\n          });\n        }\n\n      case 'OPEN':\n        {\n          var ok = _objectSpread(_objectSpread({}, newstate), {}, {\n            modal: action.data\n          });\n\n          console.log('new app state is ' + JSON.stringify(ok));\n          return ok;\n        }\n\n      case \"LTR\":\n        {\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            calc: Object.assign({}, appstate.calc, {\n              caltype: \"ltr\"\n            })\n          });\n        }\n\n      case \"MAC\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              caltype: \"mac\"\n            })\n          }); //return Object.assign({}, appstate, { calc: \"mac\" });\n        }\n\n      case \"ML\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              caltype: \"ml\"\n            })\n          }); //return Object.assign({}, appstate, { calc: \"ml\" });\n        }\n\n      case \"CMHC\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              caltype: \"cmhc\"\n            })\n          }); // return Object.assign({}, appstate, { calc: \"cmhc\" });\n        }\n\n      case \"CALLTR\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              landtransfertax: action.data\n            })\n          }); // return Object.assign({}, appstate, { calc: \"cmhc\" });\n        }\n\n      case \"CALEMI\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              emi: action.data\n            })\n          }); // return Object.assign({}, appstate, { calc: \"cmhc\" });\n        }\n\n      case \"CALAFF\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              affordability: action.data\n            })\n          }); // return Object.assign({}, appstate, { calc: \"cmhc\" });\n        }\n\n      case \"CALCMHC\":\n        {\n          return Object.assign({}, appstate, {\n            calc: Object.assign({}, appstate.calc, {\n              cmhcpremium: action.data\n            })\n          }); // return Object.assign({}, appstate, { calc: \"cmhc\" });\n        }\n\n      case 'ALERT':\n        {\n          // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            alert: Object.assign({}, {\n              open: action.open,\n              mesg: action.data\n            })\n          });\n        }\n\n      case 'OVERLAY':\n        {\n          // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            overlay: Object.assign({}, {\n              open: action.data\n            })\n          });\n        }\n\n      case 'OVERLAYCONTENTHOME':\n        {\n          // console.log(\"Contact Dispatch received.: \"+ JSON.stringify(action.data));\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            overlaycontent: Object.assign({}, {\n              home: _objectSpread({}, action.data)\n            })\n          });\n        }\n\n      case 'LOGIN':\n        {\n          // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            user: Object.assign({}, {\n              login: action.login,\n              sessid: action.sessid,\n              source: action.source,\n              sessdata: _objectSpread({}, action.sessdata),\n              uid: Object.assign({}, _objectSpread({}, action.data))\n            })\n          });\n        }\n\n      case 'AUTH0':\n        {\n          // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            auth0: action.data\n          });\n        }\n\n      case 'VIEWPROFILE':\n        {\n          // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n          return _objectSpread(_objectSpread({}, newstate), {}, {\n            viewprofile: Object.assign({}, {\n              view: action.data\n            })\n          });\n        }\n\n      default:\n        return appstate;\n    }\n  }, inp),\n      appstate = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return {\n    appstate: appstate,\n    dispatch: dispatch\n  };\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/state/hookstore.js"],"names":["useReducer","initstate","bodyload","modal","auth0","user","login","sessid","sessdata","source","uid","calc","caltype","costofhouse","emi","annualincome","mortgagerate","loanterm","landtransfertax","affordability","cmhcpremium","results","othercosts","totalcosts","alert","open","mesg","overlay","overlaycontent","home","title","name","descr","addr","bath","garage","bedroom","amenities","viewprofile","view","useContextStore","inp","appstate","action","newstate","Object","assign","type","data","ok","console","log","JSON","stringify","dispatch"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const initstate = {\n    bodyload: false,\n    modal: false,\n    auth0:{\n\n    },\n    user: {\n        login: false,   \n        sessid:null,\n        sessdata:{},\n        source:'',   \n        uid: {},\n    },\n    calc: {\n        caltype: \"i\",\n        costofhouse: 0,\n        emi: 0,\n        annualincome: 0,\n        mortgagerate: 0,\n        loanterm: 0,\n        landtransfertax: 0,\n        affordability: 0,\n        cmhcpremium: 0,\n        results: 0,\n        othercosts: 0,\n        totalcosts: 0,\n    },\n    alert: {\n        open: false,\n        mesg: \"\",\n    },\n    overlay: {\n        open: false,\n    },\n    overlaycontent: {\n        home: {\n            title: \"\",\n            name: \"\",\n            descr: \"\",\n            addr: \"\",\n            bath: \"\",\n            garage: \"\",\n            bedroom: \"\",\n            amenities: \"\"\n        },\n\n    },\n    viewprofile:{\n        view:''\n    }\n\n}\n\n\nexport const useContextStore = (inp) => {\n\n\n\n    const [appstate, dispatch] = useReducer((appstate, action) => {\n        const newstate = Object.assign({}, appstate);\n        //    console.log('old app state is ' + JSON.stringify(newstate))\n        switch (action.type) {\n            case 'BODYLOAD':\n                {\n                    return { ...newstate, bodyload: action.data };\n                }\n            case 'OPEN':\n                {\n                    const ok = { ...newstate, modal: action.data };\n                    console.log('new app state is ' + JSON.stringify(ok))\n\n                    return ok;\n                }\n\n            case \"LTR\": {\n                return { ...newstate, calc: Object.assign({}, appstate.calc, { caltype: \"ltr\" }) };\n            }\n\n            case \"MAC\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { caltype: \"mac\" }) });\n                //return Object.assign({}, appstate, { calc: \"mac\" });\n            }\n\n            case \"ML\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { caltype: \"ml\" }) });\n                //return Object.assign({}, appstate, { calc: \"ml\" });\n            }\n\n            case \"CMHC\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { caltype: \"cmhc\" }) });\n                // return Object.assign({}, appstate, { calc: \"cmhc\" });\n            }\n\n            case \"CALLTR\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { landtransfertax: action.data }) });\n                // return Object.assign({}, appstate, { calc: \"cmhc\" });\n            }\n\n            case \"CALEMI\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { emi: action.data }) });\n                // return Object.assign({}, appstate, { calc: \"cmhc\" });\n            }\n\n            case \"CALAFF\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { affordability: action.data }) });\n                // return Object.assign({}, appstate, { calc: \"cmhc\" });\n            }\n\n            case \"CALCMHC\": {\n                return Object.assign({}, appstate, { calc: Object.assign({}, appstate.calc, { cmhcpremium: action.data }) });\n                // return Object.assign({}, appstate, { calc: \"cmhc\" });\n            }\n\n            case 'ALERT': {\n                // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n\n                return { ...newstate, alert: Object.assign({}, { open: action.open, mesg: action.data }) };\n            }\n\n            case 'OVERLAY': {\n                // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n\n                return { ...newstate, overlay: Object.assign({}, { open: action.data }) };\n            }\n            case 'OVERLAYCONTENTHOME': {\n                // console.log(\"Contact Dispatch received.: \"+ JSON.stringify(action.data));\n                return { ...newstate, overlaycontent: Object.assign({}, { home:{...action.data}}) };\n            }\n\n            case 'LOGIN': {\n                // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n\n                return { ...newstate, user: Object.assign({}, { login: action.login, sessid:action.sessid, source:action.source ,sessdata:{...action.sessdata},uid: Object.assign({}, { ...action.data }) }) };\n            }\n\n            case 'AUTH0': {\n                // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n\n                return { ...newstate, auth0: action.data};\n            }\n\n            case 'VIEWPROFILE': {\n                // console.log(\"Contact Dispatch received. Old state is: \"+ JSON.stringify(appstate));\n\n                return { ...newstate, viewprofile: Object.assign({},{view:action.data})};\n            }\n\n\n\n            default:\n                return appstate;\n        }\n    }, inp);\n\n    return { appstate, dispatch }\n\n}\n"]},"metadata":{},"sourceType":"module"}