{"ast":null,"code":"export var SET_COUNTER = 'SET_COUNTER';\nexport var INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport var DECREMENT_COUNTER = 'DECREMENT_COUNTER';\nexport var set = function set(value) {\n  return {\n    type: SET_COUNTER,\n    payload: value\n  };\n};\nexport var increment = function increment() {\n  return {\n    type: INCREMENT_COUNTER\n  };\n};\nexport var decrement = function decrement() {\n  return {\n    type: DECREMENT_COUNTER\n  };\n};\nexport var incrementIfOdd = function incrementIfOdd() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        counter = _getState.counter;\n\n    if (counter % 2 === 0) {\n      return;\n    }\n\n    dispatch(increment());\n  };\n};\nexport var incrementAsync = function incrementAsync() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(increment());\n    }, delay);\n  };\n};","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/common/actions/index.js"],"names":["SET_COUNTER","INCREMENT_COUNTER","DECREMENT_COUNTER","set","value","type","payload","increment","decrement","incrementIfOdd","dispatch","getState","counter","incrementAsync","delay","setTimeout"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK;AAAA,SAAK;AAC3BC,IAAAA,IAAI,EAAEL,WADqB;AAE3BM,IAAAA,OAAO,EAAEF;AAFkB,GAAL;AAAA,CAAjB;AAKP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BF,IAAAA,IAAI,EAAEJ;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BH,IAAAA,IAAI,EAAEH;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC1D,oBAAoBA,QAAQ,EAA5B;AAAA,QAAQC,OAAR,aAAQA,OAAR;;AAEA,QAAIA,OAAO,GAAG,CAAV,KAAgB,CAApB,EAAuB;AACrB;AACD;;AAEDF,IAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACD,GAR6B;AAAA,CAAvB;AAUP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAACC,KAAD,uEAAS,IAAT;AAAA,SAAkB,UAAAJ,QAAQ,EAAI;AAC1DK,IAAAA,UAAU,CAAC,YAAM;AACfL,MAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACD,KAFS,EAEPO,KAFO,CAAV;AAGD,GAJ6B;AAAA,CAAvB","sourcesContent":["export const SET_COUNTER = 'SET_COUNTER';\nexport const INCREMENT_COUNTER = 'INCREMENT_COUNTER';\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER';\n\nexport const set = value => ({\n  type: SET_COUNTER,\n  payload: value,\n});\n\nexport const increment = () => ({\n  type: INCREMENT_COUNTER,\n});\n\nexport const decrement = () => ({\n  type: DECREMENT_COUNTER,\n});\n\nexport const incrementIfOdd = () => (dispatch, getState) => {\n  const { counter } = getState();\n\n  if (counter % 2 === 0) {\n    return;\n  }\n\n  dispatch(increment());\n};\n\nexport const incrementAsync = (delay = 1000) => dispatch => {\n  setTimeout(() => {\n    dispatch(increment());\n  }, delay);\n};\n"]},"metadata":{},"sourceType":"module"}