{"ast":null,"code":"import _defineProperty from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, createRef } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid2 from '../../../components/grids/grid2';\nimport { Box, Button } from '@material-ui/core';\nimport * as astyles from '../../../components/styles';\nimport { blue, yellow } from '@material-ui/core/colors';\n//import { createRedisSession, getRedisSession, deleteRedisSession } from '../../../data/session/sessionquery';\nimport redissession from '../../../data/session/sessionquery'; //import { session } from '../../../data';\n\nimport { TextF } from '../../../components/datacomponents/inputcomponents';\nimport img from './banner_home5.png';\nimport { getUser } from '../../../data/db/queries';\nimport { comparePwd, setCookie } from '../../../lib/utils';\nimport { useAppContext } from '../../../lib/userhooks';\n//import { oauth2SignIn, fbSignIn, amzSignIn } from '../../../data/authquery';\nimport { amzSignIn } from '../../../data/auth/amzauth';\nimport { googleSignInSvr } from '../../../data/auth/googleauth';\nimport { fbSignIn } from '../../../data/auth/fbauth';\nimport { twSignIn } from '../../../data/auth/twauth';\n//import { AmazonIcon, GoogleIcon } from '../../../components/styles/icons';\n//import AmazonIcon  from '@material-ui/icons/Amazon';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport Alert from '../../../components/snacks';\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2, _loginbox, _logincontrols;\n\n  return {\n    root: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      flex: 'auto',\n      width: '90%',\n      maxWidth: '90%',\n      height: 300,\n      borderRadius: 15,\n      margin: 20,\n      padding: '20px 20px 20px 50px'\n    },\n    panel: astyles.panel(theme),\n    panel1: astyles.panel1(theme),\n    bannerpanel: _objectSpread(_objectSpread({}, astyles.bannerpanel(theme)), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up('xs'), {\n      margin: 0,\n      padding: '5px 5px 5px 10px',\n      height: 400\n    }), _defineProperty(_objectSpread2, theme.breakpoints.up('sm'), {\n      margin: 0,\n      padding: '10px 10px 10px 25px',\n      height: 450\n    }), _defineProperty(_objectSpread2, theme.breakpoints.up('md'), {\n      margin: 0,\n      padding: '100px 20px 20px 50px',\n      height: 700\n    }), _defineProperty(_objectSpread2, \"backgroundImage\", \"url(\".concat(img, \")\")), _defineProperty(_objectSpread2, \"backgroundSize\", 'cover'), _objectSpread2)),\n    banner: astyles.banner(theme),\n    centerpanel: astyles.centerpanel(theme),\n    center: astyles.center(theme),\n    loginbox: (_loginbox = {}, _defineProperty(_loginbox, theme.breakpoints.up('xs'), {\n      maxWidth: '75%',\n      width: '75%',\n      height: '85%',\n      justifyContent: 'space-around',\n      alignItems: 'flex-start',\n      alignContent: 'center',\n      margin: '10px auto auto'\n    }), _defineProperty(_loginbox, theme.breakpoints.up('md'), {\n      maxWidth: '45%',\n      width: '45%',\n      height: '70%',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      alignContent: 'center',\n      margin: '30px auto auto'\n    }), _defineProperty(_loginbox, \"boxSizing\", 'border-box'), _defineProperty(_loginbox, \"display\", 'flex'), _defineProperty(_loginbox, \"flex\", 'auto'), _defineProperty(_loginbox, \"flexFlow\", 'row wrap'), _defineProperty(_loginbox, \"opacity\", 0.9), _defineProperty(_loginbox, \"borderRadius\", 10), _defineProperty(_loginbox, \"backgroundColor\", 'white'), _defineProperty(_loginbox, \"boxShadow\", '0px 0px 20px rgb(200,200,200)'), _loginbox),\n    logincontrols: (_logincontrols = {}, _defineProperty(_logincontrols, theme.breakpoints.up('xs'), {\n      maxWidth: '90%',\n      width: '90%',\n      //   height: '15%',\n      flexFlow: 'column nowrap',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      alignContent: 'center' // border: '3px solid green'\n\n    }), _defineProperty(_logincontrols, theme.breakpoints.up('md'), {\n      maxWidth: '70%',\n      width: '70%',\n      height: '20%',\n      flexFlow: 'row wrap',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      alignContent: 'center'\n    }), _defineProperty(_logincontrols, \"boxSizing\", 'border-box'), _defineProperty(_logincontrols, \"display\", 'flex'), _defineProperty(_logincontrols, \"flex\", 'auto'), _logincontrols)\n  };\n});\n\nvar Login = function Login(props) {\n  var classes = useStyles();\n  var uidRef = /*#__PURE__*/createRef();\n  var pwdRef = /*#__PURE__*/createRef();\n  var loginSessData = {};\n\n  var _useState = useState(false),\n      open = _useState[0],\n      handleAlert = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      errmesg = _useState2[0],\n      setErrMesg = _useState2[1];\n\n  var _useLocation = useLocation(),\n      pathname = _useLocation.pathname;\n\n  var history = useHistory(); // console.log('Pathname: '+ location.hash);\n  //console.log('Login naughty message: ' + naughty);\n  // const { appstate, dispatch } = useContext(AppContext);\n\n  var _useAppContext = useAppContext(),\n      appstate = _useAppContext.appstate,\n      dispatch = _useAppContext.dispatch;\n\n  useEffect(function () {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  var handleLogin = function handleLogin(val) {\n    return function (evt) {\n      var abortController = new AbortController();\n      var user = uidRef.current.value;\n      var pwd = pwdRef.current.value;\n      getUser(user, {\n        signal: abortController.signal\n      }).then(function (user) {\n        if (comparePwd(pwd, user.pwd)) {\n          var sessid = 'SESSION_' + user._id; //    createSession(user)\n          //    .then(res=>console.log('SEssion id: '+JSON.stringify(res)));\n\n          redissession.createRedisSession(user, loginSessData).then(function (res) {\n            //    console.log('RESULt from REDIS : >> ' + JSON.stringify(res));\n            setCookie('sessid', sessid);\n            sessionStorage.setItem('sessid', sessid);\n            dispatch({\n              type: 'LOGIN',\n              login: true,\n              sessid: sessid,\n              sessdata: loginSessData,\n              data: user\n            });\n            history.push('/');\n          })[\"catch\"](function (err) {\n            return console.log(\"Redis Session error : \" + JSON.stringify(err));\n          });\n        } else {\n          console.log('Credentials Error');\n          throw [4, new Error('Credentials Error')];\n        }\n      })[\"catch\"](function (err) {\n        //  console.log('User arror is: ' + JSON.stringify(err));\n        if (err && err.length > 0) {\n          console.log('Error is: ' + err[1].message);\n          setErrMesg(err[1].message);\n          handleAlert(true); //dispatch({type:'ALERT',open:true,data:err[1].message});\n\n          /*  if (err[0] === 0) {\n               return {}\n           } */\n        }\n      });\n      /*     .then(() => {\n           console.log('Initiate social login.');\n           if (!(_.isEmpty(appstate.auth0))) {\n             } else {\n            }\n         }); */\n      //      const login = { login: true, uid: { name: 'Sandeep' } };\n    };\n  };\n\n  var handleRegister = function handleRegister(url) {\n    return function (e) {\n      history.push(\"/\".concat(url));\n    };\n  };\n\n  var handleGoogleLogin = function handleGoogleLogin(url) {\n    return function (e) {\n      //    oauth2SignIn();\n      // googleSignIn();\n      googleSignInSvr();\n    };\n  };\n\n  var handleFBLogin = function handleFBLogin(url) {\n    return function (e) {\n      fbSignIn(); //fbSignIn1();\n    };\n  };\n\n  var handleAmzLogin = function handleAmzLogin(url) {\n    return function (e) {\n      amzSignIn();\n    };\n  };\n\n  var handleTwLogin = function handleTwLogin(url) {\n    return function (e) {\n      // history.push('/oauth');\n      twSignIn(); // fetch('/oauth')\n      // .then(res=>{console.log(\"Twitter Response: \"+JSON.stringify(res))})\n      //.catch(err=>{console.log(\"Error is: \"+err.message)})\n    };\n  };\n\n  return __jsx(Grid2, null, __jsx(Alert, {\n    open: open,\n    handleClose: function handleClose() {\n      return handleAlert(false);\n    }\n  }, __jsx(\"p\", null, errmesg, \" !!!\")), __jsx(Box, {\n    className: classes.bannerpanel\n  }, __jsx(Box, {\n    className: classes.loginbox\n  }, __jsx(TextF, {\n    ref: uidRef,\n    label: \"User Id\",\n    width: \"70%\"\n  }), __jsx(TextF, {\n    ref: pwdRef,\n    type: \"password\",\n    label: \"Password\",\n    width: \"70%\"\n  }), __jsx(Box, {\n    className: classes.logincontrols\n  }, __jsx(Button, {\n    onClick: handleLogin('login')\n  }, \"Login\"), __jsx(Button, {\n    onClick: handleRegister('register')\n  }, \"Register\"), __jsx(Button, {\n    onClick: handleGoogleLogin('googlelogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0\n      }\n    })\n  }, \"Google\"), __jsx(Button, {\n    onClick: handleFBLogin('fblogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0,\n        color: blue[700]\n      }\n    })\n  }, \"Facebook\"), __jsx(Button, {\n    onClick: handleAmzLogin('amzlogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0,\n        color: yellow[700]\n      }\n    })\n  }, \"Amazon\"), __jsx(Button, {\n    onClick: handleTwLogin('twlogin'),\n    startIcon: __jsx(FacebookIcon, {\n      fontSize: \"large\",\n      style: {\n        margin: 0,\n        color: yellow[700]\n      }\n    })\n  }, \"Twitter\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/content/admin/login/index.js"],"names":["React","useState","useEffect","createRef","useLocation","useHistory","makeStyles","Grid2","Box","Button","astyles","blue","yellow","redissession","TextF","img","getUser","comparePwd","setCookie","useAppContext","amzSignIn","googleSignInSvr","fbSignIn","twSignIn","FacebookIcon","Alert","useStyles","theme","root","boxSizing","display","flexFlow","flex","width","maxWidth","height","borderRadius","margin","padding","panel","panel1","bannerpanel","breakpoints","up","banner","centerpanel","center","loginbox","justifyContent","alignItems","alignContent","logincontrols","Login","props","classes","uidRef","pwdRef","loginSessData","open","handleAlert","errmesg","setErrMesg","pathname","history","appstate","dispatch","window","scrollTo","handleLogin","val","evt","abortController","AbortController","user","current","value","pwd","signal","then","sessid","_id","createRedisSession","res","sessionStorage","setItem","type","login","sessdata","data","push","err","console","log","JSON","stringify","Error","length","message","handleRegister","url","e","handleGoogleLogin","handleFBLogin","handleAmzLogin","handleTwLogin","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef, useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid2 from '../../../components/grids/grid2';\nimport { Box, Paper, Typography, Button } from '@material-ui/core';\nimport theme from '../../../theme';\nimport * as astyles from '../../../components/styles';\nimport { blue, yellow, amber } from '@material-ui/core/colors';\nimport { AppContext } from '../../../state/appcntxt';\n//import { createRedisSession, getRedisSession, deleteRedisSession } from '../../../data/session/sessionquery';\nimport redissession from '../../../data/session/sessionquery';\n//import { session } from '../../../data';\nimport { TextF } from '../../../components/datacomponents/inputcomponents';\nimport img from './banner_home5.png';\nimport loginimg from './login_home.jpg';\nimport { getUser } from '../../../data/db/queries';\nimport { comparePwd, parseRedisResponseToObj, getCookie, setCookie, checkCookie, deleteCookie } from '../../../lib/utils';\nimport { useAppContext } from '../../../lib/userhooks';\nimport _ from 'lodash';\n//import { oauth2SignIn, fbSignIn, amzSignIn } from '../../../data/authquery';\nimport { amzSignIn } from '../../../data/auth/amzauth';\nimport { googleSignIn, googleSignInSvr } from '../../../data/auth/googleauth';\nimport { fbSignIn, fbSignIn1 } from '../../../data/auth/fbauth';\nimport { twSignIn } from '../../../data/auth/twauth';\n\nimport SaveIcon from '@material-ui/icons/Save';\n//import { AmazonIcon, GoogleIcon } from '../../../components/styles/icons';\n//import AmazonIcon  from '@material-ui/icons/Amazon';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Alert from '../../../components/snacks';\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexFlow: 'row wrap',\n        flex: 'auto',\n        width: '90%',\n        maxWidth: '90%',\n        height: 300,\n        borderRadius: 15,\n        margin: 20,\n        padding: '20px 20px 20px 50px'\n\n    },\n    panel: astyles.panel(theme),\n    panel1: astyles.panel1(theme),\n    bannerpanel: {\n        ...astyles.bannerpanel(theme),\n        [theme.breakpoints.up('xs')]: {\n            margin: 0,\n            padding: '5px 5px 5px 10px',\n            height: 400,\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: 0,\n            padding: '10px 10px 10px 25px',\n            height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            margin: 0,\n            padding: '100px 20px 20px 50px',\n            height: 700,\n        },\n        backgroundImage: `url(${img})`,\n        backgroundSize: 'cover',\n    },\n\n    banner: astyles.banner(theme),\n    centerpanel: astyles.centerpanel(theme),\n    center: astyles.center(theme),\n    loginbox: {\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: '75%',\n            width: '75%',\n            height: '85%',\n            justifyContent: 'space-around',\n            alignItems: 'flex-start',\n            alignContent: 'center',\n            margin: '10px auto auto',\n           \n        },\n        [theme.breakpoints.up('md')]: {\n            maxWidth: '45%',\n            width: '45%',\n            height: '70%',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n            alignContent: 'center',\n            margin: '30px auto auto',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n\n        opacity: 0.9,\n        //filter: 'alpha(opacity=50)',\n        borderRadius: 10,\n        backgroundColor: 'white',\n        boxShadow: '0px 0px 20px rgb(200,200,200)',\n        //   backgroundImage: `url(${loginimg})`,\n        //   backgroundSize: 'cover',\n\n    },\n    logincontrols: {\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: '90%',\n            width: '90%',\n         //   height: '15%',\n            flexFlow: 'column nowrap',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n            alignContent: 'center',\n           // border: '3px solid green'\n        },\n        [theme.breakpoints.up('md')]: {\n            maxWidth: '70%',\n            width: '70%',\n            height: '20%',\n            flexFlow: 'row wrap',\n            justifyContent: 'space-around',\n            alignItems: 'center',\n            alignContent: 'center',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        \n\n        //    / border:'1px solid red',\n\n    },\n\n}));\n\nconst Login = (props) => {\n    const classes = useStyles();\n    const uidRef = createRef();\n    const pwdRef = createRef();\n    const loginSessData = {}\n    const [open, handleAlert] = useState(false);\n    const [errmesg, setErrMesg] = useState(\"\");\n\n    const { pathname } = useLocation();\n\n    const history = useHistory();\n\n    // console.log('Pathname: '+ location.hash);\n    //console.log('Login naughty message: ' + naughty);\n\n    // const { appstate, dispatch } = useContext(AppContext);\n    const { appstate, dispatch } = useAppContext();\n\n\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n\n\n    const handleLogin = (val) => evt => {\n        let abortController = new AbortController();\n\n        const user = uidRef.current.value;\n        const pwd = pwdRef.current.value;\n\n\n\n\n        getUser(user, { signal: abortController.signal })\n            .then(user => {\n                if (comparePwd(pwd, user.pwd)) {\n\n\n                    const sessid = 'SESSION_' + user._id;\n\n                    //    createSession(user)\n                    //    .then(res=>console.log('SEssion id: '+JSON.stringify(res)));\n\n                    redissession.createRedisSession(user, loginSessData)\n                        .then(res => {\n                            //    console.log('RESULt from REDIS : >> ' + JSON.stringify(res));\n                            setCookie('sessid', sessid);\n                            sessionStorage.setItem('sessid', sessid);\n                            dispatch({ type: 'LOGIN', login: true, sessid: sessid, sessdata: loginSessData, data: user });\n\n                            history.push('/');\n                        })\n                        .catch(err => console.log(\"Redis Session error : \" + JSON.stringify(err)));\n\n\n                } else {\n                    console.log('Credentials Error');\n                    throw [4, new Error('Credentials Error')];\n                }\n            })\n            .catch(err => {\n                //  console.log('User arror is: ' + JSON.stringify(err));\n                if (err && err.length > 0) {\n                    console.log('Error is: ' + err[1].message);\n                    setErrMesg(err[1].message);\n                    handleAlert(true);\n                    //dispatch({type:'ALERT',open:true,data:err[1].message});\n                    /*  if (err[0] === 0) {\n                         return {}\n                     } */\n                }\n\n            });\n        /*     .then(() => {\n             console.log('Initiate social login.');\n             if (!(_.isEmpty(appstate.auth0))) {\n\n\n             } else {\n\n             }\n\n\n         }); */\n\n\n\n        //      const login = { login: true, uid: { name: 'Sandeep' } };\n\n\n    }\n\n\n\n\n    const handleRegister = (url) => (e) => {\n        history.push(`/${url}`);\n    }\n\n    const handleGoogleLogin = (url) => e => {\n\n        //    oauth2SignIn();\n        // googleSignIn();\n        googleSignInSvr();\n\n\n    }\n\n    const handleFBLogin = (url) => e => {\n\n        fbSignIn();\n        //fbSignIn1();\n\n    }\n\n    const handleAmzLogin = (url) => e => {\n\n        amzSignIn();\n\n    }\n\n    const handleTwLogin = (url) => e => {\n        // history.push('/oauth');\n        twSignIn();\n        // fetch('/oauth')\n        // .then(res=>{console.log(\"Twitter Response: \"+JSON.stringify(res))})\n        //.catch(err=>{console.log(\"Error is: \"+err.message)})\n    }\n\n\n\n    return (\n        <Grid2>\n            <Alert open={open} handleClose={() => handleAlert(false)}>\n                <p>{errmesg} !!!</p>\n            </Alert>\n            <Box className={classes.bannerpanel} >\n                {/*   <Paper className={classes.banner} elevation={3}> */}\n                <Box className={classes.loginbox}>\n                    <TextF ref={uidRef} label=\"User Id\" width=\"70%\" />\n                    <TextF ref={pwdRef} type='password' label=\"Password\" width=\"70%\" />\n                    <Box className={classes.logincontrols}>\n\n                        <Button onClick={handleLogin('login')} >Login</Button>\n                        <Button onClick={handleRegister('register')} >Register</Button>\n                        <Button onClick={handleGoogleLogin('googlelogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0 }} />}\n                        >Google</Button>\n                        <Button\n                            onClick={handleFBLogin('fblogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0, color: blue[700] }} />}\n                        >Facebook</Button>\n                        <Button\n                            onClick={handleAmzLogin('amzlogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0, color: yellow[700] }} />}\n                        >Amazon</Button>\n\n                        <Button\n                            onClick={handleTwLogin('twlogin')}\n                            startIcon={<FacebookIcon fontSize=\"large\" style={{ margin: 0, color: yellow[700] }} />}\n                        >Twitter</Button>\n\n\n\n                    </Box>\n                </Box>\n\n\n                {/*   </Paper> */}\n\n            </Box>\n\n\n\n\n\n        </Grid2 >\n    );\n\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}