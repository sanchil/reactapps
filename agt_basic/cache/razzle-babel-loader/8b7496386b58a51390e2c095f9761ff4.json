{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/azure/spaces/reactapps/agt_basic/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _templateObject, _templateObject2;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport styled from 'styled-components';\nimport { TextField, InputLabel, FormControl, NativeSelect, FormHelperText, Button, Input } from '@material-ui/core';\nvar useInpStyles = makeStyles(function (theme) {\n  var _txt;\n\n  return {\n    txt: (_txt = {}, _defineProperty(_txt, theme.breakpoints.up('xs'), {\n      margin: '1px  10px 1px',\n      width: '80%'\n    }), _defineProperty(_txt, theme.breakpoints.up('sm'), {\n      margin: '1px  20px 1px',\n      width: '40%'\n    }), _txt),\n    underline: {\n      borderBottomColor: 'blue',\n\n      /* '&:hover:not($disabled):before':{\n          borderBottomColor: 'blue',\n      },\n      '&:hover:not($disabled):after':{\n          borderBottomColor: 'blue',\n      }, */\n      '&:before': {\n        borderBottomColor: 'blue'\n      },\n      '&:hover': {\n        borderBottomColor: 'blue'\n      },\n      '&:after': {\n        borderBottomColor: 'blue'\n      }\n    }\n  };\n});\nexport var Inp = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var classes = useInpStyles();\n  var InputPropsObj = {\n    disableUnderline: false,\n    classes: {\n      underline: classes.underline\n    }\n  };\n  var inputPropsObj = {\n    id: \"\".concat(props.id),\n    type: \"\".concat(props.type)\n  };\n  return __jsx(TextField, {\n    inputRef: ref //   id={props.id}\n    //  type={props.type}\n    ,\n    className: classes.txt,\n    margin: \"normal\",\n    InputProps: InputPropsObj,\n    inputProps: inputPropsObj,\n    label: props.label,\n    placeholder: props.placeholder,\n    fullWidth: props.fullWidth,\n    style: {\n      width: \"\".concat(props.width)\n    },\n    multiline: props.multiline,\n    multiple: [props.multiple],\n    onChange: props.onChange\n  });\n});\nvar useSelStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    label: {\n      width: '100%'\n    }\n  };\n});\nexport var Sel = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var classes = useSelStyles();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var inputLabel = React.useRef(null);\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      labelWidth = _React$useState4[0],\n      setLabelWidth = _React$useState4[1];\n\n  React.useEffect(function () {//  setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(event.target.value);\n    };\n  };\n\n  return __jsx(React.Fragment, null, __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    classes: {\n      root: classes.label\n    },\n    htmlFor: \"age-native-simple\"\n  }, props.label), __jsx(NativeSelect, {\n    ref: ref //  value={state}\n    ,\n    onChange: props.onChange //    inputProps={{\n    //        name: 'age',\n    //        id: 'age-native-helper',\n    //    }}\n    //autoWidth={true}\n    ,\n    style: {\n      width: \"\".concat(props.width)\n    }\n  }, props.children)));\n});\nvar useSearchStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '90%',\n      '& .MuiOutlinedInput-root': {\n        //      '& fieldset': {\n        //          borderColor: 'red',\n        //      },\n        '&:hover fieldset': {\n          borderColor: 'orange'\n        } //      '&.Mui-focused fieldset': {\n        //          borderColor: 'green',\n        //      },\n\n      }\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '90%'\n    },\n    textColor: {\n      color: 'blue'\n    },\n    outline: {\n      borderRadius: '10px',\n      border: '2px solid red',\n      //  backgroundColor: 'rgb(255,255,255)',\n      //  color:'green',\n      '&:hover': {\n        border: '5px solid red '\n      }\n    }\n  };\n});\nexport var SearchField = function SearchField(props) {\n  var classes = useSearchStyles();\n  return __jsx(React.Fragment, null, __jsx(TextField, {\n    InputProps: {\n      className: classes.textColor,\n      classes: {\n        notchedOutline: classes.outline\n      }\n    },\n    className: classes.root,\n    type: \"text\",\n    label: \"Search \",\n    variant: \"outlined\",\n    fullWidth: true\n  }));\n};\nvar useFileInpStyle = makeStyles(function (theme) {\n  return {};\n});\nexport var FileInput = function FileInput(props) {\n  var classes = useFileInpStyle();\n  return __jsx(FormControl, null, __jsx(InputLabel, {\n    htmlFor: \"my-input\"\n  }, __jsx(Button, null, \"Upload\")), __jsx(Input, {\n    \"aria-describedby\": \"my-helper-text\"\n  }), __jsx(FormHelperText, null, \"We'll never share your email.\"));\n};\nexport var Findfield = styled(TextField)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\nlabel.focused {\\n    color: green;\\n  .MuiOutlinedInput-root {\\n    fieldset {\\n      border-color: red;\\n        }\\n    &:hover fieldset {\\n      border-color: yellow;     \\n    }\\n    &.Mui-focused fieldset {\\n      border-color: green;\\n        }\\n  }\\n\\n\"])));\nvar useTextStyles = makeStyles(function (theme) {\n  var _root;\n\n  return {\n    root: (_root = {}, _defineProperty(_root, theme.breakpoints.up('xs'), {\n      width: '95%',\n      margin: 5\n    }), _defineProperty(_root, theme.breakpoints.up('md'), {\n      width: function width(props) {\n        return props.width || '65%';\n      },\n      margin: 10\n    }), _defineProperty(_root, \"backgroundColor\", 'rgba(255,255,255,0.7)'), _defineProperty(_root, \"backgroundclip\", 'padding-box'), _defineProperty(_root, '& label.Mui-focused', {\n      color: 'purple'\n    }), _defineProperty(_root, '& .MuiOutlinedInput-root', {\n      '& fieldset': {\n        borderColor: blue[100],\n        borderWidth: 2\n      },\n      '&:hover fieldset': {\n        borderColor: blue[200],\n        borderWidth: 2,\n        boxShadow: \"0px 0px 5px \".concat(blue[500])\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: blue[400],\n        borderWidth: 2\n      }\n    }), _root)\n  };\n});\nexport var TextF = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var classes = useTextStyles(props);\n  return __jsx(TextField, {\n    inputRef: ref,\n    type: props.type,\n    className: classes.root,\n    label: props.label,\n    variant: \"outlined\",\n    margin: \"dense\",\n    inputProps: {\n      pattern: props.pattern\n    },\n    InputProps: props.InputProps,\n    onChange: props.onChange,\n    required: props.required\n  });\n});\nexport var StyledTextField = styled(TextField)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  label.focused {\\n    color: green; \\uD83D\\uDC9A\\n  }\\n  .MuiOutlinedInput-root {\\n    fieldset {\\n      border-color: red; \\uD83D\\uDC94\\n    }\\n    &:hover fieldset {\\n      border-color: yellow; \\uD83D\\uDC9B\\n    }\\n    &.Mui-focused fieldset {\\n      border-color: green; \\uD83D\\uDC9A\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/components/datacomponents/inputcomponents/index.js"],"names":["React","makeStyles","blue","styled","TextField","InputLabel","FormControl","NativeSelect","FormHelperText","Button","Input","useInpStyles","theme","txt","breakpoints","up","margin","width","underline","borderBottomColor","Inp","forwardRef","props","ref","classes","InputPropsObj","disableUnderline","inputPropsObj","id","type","label","placeholder","fullWidth","multiline","multiple","onChange","useSelStyles","formControl","spacing","minWidth","selectEmpty","marginTop","Sel","useState","state","setState","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","handleChange","name","event","target","value","root","children","useSearchStyles","marginLeft","marginRight","borderColor","textField","textColor","color","outline","borderRadius","border","SearchField","className","notchedOutline","useFileInpStyle","FileInput","Findfield","useTextStyles","borderWidth","boxShadow","TextF","pattern","InputProps","required","StyledTextField"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {blue,cyan} from '@material-ui/core/colors';\nimport styled from 'styled-components';\nimport theme from '../../../theme';\nimport {\n    TextField,\n    InputLabel,\n    FormControl,\n    Select,\n    NativeSelect,\n    FormHelperText,\n    Button,\n    Input,\n} from '@material-ui/core';\n\n\nconst useInpStyles = makeStyles(theme => ({\n \n    txt: {\n\n        [theme.breakpoints.up('xs')]: {\n            margin: '1px  10px 1px',\n            width: '80%',\n\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '1px  20px 1px',\n            width: '40%',\n        }\n\n    },\n  \n    underline: {\n\n        borderBottomColor: 'blue',\n\n        /* '&:hover:not($disabled):before':{\n            borderBottomColor: 'blue',\n        },\n        '&:hover:not($disabled):after':{\n            borderBottomColor: 'blue',\n        }, */\n\n        '&:before': {\n            borderBottomColor: 'blue',\n        },\n        '&:hover': {\n            borderBottomColor: 'blue',\n\n        },\n        '&:after': {\n            borderBottomColor: 'blue',\n\n        },\n\n    }\n\n}));\n\nexport const Inp = React.forwardRef((props, ref) => {\n    const classes = useInpStyles();\n\n    const InputPropsObj = {\n        disableUnderline: false,\n        classes: { underline: classes.underline },       \n    }\n\n    const inputPropsObj = {\n        id: `${props.id}`,\n        type: `${props.type}`\n    }\n\n    return (\n        <TextField\n            inputRef={ref}\n            //   id={props.id}\n            //  type={props.type}\n\n            className={classes.txt}\n            margin=\"normal\"\n            InputProps={InputPropsObj}\n            inputProps={inputPropsObj}\n            label={props.label}\n            placeholder={props.placeholder} fullWidth={props.fullWidth}\n            style={{ width: `${props.width}` }}\n            multiline={props.multiline}\n            multiple={[props.multiple]}\n            onChange={props.onChange}\n        />\n    );\n});\n\nconst useSelStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    label: {\n        width: '100%'\n    }\n}));\n\nexport const Sel = React.forwardRef((props, ref) => {\n    const classes = useSelStyles();\n    const [state, setState] = React.useState(\"\");\n\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    React.useEffect(() => {\n        //  setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    const handleChange = name => event => {\n        setState(event.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <FormControl className={classes.formControl}>\n                <InputLabel classes={{ root: classes.label }} htmlFor=\"age-native-simple\">{props.label}</InputLabel>\n\n                <NativeSelect\n\n                    ref={ref}\n                    //  value={state}\n                    onChange={props.onChange}\n                    //    inputProps={{\n                    //        name: 'age',\n                    //        id: 'age-native-helper',\n                    //    }}\n                    //autoWidth={true}\n                    style={{ width: `${props.width}` }}                >\n                    {props.children}\n\n\n                </NativeSelect>\n            </FormControl>\n\n        </React.Fragment>\n    );\n\n});\n\n\n\n\nconst useSearchStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '90%',\n\n        '& .MuiOutlinedInput-root': {\n            //      '& fieldset': {\n            //          borderColor: 'red',\n            //      },\n            '&:hover fieldset': {\n                borderColor: 'orange',\n            },\n            //      '&.Mui-focused fieldset': {\n            //          borderColor: 'green',\n            //      },\n        }\n\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '90%',\n\n\n    },\n    textColor: {\n        color: 'blue'\n    },\n\n    outline: {\n        borderRadius: '10px',\n        border: '2px solid red',\n        //  backgroundColor: 'rgb(255,255,255)',\n        //  color:'green',\n        '&:hover': {\n            border: '5px solid red ',\n        },\n    },\n\n}));\n\nexport const SearchField = (props) => {\n    const classes = useSearchStyles();\n    return (\n        <React.Fragment>\n            <TextField\n\n\n                InputProps={{\n                    className: classes.textColor,\n                    classes: {\n                        notchedOutline: classes.outline,\n                    }\n                }}\n\n                className={classes.root}\n                type=\"text\"\n                label=\"Search \"\n                variant=\"outlined\"\n                fullWidth />\n        </React.Fragment>\n    );\n}\n\n\nconst useFileInpStyle = makeStyles(theme => ({\n\n}));\n\nexport const FileInput = (props) => {\n    const classes = useFileInpStyle();\n    return (\n        <FormControl>\n            <InputLabel htmlFor=\"my-input\"><Button>Upload</Button></InputLabel>\n            <Input aria-describedby=\"my-helper-text\" />\n            <FormHelperText >We'll never share your email.</FormHelperText>\n        </FormControl>\n    );\n}\n\nexport const Findfield = styled(TextField)`\nlabel.focused {\n    color: green;\n  .MuiOutlinedInput-root {\n    fieldset {\n      border-color: red;\n        }\n    &:hover fieldset {\n      border-color: yellow;     \n    }\n    &.Mui-focused fieldset {\n      border-color: green;\n        }\n  }\n\n`\n\n\n\n\n\n\n\n\n\nconst useTextStyles = makeStyles(theme=>({\n  root: {\n    [theme.breakpoints.up('xs')]:{\n      width:'95%',\n      margin:5,\n    },\n    [theme.breakpoints.up('md')]:{\n      width:props=>(props.width)||'65%',\n      margin:10,\n    },\n    backgroundColor:'rgba(255,255,255,0.7)',\n    backgroundclip: 'padding-box',\n\n    '& label.Mui-focused': {\n      color: 'purple',\n    },\n\n    //'& .MuiInput-underline:after': {\n    //  borderBottomColor: 'black',\n    //},\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: blue[100],\n        borderWidth: 2,\n        \n     \n      },\n      '&:hover fieldset': {\n        borderColor: blue[200],\n        borderWidth: 2,        \n        boxShadow:`0px 0px 5px ${blue[500]}`\n\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: blue[400],\n        borderWidth:2,\n       \n      },\n    },\n\n  \n\n  },\n}));\n\nexport const TextF = React.forwardRef((props,ref) => {\n  const classes = useTextStyles(props);\n  return ( <TextField \n    inputRef={ref}\n    type={props.type}\n    className={classes.root} \n    label={props.label} \n    variant=\"outlined\" \n    margin=\"dense\"\n    inputProps={{\n        pattern:props.pattern\n    }}\n    InputProps={props.InputProps}\n    onChange={props.onChange}\n    required={props.required}/>);\n});\n\n\nexport const StyledTextField = styled(TextField)`\n  label.focused {\n    color: green; 💚\n  }\n  .MuiOutlinedInput-root {\n    fieldset {\n      border-color: red; 💔\n    }\n    &:hover fieldset {\n      border-color: yellow; 💛\n    }\n    &.Mui-focused fieldset {\n      border-color: green; 💚\n    }\n  }\n`;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}