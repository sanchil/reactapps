{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { TextF } from '../../../components/datacomponents/inputcomponents'; //import { animated, useTransition } from 'react-spring';\n\nconst useStyles = makeStyles(theme => ({\n  formbox: {\n    boxSizing: 'border-box',\n    display: 'flex',\n    flex: 'auto',\n    flexFlow: 'row wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '80%',\n    height: '80%',\n    opacity: 1.0,\n    transition: 'width 2s height 2s'\n  },\n  formsection: {\n    [theme.breakpoints.up('xs')]: {\n      flexFlow: 'column wrap' //    height: 450,\n\n    },\n    [theme.breakpoints.up('md')]: {\n      flexFlow: 'row wrap' //      height: 200,\n\n    },\n    boxSizing: 'border-box',\n    display: 'flex',\n    flex: 'auto',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '80%',\n    margin: 'auto' //   borderTop: '1px solid grey',\n\n  },\n  formheader: {\n    [theme.breakpoints.up('xs')]: {\n      width: '90%',\n      height: '10%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '10%',\n      height: '90%'\n    },\n    boxSizing: 'border-box',\n    display: 'flex',\n    flex: 'auto',\n    flexFlow: 'row wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start' //  border: '2px solid green',\n\n  },\n  formcontent: {\n    [theme.breakpoints.up('xs')]: {\n      width: '90%',\n      height: '80%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '90%',\n      height: '90%'\n    },\n    boxSizing: 'border-box',\n    display: 'flex',\n    flex: 'auto',\n    flexFlow: 'row wrap',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    width: '80%',\n    height: '90%' //    border: '2px solid green',\n\n  },\n  formcontrol: {\n    display: 'flex',\n    flex: 'auto',\n    flexFlow: 'row nowrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    padding: '50px 300px 10px 10px',\n    width: '100%',\n    margin: 'auto' //     border:'1px solid blue',\n\n  },\n  \"@keyframes anim1\": {}\n})); //const FormBox = animated(Box);\n\nconst FormBox = Box;\n\nconst RegisterForm = props => {\n  const classes = useStyles();\n  /* const transitions = useTransition(!props.submitted, null, {\n      from: { opacity: 0 },\n      enter: { opacity: 1 },\n      leave: { opacity: 0 },\n  } */\n\n  /*     return transitions.map(({item,key,props1})=>\n          item\n          ?\n          (<FormBox className={classes.formbox} style={props1}>\n              \n              <Box className={classes.formsection} >\n                  <Box className={classes.formheader}>\n                      User Id\n                  </Box>\n                  <Box className={classes.formcontent} >\n                      <TextF\n                          type=\"email\"\n                          label=\"Email Id: This will be your user id\"\n                          width=\"72%\"\n                          onChange={props.handleChange('email')} required />\n                      <TextF\n                          type=\"password\"\n                          label=\"Password\"\n                          width=\"35%\"\n                          onChange={props.handleChange('pwd')} required />\n                      <TextF\n                          type=\"password\"\n                          label=\"Pls re-enter the same password\"\n                          width=\"35%\"\n                          onChange={props.handleChange('pwd1')} required />\n  \n                  </Box>\n              </Box>\n              <Box className={classes.formsection}>\n                  <Box className={classes.formheader}>\n                      Details\n                  </Box>\n                  <Box className={classes.formcontent}>\n  \n                      <TextF\n                          label=\"First Name\"\n                          width=\"35%\"\n                          onChange={props.handleChange('fname')} />\n                      <TextF\n                          label=\"Last Name\"\n                          width=\"35%\"\n                          onChange={props.handleChange('lname')} />\n                      <TextF\n                          label=\"Phone\"\n                          width=\"72%\"\n                          onChange={props.handleChange('phone')} />\n  \n                  </Box>\n              </Box>\n              <Box className={classes.formsection}>\n                  <Box className={classes.formheader}>\n                      Address\n                  </Box>\n                  <Box className={classes.formcontent}>\n                      <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                      <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                      <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                      <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                      <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                      <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                      <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                  </Box>\n              </Box>\n  \n  \n              <Box className={classes.formsection}>\n                  <Box className={classes.formheader}>\n  \n                  </Box>\n                  <Box className={classes.formcontent}>\n                      <Box className={classes.formcontrol}>\n                          <Button onClick={props.handleSubmit}>Submit</Button>\n                          <Button>Reset</Button>\n                      </Box>\n  \n                  </Box>\n              </Box>\n              </FormBox>)\n          :\n          (<div>\n              Thank you for submitting the form !!;\n          </div>)\n          \n          );\n  \n   */\n\n  if (!props.submitted) {\n    return __jsx(Box, {\n      className: classes.formbox\n    }, __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }, \"User Id\"), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(TextF, {\n      type: \"email\",\n      label: \"Email Id: This will be your user id\",\n      width: \"72%\",\n      onChange: props.handleChange('email'),\n      required: true\n    }), __jsx(TextF, {\n      type: \"password\",\n      label: \"Password\",\n      width: \"35%\",\n      onChange: props.handleChange('pwd'),\n      required: true\n    }), __jsx(TextF, {\n      type: \"password\",\n      label: \"Pls re-enter the same password\",\n      width: \"35%\",\n      onChange: props.handleChange('pwd1'),\n      required: true\n    }))), __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }, \"Details\"), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(TextF, {\n      label: \"First Name\",\n      width: \"35%\",\n      onChange: props.handleChange('fname')\n    }), __jsx(TextF, {\n      label: \"Last Name\",\n      width: \"35%\",\n      onChange: props.handleChange('lname')\n    }), __jsx(TextF, {\n      label: \"Phone\",\n      width: \"72%\",\n      onChange: props.handleChange('phone')\n    }))), __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }, \"Address\"), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(TextF, {\n      label: \"Unit No\",\n      width: \"10%\",\n      onChange: props.handleAddrChange('unitno')\n    }), __jsx(TextF, {\n      label: \"Street No\",\n      width: \"10%\",\n      onChange: props.handleAddrChange('stno')\n    }), __jsx(TextF, {\n      label: \"Street Name\",\n      width: \"48%\",\n      onChange: props.handleAddrChange('stname')\n    }), __jsx(TextF, {\n      label: \"City\",\n      width: \"50%\",\n      onChange: props.handleAddrChange('city')\n    }), __jsx(TextF, {\n      label: \"Zip\",\n      width: \"20%\",\n      onChange: props.handleAddrChange('zip')\n    }), __jsx(TextF, {\n      label: \"Province\",\n      width: \"45%\",\n      onChange: props.handleAddrChange('province')\n    }), __jsx(TextF, {\n      label: \"Country\",\n      width: \"25%\",\n      onChange: props.handleAddrChange('country')\n    }))), __jsx(Box, {\n      className: classes.formsection\n    }, __jsx(Box, {\n      className: classes.formheader\n    }), __jsx(Box, {\n      className: classes.formcontent\n    }, __jsx(Box, {\n      className: classes.formcontrol\n    }, __jsx(Button, {\n      onClick: props.handleSubmit\n    }, \"Submit\"), __jsx(Button, null, \"Reset\")))));\n  } else {\n    return __jsx(\"div\", null, \"Thank you for submitting the form !!;\");\n  }\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/azure/spaces/reactapps/agt_basic/src/app/content/admin/register/registerform.js"],"names":["React","makeStyles","Box","Button","TextF","useStyles","theme","formbox","boxSizing","display","flex","flexFlow","justifyContent","alignItems","alignContent","width","height","opacity","transition","formsection","breakpoints","up","margin","formheader","formcontent","formcontrol","padding","FormBox","RegisterForm","props","classes","submitted","handleChange","handleAddrChange","handleSubmit"],"mappings":"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","sourcesContent":["import React, { userEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { TextF } from '../../../components/datacomponents/inputcomponents';\n//import { animated, useTransition } from 'react-spring';\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles(theme => ({\n    formbox: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '80%',\n        opacity: 1.0,\n        transition: 'width 2s height 2s',\n    },\n    formsection: {\n        [theme.breakpoints.up('xs')]: {\n            flexFlow: 'column wrap',\n            //    height: 450,\n        },\n        [theme.breakpoints.up('md')]: {\n            flexFlow: 'row wrap',\n            //      height: 200,\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        margin: 'auto',\n        //   borderTop: '1px solid grey',\n    },\n    formheader: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '10%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n\n        //  border: '2px solid green',\n    },\n    formcontent: {\n        [theme.breakpoints.up('xs')]: {\n            width: '90%',\n            height: '80%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '90%',\n            height: '90%',\n        },\n        boxSizing: 'border-box',\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        width: '80%',\n        height: '90%',\n        //    border: '2px solid green',\n    },\n    formcontrol: {\n        display: 'flex',\n        flex: 'auto',\n        flexFlow: 'row nowrap',\n        justifyContent: 'center',\n        alignContent: 'center',\n        alignItems: 'center',\n        padding: '50px 300px 10px 10px',\n\n        width: '100%',\n        margin: 'auto',\n        //     border:'1px solid blue',\n    },\n\n    \"@keyframes anim1\": {\n\n    }\n\n}))\n\n//const FormBox = animated(Box);\n\nconst FormBox = Box;\n\nconst RegisterForm = (props) => {\n    const classes = useStyles();\n\n    /* const transitions = useTransition(!props.submitted, null, {\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    } */\n\n    /*     return transitions.map(({item,key,props1})=>\n            item\n            ?\n            (<FormBox className={classes.formbox} style={props1}>\n                \n                <Box className={classes.formsection} >\n                    <Box className={classes.formheader}>\n                        User Id\n                    </Box>\n                    <Box className={classes.formcontent} >\n                        <TextF\n                            type=\"email\"\n                            label=\"Email Id: This will be your user id\"\n                            width=\"72%\"\n                            onChange={props.handleChange('email')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Pls re-enter the same password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd1')} required />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Details\n                    </Box>\n                    <Box className={classes.formcontent}>\n    \n                        <TextF\n                            label=\"First Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('fname')} />\n                        <TextF\n                            label=\"Last Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('lname')} />\n                        <TextF\n                            label=\"Phone\"\n                            width=\"72%\"\n                            onChange={props.handleChange('phone')} />\n    \n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Address\n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                        <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                        <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                        <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                        <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                        <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                        <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                    </Box>\n                </Box>\n    \n    \n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n    \n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <Box className={classes.formcontrol}>\n                            <Button onClick={props.handleSubmit}>Submit</Button>\n                            <Button>Reset</Button>\n                        </Box>\n    \n                    </Box>\n                </Box>\n                </FormBox>)\n            :\n            (<div>\n                Thank you for submitting the form !!;\n            </div>)\n            \n            );\n    \n     */\n\n    if (!props.submitted) {\n        return (\n            <Box className={classes.formbox}>\n\n                <Box className={classes.formsection} >\n                    <Box className={classes.formheader}>\n                        User Id\n                </Box>\n                    <Box className={classes.formcontent} >\n                        <TextF\n                            type=\"email\"\n                            label=\"Email Id: This will be your user id\"\n                            width=\"72%\"\n                            onChange={props.handleChange('email')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd')} required />\n                        <TextF\n                            type=\"password\"\n                            label=\"Pls re-enter the same password\"\n                            width=\"35%\"\n                            onChange={props.handleChange('pwd1')} required />\n\n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Details\n                </Box>\n                    <Box className={classes.formcontent}>\n\n                        <TextF\n                            label=\"First Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('fname')} />\n                        <TextF\n                            label=\"Last Name\"\n                            width=\"35%\"\n                            onChange={props.handleChange('lname')} />\n                        <TextF\n                            label=\"Phone\"\n                            width=\"72%\"\n                            onChange={props.handleChange('phone')} />\n\n                    </Box>\n                </Box>\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n                        Address\n                </Box>\n                    <Box className={classes.formcontent}>\n                        <TextF label=\"Unit No\" width=\"10%\" onChange={props.handleAddrChange('unitno')} />\n                        <TextF label=\"Street No\" width=\"10%\" onChange={props.handleAddrChange('stno')} />\n                        <TextF label=\"Street Name\" width=\"48%\" onChange={props.handleAddrChange('stname')} />\n                        <TextF label=\"City\" width=\"50%\" onChange={props.handleAddrChange('city')} />\n                        <TextF label=\"Zip\" width=\"20%\" onChange={props.handleAddrChange('zip')} />\n                        <TextF label=\"Province\" width=\"45%\" onChange={props.handleAddrChange('province')} />\n                        <TextF label=\"Country\" width=\"25%\" onChange={props.handleAddrChange('country')} />\n                    </Box>\n                </Box>\n\n\n                <Box className={classes.formsection}>\n                    <Box className={classes.formheader}>\n\n                    </Box>\n                    <Box className={classes.formcontent}>\n                        <Box className={classes.formcontrol}>\n                            <Button onClick={props.handleSubmit}>Submit</Button>\n                            <Button>Reset</Button>\n                        </Box>\n\n                    </Box>\n                </Box>\n            </Box>\n        );\n    } else {\n        return (<div>\n            Thank you for submitting the form !!;\n        </div>);\n\n    }\n\n\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}