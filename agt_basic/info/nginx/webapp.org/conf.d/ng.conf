map $http_origin $current_origin {
	default https://webapp.org;
	http://redis http://redis;
	https://accounts.google.com/o/oauth2/v2/auth https://accounts.google.com/o/oauth2/v2/auth;
	#http://www.2nest.com http://www.2nest.com;
	#http://www.2nest.ca http://www.2nests.ca;
	#http://172.31.26.71 http://172.31.26.71;
	#http://35.163.170.231 http://35.163.170.231;

}

upstream redisbackend {
  #       server backend1.example.com weight=5;
          server webapp.org:6379       max_fails=3 fail_timeout=30s;
   #      server unix:/tmp/backend3;
          keepalive 1024;
   #      server backup1.example.com  backup;
  }

upstream couchdbsvr {
  #       server backend1.example.com weight=5;
          server webapp.org:5984       max_fails=3 fail_timeout=30s;
   #      server unix:/tmp/backend3;
          keepalive 1024;
   #      server backup1.example.com  backup;
  }

server{
 
 	listen 80;
 	listen [::]:80;
 	listen 443 ssl;
 	listen [::]:443 ssl;
 	server_name webapp.org;
  	ssl_certificate     /etc/nginx/ssl/servercert.pem;
	ssl_certificate_key /etc/nginx/ssl/serverkey.pem;


location / {


   			if ($request_method = 'OPTIONS') {
                        	add_header 'Access-Control-Allow-Origin' '$current_origin';
                        	add_header 'X-Debug-Msg' 'This is the origin $current_origin';
                        	add_header 'Access-Control-Allow-Credentials' 'true';
                        	#add_header 'Access-Control-Allow-Origin' '*';
                        	add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, DELETE, OPTIONS';
				add_header 'Content-Security-Policy' "default-src 'self' http://localhost:5984 \
				https://api.cloudinary.com http://api.cloudinary.com https://res.cloudinary.com http://res.cloudinary.com;\
				script-src  https://assets.loginwithamazon.com/sdk/na/login1.js https://apis.google.com/js/api.js \
				'nonce-amzabcxyz' 'nonce-agtsessionabcxyz' 'nonce-fbabcxyz';\
				img-src https://abs.twimg.com https://*.twimg.com https://pbs.twimg.com data: ;\
				style-src 'sha256-0EZqoz+oBhx7gF4nvY2bSqoGyy4zLjNF+SDQXGp/ZrY='; ";
                        	#add_header 'Set-Cookie' 'HttpOnly;Secure;SameSite=None';
                        	add_header 'Set-Cookie' 'nginxcookie=hello nginx world';
                        	#
                        	# Custom headers and headers various browsers *should* be OK with but aren't
                        	#
                        	add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,\
				Content-Type,Range,Authorization';
                        	#
                        	# Tell client that this pre-flight info is valid for 20 days
                        	#
                        	add_header 'Access-Control-Max-Age' 1728000;
                        	add_header 'Content-Type' 'text/plain; charset=utf-8';
                        	add_header 'Content-Length' 0;
                        	return 204;
	               	}


 			#rewrite /e/(.*) /$1 break;
 			proxy_pass http://webapp.org:3000/;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection 'upgrade';
    			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
    			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		#	proxy_set_header Authorization 'Basic NzI1ODQ3MTEzNjUxNDc0OjBiQXZLbGdhdTBXbHk3RXU4NUJzNnZEQmdsQQ==';
	#		proxy_pass_header  Authorization;
#			proxy_set_header Authorization $http_authorization;
	#		proxy_set_header Origin http://webapp;
	#		proxy_pass_header  Origin;
 	}





location /db {


   			if ($request_method = 'OPTIONS') {
                        	add_header 'Access-Control-Allow-Origin' '$current_origin';
                        	add_header 'Access-Control-Allow-Credentials' 'true';
                        	#add_header 'Access-Control-Allow-Origin' '*';
				add_header Content-Security-Policy "default-src 'self' http://localhost:5984 \
				https://webapp.org:5984	http://webapp.org:5984 \
				https://h-gill.com:5984 http://h-gill.com:5984 \
				https://api.cloudinary.com http://api.cloudinary.com \
				https://res.cloudinary.com http://res.cloudinary.com;";
                        	#add_header 'Set-Cookie' 'HttpOnly;Secure;SameSite=None';
				add_header 'Access-Control-Allow-Methods' 'HEAD, GET, POST, PUT, DELETE, OPTIONS';
                        	#
                        	# Custom headers and headers various browsers *should* be OK with but aren't
                        	#
                        	add_header 'Access-Control-Allow-Headers' 'Origin,DNT,User-Agent,X-Requested-With,\
				If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                        	#
                        	# Tell client that this pre-flight info is valid for 20 days
                        	#
                        	add_header 'Access-Control-Max-Age' 1728000;
                        	add_header 'Content-Type' 'text/plain; charset=utf-8';
                        	add_header 'Content-Length' 0;
                        	return 204;
	                	}

 				#rewrite /e/(.*) /$1 break;
 				#proxy_pass http://webapp.org:5984/;
 				proxy_pass http://couchdbsvr/;
				proxy_redirect off;
				proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection 'upgrade';
    				proxy_set_header Host $host;
				proxy_cache_bypass $http_upgrade;
    				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header X-Forwarded-Proto $scheme;
#				proxy_pass_header  Authorization;
#				proxy_set_header Authorization $http_authorization;
 		}


# quick test redis

location = /session/foo {
     		set $value 'first';
     		redis2_query set one $value;
     		redis2_pass 127.0.0.1:6379;
		
}



 # GET /session/get?key=some_key

 location = /session/get {

     			set $REDISSERVER 'redisbackend';	
     			set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
     			redis2_query get $key;
     			redis2_pass $REDISSERVER;
 }


 # GET /session/get?del=some_key

 location = /session/del {

     			set $REDISSERVER 'redisbackend';	
     			set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
     			redis2_query del $key;
     			redis2_pass $REDISSERVER;
 }


 # GET /set?key=one&val=first%20value

 location = /session/set {




     			set $REDISSERVER 'redisbackend';	
     			set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
     			set_unescape_uri $val $arg_val;  # this requires ngx_set_misc
     			redis2_query set $key $val;
    			redis2_pass $REDISSERVER;
 }


 location = /session/raw {


     			set $REDISSERVER 'redisbackend';
     			set_unescape_uri $query $query_string; # this requires the ngx_set_misc module
     			redis2_raw_query $query;
     			redis2_pass $REDISSERVER;
 			}



#	location /gauth/ {
#     		if ($request_method = 'OPTIONS') {
#        		add_header 'Access-Control-Allow-Origin' '$current_origin' always;
#        		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#        		#
#        		# Custom headers and headers various browsers *should* be OK with but aren't
#        		#
#        		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#        		#
#        		# Tell client that this pre-flight info is valid for 20 days
#        		#
#        		add_header 'Access-Control-Max-Age' 1728000;
#        		add_header 'Content-Type' 'text/plain; charset=utf-8';
#        		add_header 'Content-Length' 0;
#        		return 204;
#     		}
#     		if ($request_method = 'POST') {
#        		add_header 'Access-Control-Allow-Origin' '$current_origin' always;
#        		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#        		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#        		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
#     		}
#     		if ($request_method = 'GET') {
#			#rewrite ^ https://accounts.google.com/o/oauth2/v2/auth break;
#        		add_header 'Access-Control-Allow-Origin' '$current_origin' always;
#        		#add_header 'X-Origin-Value' '$current_origin';
#        		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#        		add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#        		add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
#     		}
#
#		rewrite ^ https://accounts.google.com/o/oauth2/v2/auth break;
#      		proxy_pass       https://accounts.google.com/o/oauth2/v2/auth/;
#   		proxy_set_header X-Real-IP          $remote_addr;
#   		proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
#   		proxy_set_header Host               $http_host;
#   		proxy_set_header X-Forwarded-Host   $host;
#   		proxy_set_header X-Forwarded-Server $host;
#	}




}




