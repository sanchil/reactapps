# https://kubernetes.io/docs/tasks/administer-cluster/certificates/


######################################################################
# ca key and ca certificate
#
#
######################################################################

# Generate a ca.key with 2048bit:

openssl genrsa -out ca.key 2048

# According to the ca.key generate a ca.crt (use -days to set the certificate effective time):
# MASTER_CLUSTER_IP is the service cluster ip for the apiserver

openssl req -x509 -new -nodes -key ca.key -subj "/CN=webapp" -days 10000 -out ca.crt


######################################################################
# server key and server certificate
#
#
######################################################################


# Generate a server.key with 2048bit:

openssl genrsa -out server.key 2048


######################################################################
# config file
######################################################################

[ req ]
default_bits = 2048
prompt = no
default_md = sha256
req_extensions = req_ext
distinguished_name = dn

[ dn ]
C = CA
ST = ON
L = TOR
O = webapp
OU = webapp
CN = webapp

[ req_ext ]
subjectAltName = @alt_names

[ alt_names ]
DNS.1 = webapp.org
DNS.2 = localhost
IP.1 = 127.0.0.1


#DNS.1 = kubernetes
#DNS.2 = kubernetes.default
#DNS.3 = kubernetes.default.svc
#DNS.4 = kubernetes.default.svc.cluster
#DNS.5 = kubernetes.default.svc.cluster.local
#IP.1 = <MASTER_IP>
#IP.2 = <MASTER_CLUSTER_IP>

[ v3_ext ]
authorityKeyIdentifier=keyid,issuer:always
basicConstraints=CA:FALSE
keyUsage=keyEncipherment,dataEncipherment
extendedKeyUsage=serverAuth,clientAuth
subjectAltName=@alt_names

######################################################################
# csr: Generate the certificate signing request based on the config file:
######################################################################

openssl req -new -key server.key -out server.csr -config csr.conf

# Generate the server certificate using the ca.key, ca.crt and server.csr:

openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key \
-CAcreateserial -out server.crt -days 10000 \
-extensions v3_ext -extfile csr.conf

# View the certificate:

openssl x509  -noout -text -in ./server.crt


######################################################################
# another way to generate key -> csr -> crt
######################################################################

openssl genrsa -des3 -passout pass:xxxx -out keypair.key 2048
openssl rsa -in keypair.key -passin pass:xxxx -out new.key
openssl req -new -key -in new.key -out new.csr

openssl x509 -req -days 365 -in new.csr -signkey new.key -out new.crt

or

openssl req -newkey rsa:2048 -nodes -keyout new.key -out new.csr
openssl x509 -req -days 365 -in new.csr -signkey new.key -out new.crt


